function SearchPointerCd(offset)
	gg.clearResults()
    local offsetValue = tonumber(offset, 16)
    if not offsetValue then
        print("Error: Invalid offset format.")
        return
    end
    local libName = "libunity.so"
    local libRanges = gg.getRangesList(libName)
    if #libRanges == 0 then
        print("Error: Unable to find library range.")
        return
    end
    local libAddress = libRanges[3].start
    local address = libAddress + offsetValue
    gg.setRanges(gg.REGION_ANONYMOUS)
    gg.setVisible(false)
    gg.searchNumber(address, gg.TYPE_QWORD)
end
function SearchPointerO(offset)
	gg.clearResults()
    local offsetValue = tonumber(offset, 16)
    if not offsetValue then
        print("Error: Invalid offset format.")
        return
    end
    local libName = "global-metadata.dat"
    local libRanges = gg.getRangesList(libName)
    if #libRanges == 0 then
        print("Error: Unable to find library range.")
        return
    end
    local libAddress = libRanges[1].start
    local address = libAddress + offsetValue
    gg.setRanges(gg.REGION_OTHER)
    gg.setVisible(false)
    gg.searchNumber(address, gg.TYPE_QWORD)
    local results = gg.getResults(9999)
    for i, v in ipairs(results) do
        v.address = v.address - 0x10
        v.flags = gg.TYPE_DWORD
    end
    gg.loadResults(results)
    gg.refineNumber("0", gg.TYPE_DWORD, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)
end
function SearchPointerA(passcount)
	local passcount = tonumber(passcount)
    gg.setRanges(gg.REGION_ANONYMOUS)
    count = gg.getResultsCount()
    if count == 0 then
		gg.alert("ポインタ検索ができませんでした")
    end
    yy = gg.getResults(1000)
    gg.clearResults()
    i = 1
    c = 1
    s = {}
    while (i-1) < count do
        yy[i].address = yy[i].address + 0xb400000000000000
		gg.setVisible(false)
        gg.searchNumber(yy[i].address, gg.TYPE_QWORD)
        cnt = gg.getResultsCount()
		if cnt >= passcount then	
			break
		end
		gg.clearResults()
		i = i + 1
    end
	local count = gg.getResultsCount()
	if count == 0 then
		gg.alert("Not Found A")
		os.exit()
	end
end
function temporarilyhide()
	gg.setVisible(false)
	while true do
	if gg.isVisible() then
		break 
		end
	end 
end
function IncludeCheckAndTrueFalseA(targetName)
    local results = gg.getListItems()
    local found = false
    for _, result in ipairs(results) do
        if result.name and string.find(result.name, targetName) then
            found = true
            break
        end
    end
    if found then
        A = true
    else
        A = false
    end
end
function main()
    IncludeCheckAndTrueFalseA("UserHunterWeapon")
	main_Selected = {A, B}	
	gg.clearResults()
	local offset = {0x2C, 0xFC, 0x10, 0x14, 0x18, 0x1C}
	local Type ={gg.TYPE_DWORD,gg.TYPE_FLOAT}
	local function applyoffset(selectedOffset,selectType)
		local results = gg.getResults(9999)
		gg.clearResults()
		for i, v in ipairs(results) do
			v.address = v.address + selectedOffset
			v.flags = selectType
		end
		gg.loadResults(results)
		gg.getResults(9999)
	end
	gg.setVisible(false)	
    firstMenu = gg.choice({
		(main_Selected[1] and "[ON]    武器の強化レベル" or "[OFF]    武器の強化レベル"),
		(main_Selected[2] and "[ON]    ゲーム速度4倍,ワンパンダメージ" or "[OFF]    ゲーム速度4倍,ワンパンダメージ"),
		"[X]    おわる"
	}, nil, "テスト")
    if firstMenu == nil then
		temporarilyhide()	
		main()
	elseif firstMenu == 1 then	
		local results = gg.getListItems()
		local filteredResults = {}
		for _, v in ipairs(results) do
			if v.name == "UserHunterWeapon(0x2C)_WeaponLevel" then
				table.insert(filteredResults, v)
			end
		end
		gg.loadResults(filteredResults)
		local count = gg.getResultsCount()
		if count >= 1 then
		else
			SearchPointerO("1A965A")
			SearchPointerA("10")
			applyoffset(offset[1],Type[1])
			gg.refineNumber("1~5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)				
			local results = gg.getResults(9999)
			for i, v in ipairs(results) do
				v.name = "UserHunterWeapon(0x2C)_WeaponLevel"
			end
			gg.addListItems(results)
		end
		UserHunterWeapon_WeaponLevel()
		main()	
	elseif firstMenu == 2 then
		if B == false then
			B = true
			local results = gg.getListItems()
			local filteredResults = {}
			for _, v in ipairs(results) do
				if v.name == "??(0xFC)_GameSpeed" then
					table.insert(filteredResults, v)
				end
			end
			gg.loadResults(filteredResults)
			local count = gg.getResultsCount()
			if count >= 1 then
			else		
				SearchPointerCd("4760")
				applyoffset(offset[2],Type[2])
				gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
				local results = gg.getResults(9999)
				for i, v in ipairs(results) do
					v.name = "??(0xFC)_GameSpeed"
				end
				gg.addListItems(results)
			end
			gg.getResults(9999)
			gg.editAll("4", gg.TYPE_FLOAT)
			gg.clearResults()
			local results = gg.getListItems()
			local filteredResults = {}
			for _, v in ipairs(results) do
				if v.name == "PhysicalDamageData(0x10)_CutDamege" then
					table.insert(filteredResults, v)
				end
			end
			gg.loadResults(filteredResults)
			local count = gg.getResultsCount()
			if count >= 1 then
			else				
				SearchPointerO("13B202")
				SearchPointerA("10")
				applyoffset(offset[3],Type[1])
				gg.refineNumber("0~1,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)	
				local results = gg.getResults(9999)
				for i, v in ipairs(results) do
					v.name = "PhysicalDamageData(0x10)_CutDamege"
				end
				gg.addListItems(results)
			end		
			gg.getResults(9999)
			gg.editAll("150,000", gg.TYPE_DWORD)
			applyoffset(offset[4],Type[1])
			gg.editAll("150,000", gg.TYPE_DWORD)
			applyoffset(offset[5],Type[1])			
			gg.editAll("150,000", gg.TYPE_DWORD)
			applyoffset(offset[6],Type[1])		
			gg.editAll("150,000", gg.TYPE_DWORD)
		elseif B == true then	
			B = false
			local results = gg.getListItems()
			local filteredResults = {}
			for _, v in ipairs(results) do
				if v.name == "??(0xFC)_GameSpeed" then
					table.insert(filteredResults, v)
				end
			end
			gg.loadResults(filteredResults)
			gg.getResults(9999)
			gg.editAll("1", gg.TYPE_FLOAT)
			gg.clearResults()
			local results = gg.getListItems()
			local filteredResults = {}
			for _, v in ipairs(results) do
				if v.name == "PhysicalDamageData(0x10)_CutDamege" then
					table.insert(filteredResults, v)
				end
			end
			gg.loadResults(filteredResults)
			gg.getResults(9999)
			gg.editAll("150", gg.TYPE_DWORD)
			applyoffset(offset[4],Type[1])
			gg.editAll("150", gg.TYPE_DWORD)
			applyoffset(offset[5],Type[1])			
			gg.editAll("150", gg.TYPE_DWORD)
			applyoffset(offset[6],Type[1])		
			gg.editAll("150", gg.TYPE_DWORD)	
		end
		main()
	elseif firstMenu == 3 then
		gg.clearList()
		gg.clearResults()
	    os.exit()
	end
end
			function UserHunterWeapon_WeaponLevel()
				gg.getResults(9999)
				gg.setVisible(false)
				local WeaponLevel = {"5", "4"}
				UserHunterWeaponWeaponLevelMenu = gg.choice({
					(UserHunterWeaponWeaponLevel_Selected[1] and "-> [1]    Lv5/5" or "[1]    Lv5/5"),
					(UserHunterWeaponWeaponLevel_Selected[2] and "-> [2]    Lv4/5" or "[2]    Lv4/5"),
					(UserHunterWeaponWeaponLevel_Selected[3] and "-> [3]    任意の値" or "[3]    任意の値"),
					"\n[←]    もどる"
				}, nil, "全武器の強化レベル\n(適用後に強化・アップグレードすることでデータが保存されます)")
				if UserHunterWeaponWeaponLevelMenu == nil then
					temporarilyhide()
					UserHunterWeapon_WeaponLevel()
				elseif UserHunterWeaponWeaponLevelMenu >= 1 and UserHunterWeaponWeaponLevelMenu <= 3 then
					for i = 1, 3 do
						UserHunterWeaponWeaponLevel_Selected[i] = false
					end
					UserHunterWeaponWeaponLevel_Selected[UserHunterWeaponWeaponLevelMenu] = true				
					if UserHunterWeaponWeaponLevelMenu >= 1 and UserHunterWeaponWeaponLevelMenu <= 2 then
						local chosenValue = WeaponLevel[UserHunterWeaponWeaponLevelMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
						UserHunterWeapon_WeaponLevel()
					elseif UserHunterWeaponWeaponLevelMenu == 3 then
						while true do
							gg.setVisible(false)
							val = gg.prompt({[1] = "全武器の強化レベルを変更\n(範囲1~5, Dword)"}, {[1] = ""})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
						UserHunterWeapon_WeaponLevel()
					end
				elseif UserHunterWeaponWeaponLevelMenu == 4 then
					main()
				end
			end	
A = false
B = false
gg.clearList()
gg.clearResults()
UserHunterWeaponWeaponLevel_Selected = {false, false, false}
GameSpeedandDamage_Selected = {false, false}
gg.setVisible(false)
gg.alert("これは動作確認用に作成したスクリプトです。")
gg.alert("変更点:最初のクラスデータを取得する処理\n(検索ではなくオフセットをからはいる)\n\n⇒ 高速化や正確性の向上\n⇒ 保存リストの読み込みを使った書き換え\n(取得した変数をキープできるので検索し直す手間が不要になる)\n\n端末によってlibやmetadataのオフセットに差異があるのかを調べています。\n\n皆さんの端末では動作するか否かを教えてください")
main()
