-- [0] メインメニュー
function Main()
	gg.setVisible(false)
	Mainmenu = gg.choice({
		"\n[1]    装備\n",
		"\n[2]    ハンター\n",		
		"\n[3]    モンスター\n",			
		"\n[4]    マップ\n",		
		"\n[5]    全般\n",	
		"\n[6]    マルチ選択\n",		
		"\n[7]    簡易選択\n",	
		"\n[~]    DeveloperMode\n",		
		"\n[X]    おわる"
	}, nil, "メインメニュー\n\nMonster - 69.1 (2024/2/3)\n\n*がつく項目は実行後にそのステータスの変数が変わるような操作をしないで下さい\nクラッシュの原因になります")	
	if Mainmenu == nil then
		temporarilyhide()	
		Main()
	elseif Mainmenu == 1 then		
		Equipment()
	elseif Mainmenu == 2 then
		Hunter()
	elseif Mainmenu == 3 then
        Monster()
	elseif Mainmenu == 4 then
	    Map()
    elseif Mainmenu == 5 then
        Settings()
    elseif Mainmenu == 6 then
        Multi()
    elseif Mainmenu == 7 then    
        Config()
    elseif Mainmenu == 8 then	
		DeveloperMode()
	elseif Mainmenu == 9 then
		os.exit()
	end
end
	-- [1] 装備
	function Equipment()
		gg.setVisible(false)	
		EquipmentMenu = gg.choice({
			"\n[1]    生産・強化\n",
			"\n[2]    各武器の性質\n",	
			"\n[3]    武器の性能\n",					
			"\n[4]    防具の性能\n",	
			"\n[5]    装飾品の性能\n",
			"\n[6]    スキルの効果の書き換え\n",				
			"\n[←]    もどる"	
		}, nil, "メインメニュー/\n\n装備")		
		if EquipmentMenu == nil then
			temporarilyhide()	
			Equipment()
		elseif EquipmentMenu == 1 then		
			Craft()
		elseif EquipmentMenu == 2 then		
			WeaponProperty()			
		elseif EquipmentMenu == 3 then		
			WeaponSpec()
		elseif EquipmentMenu == 4 then	
			ArmorSpec()
		elseif EquipmentMenu == 5 then	
			gg.alert("実装後追加")
			Equipment()
			DecorationSpec()
		elseif EquipmentMenu == 6 then
			gg.alert("後で追加")
		elseif EquipmentMenu == 7 then		
			Main()
		end
	end
		-- [1-1] 生産・強化
		Craft_currentA = 1
		Craft_SelectedA = {"\n[5]    防具の生産に関する制限の解除\n             (防具の生産数)\n", "\n[ON]    防具の生産に関する制限の解除\n             (防具の生産数)\n", "\n[OFF]    防具の生産に関する制限の解除\n             (防具の生産数)\n"}
		function Craft()
			IncludeCheckAndTrueFalseA("_UserHunterWeapon")
			IncludeCheckAndTrueFalseB("_UserHunterArmor")
			IncludeCheckAndTrueFalseC("_WeaponCraftSharedSettingsProto")
			IncludeCheckAndTrueFalseD("_ArmorCraftSharedSettingsProto")			
			Craft_Selected = {A, B, C, D}
			gg.setVisible(false)	
			CraftMenu = gg.choice({
				(Craft_Selected[1] and "\n-> [1]    武器の強化レベル\n" or "\n[1]    武器の強化レベル\n"),
				(Craft_Selected[2] and "\n-> [2]    防具の強化レベル\n" or "\n[2]    防具の強化レベル\n"),
				(Craft_Selected[3] and "\n-> [3]    武器の強化に必要な素材の確認\n" or "\n[3]    武器の強化に必要な素材の確認\n"),
				(Craft_Selected[4] and "\n-> [4]    防具の強化に必要な素材の確認\n" or "\n[4]    防具の強化に必要な素材の確認\n"),
				Craft_SelectedA[Craft_currentA],
				"\n[←]    もどる"
			}, nil, "メインメニュー/装備/\n\n生産・強化")	
			if CraftMenu == nil then
				temporarilyhide()
				Craft()
			elseif CraftMenu == 1 then	
				valueFromClass("UserHunterWeapon")	
				applyoffset(0x2C, gg.TYPE_DWORD)	
				gg.refineNumber("1~5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
				UserHunterWeapon_WeaponLevel()	
			elseif CraftMenu == 2 then
				valueFromClass("UserHunterArmor")	
				applyoffset(0x2C, gg.TYPE_DWORD)	
				gg.refineNumber("1~5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
				UserHunterArmor_ArmorLevel()				
			elseif CraftMenu == 3 then
				valueFromClass("WeaponCraftSharedSettingsProto")
				applyoffset(0x18, gg.TYPE_DWORD)	
				gg.refineNumber("1~10,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
				WeaponCraftSharedSettingsProto_CraftWeaponMaterial()	
			elseif CraftMenu == 4 then
				valueFromClass("ArmorCraftSharedSettingsProto")
				applyoffset(0x18, gg.TYPE_DWORD)
				gg.refineNumber("1~10,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
				ArmorCraftSharedSettingsProto_CraftArmorMaterial()		
			elseif CraftMenu == 5 then
			    valueFromClass("SeriesSpecSettingsProto")
				applyoffset(0x18, gg.TYPE_DWORD)
				gg.refineNumber("0~1,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)	
				gg.getResults(9999)
			    if Craft_currentA == 1 or Craft_currentA == 3 then
				    gg.editAll("0", gg.TYPE_DWORD)
				    Craft_currentA = 2
				elseif Craft_currentA == 2 then
				end
				Craft()
			elseif CraftMenu == 6 then
				Equipment()
			end		
		end	
			-- [1-1-1] 全武器の強化レベル
			UserHunterWeaponWeaponLevel_Selected = {false, false, false}
			function UserHunterWeapon_WeaponLevel()
				gg.getResults(9999)
				gg.setVisible(false)
				local WeaponLevel = {"5", "4"}
				UserHunterWeaponWeaponLevelMenu = gg.choice({
					(UserHunterWeaponWeaponLevel_Selected[1] and "\n[ON]    Lv5/5\n" or "\n[1]    Lv5/5\n"),
					(UserHunterWeaponWeaponLevel_Selected[2] and "\n[ON]    Lv4/5\n" or "\n[2]    Lv4/5\n"),
					(UserHunterWeaponWeaponLevel_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/生産・強化/\n\n全武器の強化レベル\n(適用後に強化でデータが更新)")
				if UserHunterWeaponWeaponLevelMenu == nil then
					temporarilyhide()
					UserHunterWeapon_WeaponLevel()
				elseif UserHunterWeaponWeaponLevelMenu >= 1 and UserHunterWeaponWeaponLevelMenu <= 3 then
					for i = 1, 3 do
						UserHunterWeaponWeaponLevel_Selected[i] = false
					end
					UserHunterWeaponWeaponLevel_Selected[UserHunterWeaponWeaponLevelMenu] = true				
					if UserHunterWeaponWeaponLevelMenu >= 1 and UserHunterWeaponWeaponLevelMenu <= 2 then
						local chosenValue = WeaponLevel[UserHunterWeaponWeaponLevelMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif UserHunterWeaponWeaponLevelMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全武器の強化レベルを変更 #Dword型\n\n[  1 ~ 5  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					UserHunterWeapon_WeaponLevel()
				elseif UserHunterWeaponWeaponLevelMenu == 4 then
					Craft()
				end
			end	
			-- [1-1-2] 全防具の強化レベル
			UserHunterArmorArmorLevel_Selected = {false, false, false}
			function UserHunterArmor_ArmorLevel()
				gg.getResults(9999)
				gg.setVisible(false)
				local ArmorLevel = {"5", "4"}
				UserHunterArmorWeaponLevelMenu = gg.choice({
					(UserHunterArmorArmorLevel_Selected[1] and "\n[ON]    Lv5/5\n" or "\n[1]    Lv5/5\n"),
					(UserHunterArmorArmorLevel_Selected[2] and "\n[ON]    Lv4/5\n" or "\n[2]    Lv4/5\n"),
					(UserHunterArmorArmorLevel_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/生産・強化/\n\n全防具の強化レベル\n(適用後に強化でデータが更新)")
				if UserHunterArmorWeaponLevelMenu == nil then
					temporarilyhide()
					UserHunterArmor_ArmorLevel()
				elseif UserHunterArmorWeaponLevelMenu >= 1 and UserHunterArmorWeaponLevelMenu <= 3 then
					for i = 1, 3 do
						UserHunterArmorArmorLevel_Selected[i] = false
					end
					UserHunterArmorArmorLevel_Selected[UserHunterArmorWeaponLevelMenu] = true				
					if UserHunterArmorWeaponLevelMenu >= 1 and UserHunterArmorWeaponLevelMenu <= 2 then
						local chosenValue = ArmorLevel[UserHunterArmorWeaponLevelMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif UserHunterArmorWeaponLevelMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全防具の強化レベルを変更 #Dword型\n\n[  1 ~ 5  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					UserHunterArmor_ArmorLevel()
				elseif UserHunterArmorWeaponLevelMenu == 4 then
					Craft()
				end
			end
			-- [1-1-3] 武器の強化に必要な素材の確認
			function WeaponCraftSharedSettingsProto_CraftWeaponMaterial()
				local function error1()
					gg.setVisible(false)
    				local choice = gg.alert("エラー\n\n(「シリーズ番号」が範囲外です", "[→]    変更し直す", "[←]    もどる")
    				if choice == 1 then
    			        WeaponCraftSharedSettingsProto_CraftWeaponMaterial()
    				elseif choice == 2 then
    					Craft()	
    				end
				end			
				local function error2()
					gg.setVisible(false)
    				local choice = gg.alert("エラー\n\n「グレード番号」が範囲外です", "[→]    変更し直す", "[←]    もどる")
    				if choice == 1 then
    			        WeaponCraftSharedSettingsProto_CraftWeaponMaterial()
    				elseif choice == 2 then
    					Craft()	
    				end
				end
				local function error3()
					gg.setVisible(false)
    				local choice = gg.alert("エラー\n\n「強化レベル番号」が範囲外です", "[→]    変更し直す", "[←]    もどる")
    				if choice == 1 then
    			        WeaponCraftSharedSettingsProto_CraftWeaponMaterial()
    				elseif choice == 2 then
    					Craft()	
    				end
				end				
				while true do
					gg.setVisible(false)
					prompt = {
						"武器の強化に必要な素材の確認\n武器の「シリーズ」, 「グレード」, 「強化レベル」の番号を参照し入力して下さい\n(指定した武器の強化に必要な素材情報を上書きし表示します)\n\n例: 21,8,5 \n⇒ ジンオウガの武器8.4~8.5に必要な素材情報が表示\n\n\nシリーズ:\n[    1: 鉱石,　                                 13: レイギエナ,\n     2: ドスジャグラス,                 14: ディアブロス, \n     3: クルルヤック,                     15: ディアブロス亜種,\n     4: プケプケ,                             16: リオレウス, \n     5: ボルボロス,                         17: リオレウス亜種,\n     6: ドスギルオス,                     18: ラドバルキン,\n     7: トビカガチ,                         19: バフバロ,\n     8: パオウルムー,                     20: ベリオロス,\n     9: ジュラトドス,                     21: ジンオウガ,\n   10: アンジャナフ,                     22: 竜骨,\n   11: リオレイア,                         23: 新年2024\n   12: リオレイア亜種,                                                                 ]",
						"グレード:\n[  (初期G) ~ 10  ]",
						"強化レベル:\n[  1 ~ 5  ]"}
					userInput = gg.prompt(prompt, {[1] = "", [2] = "", [3] = ""})
					if userInput ~= nil then
						break
					else
						gg.setVisible(false)
						local choice = gg.alert("メインメニュー/装備/生産・強化\n\n武器の強化に必要な素材の確認\n", "[→]    変更し直す", "[←]    もどる")
						if choice == 1 then
							WeaponCraftSharedSettingsProto_CraftWeaponMaterial()
						elseif choice == 2 then
							Craft()	
						end
						temporarilyhide()
					end
				end
				if not userInput then
					while true do
						gg.setVisible(false)
						local choice = gg.alert("エラー\n\n空欄があります", "[→]    変更し直す", "[←]    もどる")
						if choice == 1 then
							WeaponCraftSharedSettingsProto_CraftWeaponMaterial()
						elseif choice == 2 then
							Craft()	
						end
						temporarilyhide()
					end		
				end
				local SeriesId = tonumber(userInput[1])
				local gradeId = tonumber(userInput[2])
				local LevelId = tonumber(userInput[3])
				if SeriesId == 1 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 1 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 420) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end
				elseif SeriesId == 2 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 1 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 420) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 450) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 3 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 1 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 40) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 480) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end		
				elseif SeriesId == 4 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 1 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 60) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 510) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end		
				elseif SeriesId == 5 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId == 1 then
								CraftId = 565 - (5 - LevelId)
							elseif gradeId >= 2 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 75) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 545) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end			
				elseif SeriesId == 6 then
					if gradeId >= 2 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 2 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 90) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 580) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end		
				elseif SeriesId == 7 then
					if gradeId >= 2 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 2 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 135) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 685) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 8 then
					if gradeId >= 3 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 3 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 120) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 650) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 9 then
					if gradeId >= 3 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 3 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 890) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 10 then
					if gradeId >= 4 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId == 4 then
								CraftId = 125 - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 615) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 11 then
					if gradeId >= 4 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId == 4 then
								CraftId = 170 - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 720) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end
				elseif SeriesId == 12 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1440) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 13 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 760) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end		
				elseif SeriesId == 14 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 840) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 15 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1540) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 16 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 800) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 17 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1490) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 18 then
					if gradeId >= 2 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 2 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1780) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 19 then
					if gradeId >= 3 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 3 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1820) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 20 then
					if gradeId >= 4 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 4 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1855) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 21 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1885) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 22 then
					if gradeId >= 3 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 3 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 2075) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 23 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 2140) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end			
				else   
				   error1()
				end
                local revert = gg.getResults(9999, nil, nil, nil, nil, nil, nil, nil, nil)
                gg.editAll(CraftId, gg.TYPE_DWORD)
				::restart::
                gg.setVisible(false)
                local choice = gg.alert("メインメニュー/装備/生産・強化\n\n武器の強化に必要な素材の確認\n", "[→] 変更し直す", "[←] もどる")
                if choice == 1 then
                    if revert ~= nil then 
						gg.setValues(revert) 
					end
                    WeaponCraftSharedSettingsProto_CraftWeaponMaterial()
                elseif choice == 2 then
                    if revert ~= nil then 
						gg.setValues(revert) 
					end
                    Craft()	
                else
					temporarilyhide()
                    goto restart
                end
            end			
			-- [1-1-4] 防具の強化に必要な素材の確認
			function ArmorCraftSharedSettingsProto_CraftArmorMaterial()
				local function error1()
					gg.setVisible(false)
    				local choice = gg.alert("エラー\n\n「シリーズ番号」が範囲外です", "[→]    変更し直す", "[←]    もどる")
    				if choice == 1 then
    			        ArmorCraftSharedSettingsProto_CraftArmorMaterial()
    				elseif choice == 2 then
    					Craft()	
    				end
				end			
				local function error2()
					gg.setVisible(false)
    				local choice = gg.alert("エラー\n\n「グレード番号」が範囲外です", "[→]    変更し直す", "[←]    もどる")
    				if choice == 1 then
    			        ArmorCraftSharedSettingsProto_CraftArmorMaterial()
    				elseif choice == 2 then
    					Craft()	
    				end
				end
				local function error3()
					gg.setVisible(false)
    				local choice = gg.alert("エラー\n\n「強化レベル番号」が範囲外です", "[→]    変更し直す", "[←]    もどる")
    				if choice == 1 then
    			        ArmorCraftSharedSettingsProto_CraftArmorMaterial()
    				elseif choice == 2 then
    					Craft()	
    				end
				end				
				while true do
					gg.setVisible(false)
					prompt = {
						"防具の強化に必要な素材の確認\n武器の「シリーズ」, 「グレード」, 「強化レベル」の番号を参照し入力して下さい\n(指定した武器の強化に必要な素材情報を上書きし表示します)\n\n例: 21,8,5 \n⇒ ジンオウガの武器8.4~8.5に必要な素材情報が表示\n\n\nシリーズ:\n[    1: 鉱石,　                                 13: レイギエナ,\n     2: ドスジャグラス,                 14: ディアブロス, \n     3: クルルヤック,                     15: ディアブロス亜種,\n     4: プケプケ,                             16: リオレウス, \n     5: ボルボロス,                         17: リオレウス亜種,\n     6: ドスギルオス,                     18: ラドバルキン,\n     7: トビカガチ,                         19: バフバロ,\n     8: パオウルムー,                     20: ベリオロス,\n     9: ジュラトドス,                     21: ジンオウガ,\n   10: アンジャナフ,                     22: 竜骨,\n   11: リオレイア,                         23: 新年2024\n   12: リオレイア亜種,                                                                 ]",
						"グレード:\n[  (初期G) ~ 10  ]",
						"強化レベル:\n[  1 ~ 5  ]"}
					userInput = gg.prompt(prompt, {[1] = "", [2] = "", [3] = ""})
					if userInput ~= nil then
						break
					else
						gg.setVisible(false)
						local choice = gg.alert("メインメニュー/装備/生産・強化\n\n防具の強化に必要な素材の確認\n", "[→]    変更し直す", "[←]    もどる")
						if choice == 1 then
							ArmorCraftSharedSettingsProto_CraftArmorMaterial()
						elseif choice == 2 then
							Craft()	
						end
						temporarilyhide()
					end
				end
				if not userInput then
					while true do
						gg.setVisible(false)
						local choice = gg.alert("エラー\n\n空欄があります", "[→]    変更し直す", "[←]    もどる")
						if choice == 1 then
							ArmorCraftSharedSettingsProto_CraftArmorMaterial()
						elseif choice == 2 then
							Craft()	
						end
						temporarilyhide()
					end		
				end
				local SeriesId = tonumber(InputNumber[1])
				local gradeId = tonumber(InputNumber[2])
				local LevelId = tonumber(InputNumber[3])
				if SeriesId == 1 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 1 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 200) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 920) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end
				elseif SeriesId == 2 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 1 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 220) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 950) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 3 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 1 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 240) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 980) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end		
				elseif SeriesId == 4 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 1 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 260) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1010) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end		
				elseif SeriesId == 5 then
					if gradeId >= 1 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId == 1 then
								CraftId = 1065 - (5 - LevelId)
							elseif gradeId >= 2 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 275) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1045) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end			
				elseif SeriesId == 6 then
					if gradeId >= 2 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 2 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 290) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1080) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end		
				elseif SeriesId == 7 then
					if gradeId >= 2 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 2 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 335) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1185) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 8 then
					if gradeId >= 3 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 3 and gradeId <= 4 then
								CraftId = tostring(gradeId * 5 + 320) - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1150) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 9 then
					if gradeId >= 3 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 3 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1390) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 10 then
					if gradeId >= 4 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId == 4 then
								CraftId = 325 - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1115) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 11 then
					if gradeId >= 4 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId == 4 then
								CraftId = 370 - (5 - LevelId)
							elseif gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1220) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end
				elseif SeriesId == 12 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1590) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 13 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1260) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end		
				elseif SeriesId == 14 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1340) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 15 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1690) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 16 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1300) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 17 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1640) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 18 then
					if gradeId >= 2 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 2 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1930) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 19 then
					if gradeId >= 3 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 3 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1970) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 20 then
					if gradeId >= 4 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 4 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 2005) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 21 then
					if gradeId >= 5 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 5 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 2035) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 22 then
					if gradeId >= 2 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 2 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 1735) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end	
				elseif SeriesId == 23 then
					if gradeId >= 4 and gradeId <= 10 then
						if LevelId >= 1 and LevelId <= 5 then
							if gradeId >= 4 and gradeId <= 10 then
								CraftId = tostring(gradeId * 5 + 2110) - (5 - LevelId)
							end
						else
							error3()
						end
					else
						error2()
					end			
				else   
				   error1()
				end
                local revert = gg.getResults(9999, nil, nil, nil, nil, nil, nil, nil, nil)
                gg.editAll(CraftId, gg.TYPE_DWORD)
				::restart::
                gg.setVisible(false)
                local choice = gg.alert("メインメニュー/装備/生産・強化\n\n防具の強化に必要な素材の確認\n", "[→] 変更し直す", "[←] もどる")
                if choice == 1 then
                    if revert ~= nil then gg.setValues(revert) end
                    ArmorCraftSharedSettingsProto_CraftArmorMaterial()
                elseif choice == 2 then
                    if revert ~= nil then gg.setValues(revert) end
                    Craft()	
                else
					temporarilyhide()				
                    goto restart
                end
            end			
		-- [1-2] 各武器の性質
		function WeaponProperty()
			gg.setVisible(false)	
			WeaponPropertyMenu = gg.choice({
				"\n[1]    大剣\n",
				"\n[2]    片手剣\n",				
				"\n[3]    双剣\n",
				"\n[4]    太刀\n",
				"\n[5]    ハンマー\n",
				"\n[6]    ランス\n",				
				"\n[7]    弓\n",
				"\n[8]    ボウガン\n",
				"\n[←]    もどる"
			}, nil, "メインメニュー/装備/\n\n各武器の性質\n\n該当の装備をして実行して下さい")		
			if WeaponPropertyMenu == nil then
				temporarilyhide()	
				WeaponProperty()
			elseif WeaponPropertyMenu == 1 then
				GreatSword()	
			elseif WeaponPropertyMenu == 2 then
				while true do
					gg.setVisible(false)
					local choice = gg.alert("「片手剣」を装備して実行して下さい\n\n(準備し直す場合は画面外をタップ)","[→]    すすむ","[←]    もどる")
					if choice == 1 then
						SwordShield()	
					elseif choice == 2 then
						WeaponProperty()			
					end
					temporarilyhide()	
				end	
			elseif WeaponPropertyMenu == 3 then			
				while true do
					gg.setVisible(false)
					local choice = gg.alert("「双剣」を装備して実行して下さい\n\n(準備し直す場合は画面外をタップ)","[→]    すすむ","[←]    もどる")
					if choice == 1 then
						DualBlades()
					elseif choice == 2 then
						WeaponProperty()			
					end
					temporarilyhide()
				end
			elseif WeaponPropertyMenu == 4 then
				while true do
					gg.setVisible(false)
					local choice = gg.alert("「太刀」を装備して実行して下さい\n\n(準備し直す場合は画面外をタップ)", "[→]    すすむ", "[←]    もどる")
					if choice == 1 then
						LongSword()		
					elseif choice == 2 then
						WeaponProperty()	
					end
					temporarilyhide()
				end			
			elseif WeaponPropertyMenu == 5 then
				while true do
					gg.setVisible(false)
					local choice = gg.alert("「ハンマー」を装備して実行して下さい\n\n(準備し直す場合は画面外をタップ)", "[→]    すすむ", "[←]    もどる")
					if choice == 1 then
						Hammer()
					elseif choice == 2 then
						WeaponProperty()				
					end
					temporarilyhide()	
				end		
			elseif WeaponPropertyMenu == 6 then
				while true do
					gg.setVisible(false)
					local choice = gg.alert("「ランス」を装備して実行して下さい\n\n(準備し直す場合は画面外をタップ)", "[→]    すすむ", "[←]    もどる")
					if choice == 1 then
						Lance()
					elseif choice == 2 then
						WeaponProperty()				
					end
					temporarilyhide()	
				end							
			elseif WeaponPropertyMenu == 7 then
				while true do
					gg.setVisible(false)
					local choice = gg.alert("「弓」を装備して実行して下さい\n\n(準備し直す場合は画面外をタップ)", "[→]    すすむ", "[←]    もどる")
					if choice == 1 then
						Bow()
					elseif choice == 2 then
						WeaponProperty()				
					end
					temporarilyhide()	
				end			
			elseif WeaponPropertyMenu == 8 then
				while true do
					gg.setVisible(false)
					local choice = gg.alert("「ボウガン」を装備して実行して下さい\n\n(準備し直す場合は画面外をタップ)", "[→]    すすむ", "[←]    もどる")
					if choice == 1 then
						Bowgun()
					elseif choice == 2 then
						WeaponProperty()		
					end
					temporarilyhide()	
				end			
			elseif WeaponPropertyMenu == 9 then
				Equipment()
			end
		end		
			-- [1-2-1] 大剣
			function GreatSword()
				IncludeCheckAndTrueFalseA("BattleConfig_GreatSword")
				GreatSword_Selected = {A}
				gg.setVisible(false)
				GreatSwordMenu = gg.choice({
					(GreatSword_Selected[1] and "\n-> [1]    スーパーアーマーのダメージ軽減率\n" or "\n[1]    スーパーアーマーのダメージ軽減率\n"),		
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/各武器の性質/\n\n大剣")
				if GreatSwordMenu == nil then
					temporarilyhide()
					GreatSword()
				elseif GreatSwordMenu == 1 then			
					LoadNameAddress("BattleConfig_GreatSword")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else
						valueFromClass("BattleConfig")
						applyoffset(0x60, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x10, gg.TYPE_DWORD)
						gg.refineNumber("95", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						AddNameAddress("BattleConfig_GreatSword")
				    end
					BattleConfig_GreatSwordSuperArmorDamageCutPercentage()
				elseif GreatSwordMenu == 2 then
					WeaponProperty()
				end
			end		
				-- [1-2-1-1] スーパーアーマーのダメージ軽減率
				BattleConfigGreatSwordSuperArmorDamageCutPercentage_Selected = {false, false, false}
				function BattleConfig_GreatSwordSuperArmorDamageCutPercentage()
					gg.getResults(9999)
					gg.setVisible(false)
					local GreatSwordSuperArmorDamageCutPercentage = {"95", "100,000"}
					BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu = gg.choice({
						(BattleConfigGreatSwordSuperArmorDamageCutPercentage_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
						(BattleConfigGreatSwordSuperArmorDamageCutPercentage_Selected[2] and "\n[ON]    体力回復\n" or "\n[2]    体力回復\n"),
						(BattleConfigGreatSwordSuperArmorDamageCutPercentage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/大剣/\n\nスーパーアーマーのダメージ軽減率")
					if BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu == nil then
						temporarilyhide()
						BattleConfig_GreatSwordSuperArmorDamageCutPercentage()
					elseif BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu >= 1 and BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu <= 3 then
						for i = 1, 3 do
							BattleConfigGreatSwordSuperArmorDamageCutPercentage_Selected[i] = false
						end
						BattleConfigGreatSwordSuperArmorDamageCutPercentage_Selected[BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu] = true	
						if BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu >= 1 and BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu <= 2 then
							local chosenValue = GreatSwordSuperArmorDamageCutPercentage[BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu == 3 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "大剣のスーパーアーマーのダメージ軽減率を変更 #Dword型\n\nデフォ: 95\n[  0 ~  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleConfig_GreatSwordSuperArmorDamageCutPercentage()	
					elseif BattleConfigGreatSwordSuperArmorDamageCutPercentageMenu == 4 then
						GreatSword()
					end
				end				
			-- [1-2-2] 片手剣
			function SwordShield()
				IncludeCheckAndTrueFalseA("GuardSequenceClip")
				SwordShield_Selected = {A}			
				gg.setVisible(false)
				SwordShieldMenu = gg.choice({
					(SwordShield_Selected[1] and "\n-> [1]    ガードのリアクション種類*\n" or "\n[1]    ガードのリアクション種類*\n"),
					"\n[~]    アドレスの再取得\n",					
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/各武器の性質/\n\n片手剣")
				if SwordShieldMenu == nil then
					temporarilyhide()
					SwordShield()
				elseif SwordShieldMenu == 1 then
                    SwordShield_Selected[SwordShieldMenu] = true		
                    GuardSequenceClip_SwordShieldGuardReactionType()
				elseif SwordShieldMenu == 2 then
					Refresh_SwordShield()
				elseif SwordShieldMenu == 3 then
					WeaponProperty()
				end
			end		
				-- [1-2-2-1] ガードのリアクション種類*
				GuardSequenceClipSwordShieldGuardReactionType_Selected = {false, false, false}
				function GuardSequenceClip_SwordShieldGuardReactionType()
					gg.getResults(9999)
					gg.setVisible(false)
					GuardSequenceClipSwordShieldGuardReactionTypeMenu = gg.choice({
						(GuardSequenceClipSwordShieldGuardReactionType_Selected[1] and "\n[ON]    小\n" or "\n[1]    小\n"),
						(GuardSequenceClipSwordShieldGuardReactionType_Selected[2] and "\n[ON]    中\n" or "\n[2]    中\n"),
						(GuardSequenceClipSwordShieldGuardReactionType_Selected[3] and "\n[ON]    大\n" or "\n[3]    大\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/片手剣/\n\nガードのリアクション種類*")
					if GuardSequenceClipSwordShieldGuardReactionTypeMenu == nil then
						temporarilyhide()
						GuardSequenceClip_SwordShieldGuardReactionType()
					elseif GuardSequenceClipSwordShieldGuardReactionTypeMenu >= 1 and GuardSequenceClipSwordShieldGuardReactionTypeMenu <= 3 then
						for i = 1, 3 do
							GuardSequenceClipSwordShieldGuardReactionType_Selected[i] = false
						end
						valueFromClass("GuardSequenceClip")	
						applyoffset(0x1C, gg.TYPE_QWORD)
						gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						applyoffset(0x14, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x2C, gg.TYPE_QWORD)
						if GuardSequenceClipSwordShieldGuardReactionTypeMenu == 1 then	
							gg.editAll("30,681,128,950,759,523", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("30,399,714,103,722,067", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("463,863,545,953", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("108", gg.TYPE_QWORD)
							valueFromClass("GuardSequenceClip")				
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x1C, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("30,681,128,950,759,523", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_DWORD)					
							gg.editAll("30,399,714,103,722,067", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_DWORD)
							gg.editAll("463,863,545,953", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("108", gg.TYPE_QWORD)									
							valueFromClass("GuardSequenceClip")	
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x24, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("30,681,128,950,759,523", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)						
							gg.editAll("30,399,714,103,722,067", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("463,863,545,953", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("108", gg.TYPE_QWORD)											
						elseif GuardSequenceClipSwordShieldGuardReactionTypeMenu == 2 then		
							gg.editAll("28,429,303,367,270,499", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("29,555,302,057,967,693", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("30,681,274,979,516,516", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("7,143,541", gg.TYPE_QWORD)
							valueFromClass("GuardSequenceClip")				
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x1C, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("28,429,303,367,270,499", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_DWORD)					
							gg.editAll("29,555,302,057,967,693", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_DWORD)
							gg.editAll("30,681,274,979,516,516", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("7,143,541", gg.TYPE_QWORD)									
							valueFromClass("GuardSequenceClip")	
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x24, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("28,429,303,367,270,499", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)						
							gg.editAll("29,555,302,057,967,693", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("30,681,274,979,516,516", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("7,143,541", gg.TYPE_QWORD)							
						elseif GuardSequenceClipSwordShieldGuardReactionTypeMenu == 3 then			
							gg.editAll("27,303,399,165,460,579", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("28,992,412,233,826,380", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("433,798,447,218", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("101", gg.TYPE_QWORD)
							valueFromClass("GuardSequenceClip")				
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x1C, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("27,303,399,165,460,579", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_DWORD)					
							gg.editAll("28,992,412,233,826,380", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_DWORD)
							gg.editAll("433,798,447,218", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("101", gg.TYPE_QWORD)									
							valueFromClass("GuardSequenceClip")	
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x24, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("27,303,399,165,460,579", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)						
							gg.editAll("28,992,412,233,826,380", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("433,798,447,218", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("101", gg.TYPE_QWORD)											
						end
						GuardSequenceClip_SwordShieldGuardReactionType()	
					elseif GuardSequenceClipSwordShieldGuardReactionTypeMenu == 4 then
						SwordShield()
					end
				end		
				-- [1-2-2-2] アドレスの再取得
				function Refresh_SwordShield()
					local name1 = {"_Qapplyfix_GuardSequenceClip", "_Abaseaccuracy_GuardSequenceClip"}
					local Prompt = gg.prompt({
						"\n[1]    ガードのリアクション種類*"
					}, {false}, {"checkbox"})
					if Prompt == nil then
						temporarilyhide()
						SwordShield()
					end
					if Prompt[1] == true then
						DeleteNameAddress(name1[1])
						DeleteNameAddress(name1[2])
						valueFromClass("GuardSequenceClip")	
						GuardSequenceClipSwordShieldGuardReactionType_Selected = {false, false, false}
					end
					SwordShield()
				end						
			-- [1-2-3] 双剣
			function DualBlades()
				IncludeCheckAndTrueFalseA("BattleDualBladesLogicSetup_DualBlades")
				DualBlades_Selected = {A, A, A, A}	
				gg.setVisible(false)
				DualBladesMenu = gg.choice({
					(DualBlades_Selected[1] and "\n-> [1]    鬼人化の継続時間*\n" or "\n[1]    鬼人化の継続時間*\n"),
					(DualBlades_Selected[2] and "\n-> [2]    スタミナの回復時間*\n" or "\n[2]    スタミナの回復時間*\n"),
					(DualBlades_Selected[3] and "\n-> [3]    スタミナが不足している割合*\n" or "\n[3]    スタミナが不足している割合*\n"),
					(DualBlades_Selected[4] and "\n-> [4]    鬼人化に消費するSPゲージの割合*\n" or "\n[4]    鬼人化に消費するSPゲージの割合*\n"),
					"\n[~]    アドレスの再取得\n",					
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/各武器の性質/\n\n双剣")
				if DualBladesMenu == nil then
					temporarilyhide()
					DualBlades()
				elseif DualBladesMenu >= 1 and DualBladesMenu <= 4 then
					LoadNameAddress("BattleDualBladesLogicSetup_DualBlades")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else
						valueFromClass("BattleDualBladesLogicSetup")		
						applyoffset(0x38, gg.TYPE_FLOAT)
						gg.refineNumber("15", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
						AddNameAddress("BattleDualBladesLogicSetup_DualBlades")
					end
					if DualBladesMenu == 1 then
						BattleDualBladesLogicSetup_DualBladesDemonModeStaminaConsumptionTime()
					elseif DualBladesMenu == 2 then	
						applyoffset(0x4, gg.TYPE_FLOAT)
						BattleDualBladesLogicSetup_DualBladesNormalModeStaminaRecoveryTime()
					elseif DualBladesMenu == 3 then	
						applyoffset(0x8, gg.TYPE_FLOAT)
						BattleDualBladesLogicSetup_DualBladesNoStaminaRate()
					elseif DualBladesMenu == 4 then		
						applyoffset(0xC, gg.TYPE_FLOAT)
						BattleDualBladesLogicSetup_DualBladesDemonModeSpGaugeConsumption()
					end
				elseif DualBladesMenu == 5 then
					Refresh_DualBlades()
				elseif DualBladesMenu == 6 then
					WeaponProperty()
				end
			end		
				-- [1-2-3-1] 鬼人化の継続時間*			
				BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTime_Selected = {false, false, false}
				function BattleDualBladesLogicSetup_DualBladesDemonModeStaminaConsumptionTime()
					gg.getResults(9999)
					gg.setVisible(false)
					local DualBladesDemonModeStaminaConsumptionTime = {"15", "300"}
					BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu = gg.choice({
						(BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTime_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
						(BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTime_Selected[2] and "\n[ON]    300 秒\n" or "\n[2]    300 秒\n"),
						(BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTime_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/双剣/\n\n鬼人化の継続時間*")
					if BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu == nil then
						temporarilyhide()
						BattleDualBladesLogicSetup_DualBladesDemonModeStaminaConsumptionTime()
					elseif BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu >= 1 and BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu <= 3 then
						for i = 1, 3 do
							BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTime_Selected[i] = false
						end
						BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTime_Selected[BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu] = true	
						if BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu >= 1 and BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu <= 2 then
							local chosenValue = DualBladesDemonModeStaminaConsumptionTime[BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu]
							gg.editAll(chosenValue, gg.TYPE_FLOAT)
						elseif BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu == 3 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "双剣の鬼人化の継続時間を変更 #Float型\n\n秒, デフォ: 15\n[  0 ~   ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_FLOAT)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleDualBladesLogicSetup_DualBladesDemonModeStaminaConsumptionTime()	
					elseif BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTimeMenu == 4 then
						DualBlades()
					end
				end
				-- [1-2-3-2] スタミナの回復時間*
				BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTime_Selected = {false, false, false}
				function BattleDualBladesLogicSetup_DualBladesNormalModeStaminaRecoveryTime()
					gg.getResults(9999)
					gg.setVisible(false)
					local DualBladesNormalModeStaminaRecoveryTime = {"15", "0"}
					BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu = gg.choice({
						(BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTime_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
						(BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTime_Selected[2] and "\n[ON]    不要\n" or "\n[2]    不要\n"),
						(BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTime_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/双剣/\n\nスタミナの回復時間*")
					if BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu == nil then
						temporarilyhide()
						BattleDualBladesLogicSetup_DualBladesNormalModeStaminaRecoveryTime()
					elseif BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu >= 1 and BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu <= 3 then
						for i = 1, 3 do
							BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTime_Selected[i] = false
						end
						BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTime_Selected[BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu] = true	
						if BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu >= 1 and BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu <= 2 then
							local chosenValue = DualBladesNormalModeStaminaRecoveryTime[BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu]
							gg.editAll(chosenValue, gg.TYPE_FLOAT)
						elseif BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu == 3 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "双剣のスタミナの回復時間を変更\n\n #Float型\n\n全回復にかかる時間秒, デフォ: 15\n[  0 ~   ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_FLOAT)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleDualBladesLogicSetup_DualBladesNormalModeStaminaRecoveryTime()	
					elseif BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTimeMenu == 4 then
						DualBlades()
					end
				end		
				-- [1-2-3-3] スタミナが不足している割合*
				BattleDualBladesLogicSetupDualBladesNoStaminaRate_Selected = {false, false}
				function BattleDualBladesLogicSetup_DualBladesNoStaminaRate()
					gg.getResults(9999)
					gg.setVisible(false)
					local DualBladesNoStaminaRate = {"0"}
					BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu = gg.choice({
						(BattleDualBladesLogicSetupDualBladesNoStaminaRate_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
						(BattleDualBladesLogicSetupDualBladesNoStaminaRate_Selected[2] and "\n[ON]    任意の値\n" or "\n[2]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/双剣/\n\nスタミナが不足している割合*")
					if BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu == nil then
						temporarilyhide()
						BattleDualBladesLogicSetup_DualBladesNoStaminaRate()
					elseif BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu >= 1 and BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu <= 2 then
						for i = 1, 2 do
							BattleDualBladesLogicSetupDualBladesNoStaminaRate_Selected[i] = false
						end
						BattleDualBladesLogicSetupDualBladesNoStaminaRate_Selected[BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu] = true	
						if BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu == 1 then
							local chosenValue = DualBladesNoStaminaRate[BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu]
							gg.editAll(chosenValue, gg.TYPE_FLOAT)
						elseif BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu == 2 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "双剣のスタミナが不足している割合を変更 #Float型\n\n割合, デフォ: 0\n[  0 ~ 1  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_FLOAT)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleDualBladesLogicSetup_DualBladesNoStaminaRate()	
					elseif BattleDualBladesLogicSetupDualBladesNoStaminaRateMenu == 3 then
						DualBlades()
					end
				end		
				-- [1-2-3-4] 鬼人化に消費するSPゲージの減少量*		
				BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumption_Selected = {false, false}
				function BattleDualBladesLogicSetup_DualBladesDemonModeSpGaugeConsumption()
					gg.getResults(9999)
					gg.setVisible(false)
					local DualBladesDemonModeSpGaugeConsumption = {"0"}
					BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu = gg.choice({
						(BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumption_Selected[1] and "\n[ON]    不要\n" or "\n[1]    不要\n"),
						(BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumption_Selected[2] and "\n[ON]    任意の値\n" or "\n[2]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/双剣/\n\n鬼人化に消費するSPゲージの割合*")
					if BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu == nil then
						temporarilyhide()
						BattleDualBladesLogicSetup_DualBladesDemonModeSpGaugeConsumption()
					elseif BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu >= 1 and BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu <= 2 then
						for i = 1, 3 do
							BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumption_Selected[i] = false
						end
						BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumption_Selected[BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu] = true	
						if BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu == 1 then
							local chosenValue = DualBladesDemonModeSpGaugeConsumption[BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu]
							gg.editAll(chosenValue, gg.TYPE_FLOAT)
						elseif BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu == 2 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "双剣の鬼人化に消費するSPゲージの割合を変更 Float型\n\n割合, デフォ: 0\n[  0 ~ 1  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_FLOAT)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleDualBladesLogicSetup_DualBladesDemonModeSpGaugeConsumption()	
					elseif BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumptionMenu == 3 then
						DualBlades()
					end
				end					
				-- [1-2-3-5] アドレスの再取得
				function Refresh_DualBlades()
					local name1 = {"_Qapplyfix_BattleDualBladesLogicSetup", "_Abaseaccuracy_BattleDualBladesLogicSetup", "BattleDualBladesLogicSetup_DualBlades"}
					local Prompt = gg.prompt({
						"\n[1]    鬼人化の継続時間*\n[2]    スタミナの回復時間*\n[3]    スタミナが不足している割合*\n[4]    鬼人化に消費するSPゲージの減少量*"
					}, {false}, {"checkbox"})
					if Prompt == nil then
						temporarilyhide()
						DualBlades()
					end
					if Prompt[1] == true then
						DeleteNameAddress(name1[1])
						DeleteNameAddress(name1[2])
						DeleteNameAddress(name1[3])
						valueFromClass("BattleDualBladesLogicSetup")	
						BattleDualBladesLogicSetupDualBladesDemonModeStaminaConsumptionTime_Selected = {false, false, false}
						BattleDualBladesLogicSetupDualBladesNormalModeStaminaRecoveryTime_Selected = {false, false, false}
						BattleDualBladesLogicSetupDualBladesNoStaminaRate_Selected = {false, false}
						BattleDualBladesLogicSetupDualBladesDemonModeSpGaugeConsumption_Selected = {false, false}
					end
					DualBlades()
				end		
			-- [1-2-4] 太刀
			function LongSword()
				IncludeCheckAndTrueFalseA("BattleLongSwordLogicSetup_LongSword")
				LongSword_Selected = {A, A, A, A}	
				gg.setVisible(false)
				LongSwordMenu = gg.choice({
					(LongSword_Selected[1] and "\n-> [1]    最大練気量*\n" or "\n[1]    最大練気量*\n"),
					(LongSword_Selected[2] and "\n-> [2]    兜割が出せる閾値*\n" or "\n[2]    兜割が出せる閾値*\n"),
					(LongSword_Selected[3] and "\n-> [3]    練気が消費され始める迄の猶予*\n" or "\n[3]    練気が消費され始める迄の猶予*\n"),
					(LongSword_Selected[4] and "\n-> [4]    特殊納刀に消費する練気量*\n" or "\n[4]    特殊納刀に消費する練気量*\n"),
					"\n[~]    アドレスの再取得\n",					
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/各武器の性質/\n\n太刀")
				if LongSwordMenu == nil then
					temporarilyhide()
					LongSword()
				elseif LongSwordMenu >= 1 and LongSwordMenu <= 4 then
					LoadNameAddress("BattleLongSwordLogicSetup_LongSword")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else
						valueFromClass("BattleLongSwordLogicSetup")		
						applyoffset(0x1C, gg.TYPE_DWORD)
						gg.refineNumber("140", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)	
						AddNameAddress("BattleLongSwordLogicSetup_LongSword")
					end
					if LongSwordMenu == 1 then
					    applyoffset(-0x4, gg.TYPE_DWORD)
						BattleLongSwordLogicSetup_LongSwordMaxSpirits()
					elseif LongSwordMenu == 2 then		
						BattleLongSwordLogicSetup_LongSwordRequireSpiritsForHelmBreaker()
					elseif LongSwordMenu == 3 then				
						applyoffset(0x34, gg.TYPE_FLOAT)
						BattleLongSwordLogicSetup_LongSwordSpiritCostGracePeriod()
					elseif LongSwordMenu == 4 then		
						applyoffset(0x3C, gg.TYPE_DWORD)
						BattleLongSwordLogicSetup_LongSwordCostSpiritInSpecialSheathPerSec()
					end
				elseif LongSwordMenu == 5 then
					Refresh_LongSword()
				elseif LongSwordMenu == 6 then
					WeaponProperty()
				end
			end		
				-- [1-2-4-1] 最大練気量*			
				BattleLongSwordLogicSetupLongSwordMaxSpirits_Selected = {false, false}
				function BattleLongSwordLogicSetup_LongSwordMaxSpirits()
					gg.getResults(9999)
					gg.setVisible(false)
					local LongSwordMaxSpirits = {"200"}
					BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu = gg.choice({
						(BattleLongSwordLogicSetupLongSwordMaxSpirits_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
						(BattleLongSwordLogicSetupLongSwordMaxSpirits_Selected[2] and "\n[ON]    任意の値\n" or "\n[2]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/太刀/\n\n最大練気量*")
					if BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu == nil then
						temporarilyhide()
						BattleLongSwordLogicSetup_LongSwordMaxSpirits()
					elseif BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu >= 1 and BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu <= 2 then
						for i = 1, 2 do
							BattleLongSwordLogicSetupLongSwordMaxSpirits_Selected[i] = false
						end
						BattleLongSwordLogicSetupLongSwordMaxSpirits_Selected[BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu] = true	
						if BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu == 1 then
							local chosenValue = LongSwordMaxSpirits[BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu == 2 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "太刀の最大練気量を変更 #Dword型\n\nデフォ: 200\n[  0 ~   ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleLongSwordLogicSetup_LongSwordMaxSpirits()	
					elseif BattleLongSwordLogicSetupLongSwordMaxSpiritsMenu == 3 then
						LongSword()
					end
				end	
				-- [1-2-4-2] 兜割が出せる閾値*			
				BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreaker_Selected = {false, false, false}
				function BattleLongSwordLogicSetup_LongSwordRequireSpiritsForHelmBreaker()
					gg.getResults(9999)
					gg.setVisible(false)
					local LongSwordRequireSpiritsForHelmBreaker = {"140","1"}
					BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu = gg.choice({
						(BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreaker_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
						(BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreaker_Selected[2] and "\n[ON]    常に可能\n" or "\n[2]    常に可能\n"),						
						(BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreaker_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/太刀/\n\n兜割が出せる閾値*")
					if BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu == nil then
						temporarilyhide()
						BattleLongSwordLogicSetup_LongSwordRequireSpiritsForHelmBreaker()
					elseif BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu >= 1 and BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu <= 3 then
						for i = 1, 3 do
							BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreaker_Selected[i] = false
						end
						BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreaker_Selected[BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu] = true	
						if BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu >= 1 and BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu <= 2 then
							local chosenValue = LongSwordRequireSpiritsForHelmBreaker[BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu == 3 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "太刀の兜割が出せる閾値を変更 #Dword型\n\nデフォ: 140\n[  0 ~   ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleLongSwordLogicSetup_LongSwordRequireSpiritsForHelmBreaker()	
					elseif BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreakerMenu == 4 then
						LongSword()
					end
				end			
				-- [1-2-4-3] 練気が消費され始める迄の猶予*				
				BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriod_Selected = {false, false, false}
				function BattleLongSwordLogicSetup_LongSwordSpiritCostGracePeriod()
					gg.getResults(9999)
					gg.setVisible(false)
					local LongSwordSpiritCostGracePeriod = {"2", "300"}
					BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu = gg.choice({
						(BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriod_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
						(BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriod_Selected[2] and "\n[ON]    300 秒\n" or "\n[2]    300 秒\n"),						
						(BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriod_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/太刀/\n\n練気が消費され始める迄の猶予*")
					if BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu == nil then
						temporarilyhide()
						BattleLongSwordLogicSetup_LongSwordSpiritCostGracePeriod()
					elseif BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu >= 1 and BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu <= 3 then
						for i = 1, 3 do
							BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriod_Selected[i] = false
						end
						BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriod_Selected[BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu] = true	
						if BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu >= 1 and BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu <= 2 then
							local chosenValue = LongSwordSpiritCostGracePeriod[BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu]
							gg.editAll(chosenValue, gg.TYPE_FLOAT)
						elseif BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu == 3 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "太刀の練気が消費され始める迄の猶予を変更 Float型\n\n練気が消費されない時間秒, デフォ: 2, [  0 ~   ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_FLOAT)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleLongSwordLogicSetup_LongSwordSpiritCostGracePeriod()	
					elseif BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriodMenu == 4 then
						LongSword()
					end
				end		
				-- [1-2-4-4] 特殊納刀に消費する練気量*				
				BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSec_Selected = {false, false}
				function BattleLongSwordLogicSetup_LongSwordCostSpiritInSpecialSheathPerSec()
					gg.getResults(9999)
					gg.setVisible(false)
					local LongSwordCostSpiritInSpecialSheathPerSec = {"0"}
					BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu = gg.choice({
						(BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSec_Selected[1] and "\n[ON]    不要\n" or "\n[1]    不要\n"),
						(BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSec_Selected[2] and "\n[ON]    任意の値\n" or "\n[2]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/太刀/\n\n練気が消費され始める迄の猶予*")
					if BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu == nil then
						temporarilyhide()
						BattleLongSwordLogicSetup_LongSwordCostSpiritInSpecialSheathPerSec()
					elseif BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu >= 1 and BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu <= 2 then
						for i = 1, 2 do
							BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSec_Selected[i] = false
						end
						BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSec_Selected[BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu] = true	
						if BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu == 1 then
							local chosenValue = LongSwordCostSpiritInSpecialSheathPerSec[BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu == 2 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "太刀の特殊納刀に消費する練気量を変更 #Dword型\n\n[  0 ~ 100,000  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BattleLongSwordLogicSetup_LongSwordCostSpiritInSpecialSheathPerSec()	
					elseif BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSecMenu == 3 then
						LongSword()
					end
				end			
				-- [1-2-4-5] アドレスの再取得		
				function Refresh_LongSword()
					local name1 = {"_Qapplyfix_BattleLongSwordLogicSetup", "_Abaseaccuracy_BattleLongSwordLogicSetup", "BattleLongSwordLogicSetup_LongSword"}
					local Prompt = gg.prompt({
						"\n[1]    最大練気量*\n[2]    兜割が出せる閾値*\n[3]    練気が消費され始める迄の猶予*\n[4]    特殊納刀に消費する練気量*"
					}, {false}, {"checkbox"})
					if Prompt == nil then
						temporarilyhide()
						LongSword()
					end
					if Prompt[1] == true then
						DeleteNameAddress(name1[1])
						DeleteNameAddress(name1[2])
						DeleteNameAddress(name1[3])
						valueFromClass("BattleLongSwordLogicSetup")	
						BattleLongSwordLogicSetupLongSwordMaxSpirits_Selected = {false, false}
						BattleLongSwordLogicSetupLongSwordRequireSpiritsForHelmBreaker_Selected = {false, false, false}
						BattleLongSwordLogicSetupLongSwordSpiritCostGracePeriod_Selected = {false, false, false}
						BattleLongSwordLogicSetupLongSwordCostSpiritInSpecialSheathPerSec_Selected = {false, false}
					end
					LongSword()
				end			
			-- [1-2-5] ランス
			function Lance()
				IncludeCheckAndTrueFalseA("GuardSequenceClip")
				Lance_Selected = {A}			
				gg.setVisible(false)
				LanceMenu = gg.choice({
					(Lance_Selected[1] and "\n-> [1]    ガードのリアクション種類*\n" or "\n[1]    ガードのリアクション種類*\n"),
					"\n[~]    アドレスの再取得\n",					
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/各武器の性質/\n\nランス")
				if LanceMenu == nil then
					temporarilyhide()
					Lance()
				elseif LanceMenu == 1 then
					valueFromClass("GuardSequenceClip")	
					GuardSequenceClip_LanceGuardReactionType()
				elseif LanceMenu == 2 then
					Refresh_Lance()
				elseif LanceMenu == 3 then
					WeaponProperty()
				end
			end	
				-- [1-2-5-1] ガードのリアクション種類*
				GuardSequenceClipLanceGuardReactionType_Selected = {false, false, false}
				function GuardSequenceClip_LanceGuardReactionType()
					gg.getResults(9999)
					gg.setVisible(false)
					GuardSequenceClipLanceGuardReactionTypeMenu = gg.choice({
						(GuardSequenceClipLanceGuardReactionType_Selected[1] and "\n[ON]    小\n" or "\n[1]    小\n"),
						(GuardSequenceClipLanceGuardReactionType_Selected[2] and "\n[ON]    中\n" or "\n[2]    中\n"),
						(GuardSequenceClipLanceGuardReactionType_Selected[3] and "\n[ON]    大\n" or "\n[3]    大\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/ランス/\n\nガードのリアクション種類*")
					if GuardSequenceClipLanceGuardReactionTypeMenu == nil then
						temporarilyhide()
						GuardSequenceClip_LanceGuardReactionType()
					elseif GuardSequenceClipLanceGuardReactionTypeMenu >= 1 and GuardSequenceClipLanceGuardReactionTypeMenu <= 3 then
						for i = 1, 3 do
							GuardSequenceClipLanceGuardReactionType_Selected[i] = false
						end
						GuardSequenceClipLanceGuardReactionType_Selected[GuardSequenceClipLanceGuardReactionTypeMenu] = true	
						valueFromClass("GuardSequenceClip")	
						applyoffset(0x1C, gg.TYPE_QWORD)
						gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						applyoffset(0x14, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x2C, gg.TYPE_QWORD)
						if GuardSequenceClipLanceGuardReactionTypeMenu == 1 then	
							gg.editAll("30,681,128,950,759,523", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("30,399,714,103,722,067", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("463,863,545,953", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("108", gg.TYPE_QWORD)
							valueFromClass("GuardSequenceClip")				
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x1C, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("30,681,128,950,759,523", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_DWORD)					
							gg.editAll("30,399,714,103,722,067", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_DWORD)
							gg.editAll("463,863,545,953", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("108", gg.TYPE_QWORD)									
							valueFromClass("GuardSequenceClip")	
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x24, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("30,681,128,950,759,523", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)						
							gg.editAll("30,399,714,103,722,067", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("463,863,545,953", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("108", gg.TYPE_QWORD)											
						elseif GuardSequenceClipLanceGuardReactionTypeMenu == 2 then		
							gg.editAll("28,429,303,367,270,499", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("29,555,302,057,967,693", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("30,681,274,979,516,516", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("7,143,541", gg.TYPE_QWORD)
							valueFromClass("GuardSequenceClip")				
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x1C, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("28,429,303,367,270,499", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_DWORD)					
							gg.editAll("29,555,302,057,967,693", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_DWORD)
							gg.editAll("30,681,274,979,516,516", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("7,143,541", gg.TYPE_QWORD)									
							valueFromClass("GuardSequenceClip")	
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x24, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("28,429,303,367,270,499", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)						
							gg.editAll("29,555,302,057,967,693", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("30,681,274,979,516,516", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("7,143,541", gg.TYPE_QWORD)							
						elseif GuardSequenceClipLanceGuardReactionTypeMenu == 3 then			
							gg.editAll("27,303,399,165,460,579", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("28,992,412,233,826,380", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("433,798,447,218", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("101", gg.TYPE_QWORD)
							valueFromClass("GuardSequenceClip")				
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x1C, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("27,303,399,165,460,579", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_DWORD)					
							gg.editAll("28,992,412,233,826,380", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_DWORD)
							gg.editAll("433,798,447,218", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("101", gg.TYPE_QWORD)									
							valueFromClass("GuardSequenceClip")	
							applyoffset(0x1C, gg.TYPE_QWORD)
						    gg.refineNumber("4,506,001,550,208,436,360", gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							applyoffset(0x24, gg.TYPE_QWORD)
							MoveThePointer()
							applyoffset(0x2C, gg.TYPE_QWORD)
							gg.editAll("27,303,399,165,460,579", gg.TYPE_QWORD)	
							applyoffset(0x4, gg.TYPE_QWORD)						
							gg.editAll("28,992,412,233,826,380", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("433,798,447,218", gg.TYPE_QWORD)
							applyoffset(0x4, gg.TYPE_QWORD)
							gg.editAll("101", gg.TYPE_QWORD)									
						end
						GuardSequenceClip_LanceGuardReactionType()	
					elseif GuardSequenceClipLanceGuardReactionTypeMenu == 4 then
						Lance()
					end
				end		
				-- [1-2-5-2] アドレスの再取得
				function Refresh_Lance()
					local name1 = {"_Qapplyfix_GuardSequenceClip", "_Abaseaccuracy_GuardSequenceClip"}
					local Prompt = gg.prompt({
						"\n[1]    ガードのリアクション種類*"
					}, {false}, {"checkbox"})
					if Prompt == nil then
						temporarilyhide()
						Lance()
					end
					if Prompt[1] == true then
						DeleteNameAddress(name1[1])
						DeleteNameAddress(name1[2])
						valueFromClass("GuardSequenceClip")	
						GuardSequenceClipLanceGuardReactionType_Selected = {false, false, false}
					end
					Lance()
				end	
			-- [1-2-6] 弓
			function Bow()
				IncludeCheckAndTrueFalseA("ArrowSpec_Bow")
				Bow_Selected = {A, A}	
				gg.setVisible(false)
				BowMenu = gg.choice({
					(Bow_Selected[1] and "\n-> [1]    矢の種類*" or "\n[1]    矢の種類*"),
					(Bow_Selected[2] and "\n-> [2]    矢のレベル*" or "\n[2]    矢のレベル*"),
					"\n[~]    アドレスの再取得\n",					
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/各武器の性質/\n\n弓")
				if BowMenu == nil then
					temporarilyhide()
					Bow()	
				elseif BowMenu >= 1 and BowMenu <= 2 then
					LoadNameAddress("ArrowSpec_Bow")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else
						valueFromClass("ArrowSpec")		
						applyoffset(0x18, gg.TYPE_DWORD)
						gg.refineNumber("1~3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)	
						AddNameAddress("ArrowSpec_Bow")
					end
					if BowMenu == 1 then
						ArrowSpec_BowArrowType()
					elseif BowMenu == 2 then		
						applyoffset(0x4, gg.TYPE_DWORD)
						ArrowSpec_BowLevel()
					end
				elseif BowMenu == 3 then			
					Refresh_Bow()
				elseif BowMenu == 4 then		
					WeaponProperty()
				end
			end	
				-- [1-2-6-1] 矢の種類*
				ArrowSpecBowArrowType_Selected = {false, false, false, false}
				function ArrowSpec_BowArrowType()
					gg.getResults(9999)
					gg.setVisible(false)
					ArrowSpecBowArrowTypeMenu = gg.choice({
						(ArrowSpecBowArrowType_Selected[1] and "\n[ON]    連射\n" or "\n[1]    連射\n"),
						(ArrowSpecBowArrowType_Selected[2] and "\n[ON]    拡散\n" or "\n[2]    拡散\n"),						
						(ArrowSpecBowArrowType_Selected[3] and "\n[ON]    貫通\n" or "\n[3]    貫通\n"),		
						(ArrowSpecBowArrowType_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/弓/\n\n矢の種類*")
					if ArrowSpecBowArrowTypeMenu == nil then
						temporarilyhide()
						ArrowSpec_BowArrowType()
					elseif ArrowSpecBowArrowTypeMenu >= 1 and ArrowSpecBowArrowTypeMenu <= 4 then
						for i = 1, 4 do
							ArrowSpecBowArrowType_Selected[i] = false
						end
						ArrowSpecBowArrowType_Selected[ArrowSpecBowArrowTypeMenu] = true	
						if ArrowSpecBowArrowTypeMenu >= 1 and ArrowSpecBowArrowTypeMenu <= 3 then
							local chosenValue = tostring(ArrowSpecBowArrowTypeMenu)
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArrowSpecBowArrowTypeMenu == 4 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "弓の矢の種類を変更 #Dword型\n\n1: 連射,     2: 拡散,        3: 貫通\n[  1 ~ 3　　]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArrowSpec_BowArrowType()	
					elseif ArrowSpecBowArrowTypeMenu == 5 then
						Bow()
					end
				end		
				-- [1-2-6-2] 矢の種類*
				ArrowSpecBowLevel_Selected = {false, false, false, false, false}
				function ArrowSpec_BowLevel()
					gg.getResults(9999)
					gg.setVisible(false)
					ArrowSpecBowLevelMenu = gg.choice({
						(ArrowSpecBowLevel_Selected[1] and "\n[ON]    Lv1\n" or "\n[1]    Lv1\n"),
						(ArrowSpecBowLevel_Selected[2] and "\n[ON]    Lv2\n" or "\n[2]    Lv2\n"),						
						(ArrowSpecBowLevel_Selected[3] and "\n[ON]    Lv3\n" or "\n[3]    Lv3\n"),	
						(ArrowSpecBowLevel_Selected[4] and "\n[ON]    Lv4\n" or "\n[4]    Lv4\n"),								
						(ArrowSpecBowLevel_Selected[5] and "\n[ON]    任意の値\n" or "\n[5]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/弓/\n\n矢のレベル*")
					if ArrowSpecBowLevelMenu == nil then
						temporarilyhide()
						ArrowSpec_BowLevel()
					elseif ArrowSpecBowLevelMenu >= 1 and ArrowSpecBowLevelMenu <= 5 then
						for i = 1, 5 do
							ArrowSpecBowLevel_Selected[i] = false
						end
						ArrowSpecBowLevel_Selected[ArrowSpecBowLevelMenu] = true	
						if ArrowSpecBowLevelMenu >= 1 and ArrowSpecBowLevelMenu <= 4 then
							local chosenValue = tostring(ArrowSpecBowLevelMenu)
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArrowSpecBowLevelMenu == 5 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "弓の矢のレベルを変更 #Dword型\n\n[  1 ~ 4　　]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArrowSpec_BowLevel()	
					elseif ArrowSpecBowLevelMenu == 6 then
						Bow()
					end
				end		
				-- [1-2-6-3] アドレスの再取得
				function Refresh_Bow()		
					local name1 = {"_Qapplyfix_ArrowSpec", "_Abaseaccuracy_ArrowSpec", "ArrowSpec_Bow"}
					local Prompt = gg.prompt({
						"\n[1]    矢の種類*\n[2]    矢のレベル*"
					}, {false}, {"checkbox"})
					if Prompt == nil then
						temporarilyhide()
						Bow()
					end
					
					if Prompt[2] == true then
						DeleteNameAddress(name1[1])
						DeleteNameAddress(name1[2])
						DeleteNameAddress(name1[3])
						valueFromClass("ArrowSpec")	
						ArrowSpecBowArrowType_Selected = {false, false, false, false}
						ArrowSpecBowLevel_Selected = {false, false, false, false, false}
					end
					Bow()
				end		
			-- [1-2-7] ボウガン
			function Bowgun()
				IncludeCheckAndTrueFalseA("BowgunAmmoSpec_Bowgun")
				Bowgun_Selected = {A, A, A, A, A, A}	
				gg.setVisible(false)
				BowgunMenu = gg.choice({
					(Bowgun_Selected[1] and "\n-> [1]    反動パターン*\n" or "\n[1]    反動パターン*\n"),
					(Bowgun_Selected[2] and "\n-> [2]    装填パターン*\n" or "\n[2]    装填パターン*\n"),
					(Bowgun_Selected[3] and "\n-> [3]    装填数*\n" or "\n[3]    装填数*\n"),
					(Bowgun_Selected[4] and "\n-> [4]    弾の種類*\n" or "\n[4]    弾の種類*\n"),
					(Bowgun_Selected[5] and "\n-> [5]    弾の属性種類*\n" or "\n[5]    弾の属性種類*\n"),
					(Bowgun_Selected[6] and "\n-> [6]    弾のレベル*\n" or "\n[6]    弾のレベル*\n"),
					"\n[~]    アドレスの再取得\n",					
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/各武器の性質/\n\nボウガン")
				if BowgunMenu == nil then
					temporarilyhide()
					Bowgun()
				elseif BowgunMenu >= 1 and BowgunMenu <= 6 then
					LoadNameAddress("BowgunAmmoSpec_Bowgun")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else
						valueFromClass("BowgunAmmoSpec")		
						applyoffset(0x18, gg.TYPE_DWORD)
						gg.refineNumber("1~4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)	
						AddNameAddress("BowgunAmmoSpec_Bowgun")
					end
					if BowgunMenu == 1 then
						BowgunAmmoSpec_BowgunRecoilType()
					elseif BowgunMenu == 2 then		
						applyoffset(0x4, gg.TYPE_DWORD)
						BowgunAmmoSpec_BowgunReloadType()
					elseif BowgunMenu == 3 then							
						applyoffset(0x4, gg.TYPE_DWORD)
						BowgunAmmoSpec_BowgunCapacity()
					elseif BowgunMenu >= 4 and BowgunMenu <= 6 then
						applyoffset(-0x8, gg.TYPE_DWORD)
						MoveThePointer()			
						if BowgunMenu == 4 then	
							applyoffset(0x14, gg.TYPE_DWORD)
							BowgunAmmoSettingsProto_BowgunAmmoType()
						elseif BowgunMenu == 5 then
							applyoffset(0x18, gg.TYPE_DWORD)
							BowgunAmmoSettingsProto_BowgunAmmoElementType()
						elseif BowgunMenu == 6 then	
							BowgunAmmoSettingsProto_BowgunAmmoLevel()
						end
					end
				elseif BowgunMenu == 7 then			
					Refresh_Bowgun()
				elseif BowgunMenu == 8 then		
					WeaponProperty()
				end
			end		
				-- [1-2-7-1] 反動パターン*		
				BowgunAmmoSpecBowgunRecoilType_Selected = {false, false, false, false, false}
				function BowgunAmmoSpec_BowgunRecoilType()
					gg.getResults(9999)
					gg.setVisible(false)
					BowgunAmmoSpecBowgunRecoilTypeMenu = gg.choice({
						(BowgunAmmoSpecBowgunRecoilType_Selected[1] and "\n[ON]    小\n" or "\n[1]    小\n"),
						(BowgunAmmoSpecBowgunRecoilType_Selected[2] and "\n[ON]    中\n" or "\n[2]    中\n"),						
						(BowgunAmmoSpecBowgunRecoilType_Selected[3] and "\n[ON]    大\n" or "\n[3]    大\n"),		
						(BowgunAmmoSpecBowgunRecoilType_Selected[4] and "\n[ON]    特大\n" or "\n[4]    特大\n"),
						(BowgunAmmoSpecBowgunRecoilType_Selected[5] and "\n[ON]    任意の値\n" or "\n[5]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/ボウガン/\n\n反動パターン*")
					if BowgunAmmoSpecBowgunRecoilTypeMenu == nil then
						temporarilyhide()
						BowgunAmmoSpec_BowgunRecoilType()
					elseif BowgunAmmoSpecBowgunRecoilTypeMenu >= 1 and BowgunAmmoSpecBowgunRecoilTypeMenu <= 5 then
						for i = 1, 5 do
							BowgunAmmoSpecBowgunRecoilType_Selected[i] = false
						end
						BowgunAmmoSpecBowgunRecoilType_Selected[BowgunAmmoSpecBowgunRecoilTypeMenu] = true	
						if BowgunAmmoSpecBowgunRecoilTypeMenu >= 1 and BowgunAmmoSpecBowgunRecoilTypeMenu <= 4 then
							local chosenValue = tostring(BowgunAmmoSpecBowgunRecoilTypeMenu)
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BowgunAmmoSpecBowgunRecoilTypeMenu == 5 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ボウガンの反動パターンを変更 #Dword型\n\n\n1: 小,  2: 中,  3:大,  4:特大\n[  1 ~ 4  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BowgunAmmoSpec_BowgunRecoilType()	
					elseif BowgunAmmoSpecBowgunRecoilTypeMenu == 6 then
						Bowgun()
					end
				end	
				-- [1-2-7-2] 装填パターン*
				BowgunAmmoSpecBowgunReloadType_Selected = {false, false, false, false, false}
				function BowgunAmmoSpec_BowgunReloadType()
					gg.getResults(9999)
					gg.setVisible(false)
					BowgunAmmoSpecBowgunReloadTypeMenu = gg.choice({
						(BowgunAmmoSpecBowgunReloadType_Selected[1] and "\n[ON]    小\n" or "\n[1]    小\n"),
						(BowgunAmmoSpecBowgunReloadType_Selected[2] and "\n[ON]    中\n" or "\n[2]    中\n"),						
						(BowgunAmmoSpecBowgunReloadType_Selected[3] and "\n[ON]    大\n" or "\n[3]    大\n"),		
						(BowgunAmmoSpecBowgunReloadType_Selected[4] and "\n[ON]    特大\n" or "\n[4]    特大\n"),
						(BowgunAmmoSpecBowgunReloadType_Selected[5] and "\n[ON]    任意の値\n" or "\n[5]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/ボウガン/\n\n装填パターン*")
					if BowgunAmmoSpecBowgunReloadTypeMenu == nil then
						temporarilyhide()
						BowgunAmmoSpec_BowgunReloadType()
					elseif BowgunAmmoSpecBowgunReloadTypeMenu >= 1 and BowgunAmmoSpecBowgunReloadTypeMenu <= 5 then
						for i = 1, 5 do
							BowgunAmmoSpecBowgunReloadType_Selected[i] = false
						end
						BowgunAmmoSpecBowgunReloadType_Selected[BowgunAmmoSpecBowgunReloadTypeMenu] = true	
						if BowgunAmmoSpecBowgunReloadTypeMenu >= 1 and BowgunAmmoSpecBowgunReloadTypeMenu <= 4 then
							local chosenValue = tostring(BowgunAmmoSpecBowgunReloadTypeMenu)
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BowgunAmmoSpecBowgunReloadTypeMenu == 5 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ボウガンの装填パターンを変更 #Dword型\n\n1: 小,  2: 中,  3:大,  4:特大\n[  1 ~ 4  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BowgunAmmoSpec_BowgunReloadType()	
					elseif BowgunAmmoSpecBowgunReloadTypeMenu == 6 then
						Bowgun()
					end
				end		
				-- [1-2-7-3] 装填数*		
				BowgunAmmoSpecBowgunCapacity_Selected = {false, false, false}
				function BowgunAmmoSpec_BowgunCapacity()
					gg.getResults(9999)
					gg.setVisible(false)
					local BowgunAmmoCapacity = {"5", "50"}
					BowgunAmmoSpecBowgunCapacityMenu = gg.choice({
						(BowgunAmmoSpecBowgunCapacity_Selected[1] and "\n[ON]    5\n" or "\n[1]    5\n"),
						(BowgunAmmoSpecBowgunCapacity_Selected[2] and "\n[ON]    50\n" or "\n[2]    50\n"),
						(BowgunAmmoSpecBowgunCapacity_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/ボウガン/\n\n装填数*")
					if BowgunAmmoSpecBowgunCapacityMenu == nil then
						temporarilyhide()
						BowgunAmmoSpec_BowgunCapacity()
					elseif BowgunAmmoSpecBowgunCapacityMenu >= 1 and BowgunAmmoSpecBowgunCapacityMenu <= 3 then
						for i = 1, 3 do
							BowgunAmmoSpecBowgunCapacity_Selected[i] = false
						end
						BowgunAmmoSpecBowgunCapacity_Selected[BowgunAmmoSpecBowgunCapacityMenu] = true	
						if BowgunAmmoSpecBowgunCapacityMenu >= 1 and BowgunAmmoSpecBowgunCapacityMenu <= 2 then
							local chosenValue = BowgunAmmoCapacity[BowgunAmmoSpecBowgunCapacityMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BowgunAmmoSpecBowgunCapacityMenu == 3 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ボウガンの装填数を変更 #Dword型\n\n[  1 ~   ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BowgunAmmoSpec_BowgunCapacity()	
					elseif BowgunAmmoSpecBowgunCapacityMenu == 4 then
						Bowgun()
					end
				end	
				-- [1-2-7-4] 弾の種類*
				BowgunAmmoSettingsProtoBowgunAmmoType_Selected = {false, false, false, false, false, false}
				function BowgunAmmoSettingsProto_BowgunAmmoType()
					gg.getResults(9999)
					gg.setVisible(false)
					BowgunAmmoSettingsProtoBowgunAmmoTypeMenu = gg.choice({
						(BowgunAmmoSettingsProtoBowgunAmmoType_Selected[1] and "\n[ON]    通常弾\n" or "\n[1]    通常弾\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoType_Selected[2] and "\n[ON]    貫通弾\n" or "\n[2]    貫通弾\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoType_Selected[3] and "\n[ON]    散弾\n" or "\n[3]    散弾\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoType_Selected[4] and "\n[ON]    徹甲榴弾\n" or "\n[4]    徹甲榴弾\n"),						
						(BowgunAmmoSettingsProtoBowgunAmmoType_Selected[5] and "\n[ON]    炸裂弾\n" or "\n[5]    炸裂弾\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoType_Selected[6] and "\n[ON]    任意の値\n" or "\n[6]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/ボウガン/\n\n弾の種類*")
					if BowgunAmmoSettingsProtoBowgunAmmoTypeMenu == nil then
						temporarilyhide()
						BowgunAmmoSettingsProto_BowgunAmmoType()
					elseif BowgunAmmoSettingsProtoBowgunAmmoTypeMenu >= 1 and BowgunAmmoSettingsProtoBowgunAmmoTypeMenu <= 6 then
						for i = 1, 6 do
							BowgunAmmoSettingsProtoBowgunAmmoType_Selected[i] = false
						end
						BowgunAmmoSettingsProtoBowgunAmmoType_Selected[BowgunAmmoSettingsProtoBowgunAmmoTypeMenu] = true	
						if BowgunAmmoSettingsProtoBowgunAmmoTypeMenu >= 1 and BowgunAmmoSettingsProtoBowgunAmmoTypeMenu <= 5 then
							local chosenValue = tostring(BowgunAmmoSettingsProtoBowgunAmmoTypeMenu)
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BowgunAmmoSettingsProtoBowgunAmmoTypeMenu == 6 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ボウガンの弾の種類を変更 #Dword型\n\n1: 通常弾,  2: 貫通弾,  3:散弾,  4:徹甲榴弾,  5: 炸裂弾\n[  1 ~ 5  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BowgunAmmoSettingsProto_BowgunAmmoType()	
					elseif BowgunAmmoSettingsProtoBowgunAmmoTypeMenu == 7 then
						Bowgun()
					end
				end		
				-- [1-2-7-5] 弾の属性種類*		
				BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected = {false, false, false, false, false, false, false, false, false, false, false}
				function BowgunAmmoSettingsProto_BowgunAmmoElementType()
					gg.getResults(9999)
					gg.setVisible(false)
					BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu = gg.choice({
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[1] and "\n[ON]    なし\n" or "\n[1]    なし\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[2] and "\n[ON]    火\n" or "\n[2]    火\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[3] and "\n[ON]    水\n" or "\n[3]    水\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[4] and "\n[ON]    雷\n" or "\n[4]    雷\n"),						
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[5] and "\n[ON]    氷\n" or "\n[5]    氷\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[6] and "\n[ON]    龍\n" or "\n[6]    龍\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[7] and "\n[ON]    毒\n" or "\n[7]    毒\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[8] and "\n[ON]    麻痺\n" or "\n[8]    麻痺\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[9] and "\n[ON]    睡眠\n" or "\n[9]    睡眠\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[10] and "\n[ON]    爆破\n" or "\n[10]    爆破\n"),						
						(BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[11] and "\n[ON]    任意の値\n" or "\n[11]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/ボウガン/\n\n弾の属性種類*")
					if BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu == nil then
						temporarilyhide()
						BowgunAmmoSettingsProto_BowgunAmmoElementType()
					elseif BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu >= 1 and BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu <= 11 then
						for i = 1, 11 do
							BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[i] = false
						end
						BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected[BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu] = true	
						if BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu >= 1 and BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu <= 10 then
							local chosenValue = tostring(BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu)
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu == 11 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ボウガンの弾の属性種類を変更 #Dword型\n\n1: なし,     2: 火,        3: 水,        4: 雷,        5: 氷,        6: 龍, \n   7: 毒,        8: 麻痺,       9: 睡眠,       10: 爆破\n[  1 ~ 10  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						BowgunAmmoSettingsProto_BowgunAmmoElementType()	
					elseif BowgunAmmoSettingsProtoBowgunAmmoElementTypeMenu == 12 then
						Bowgun()
					end
				end		
				-- [1-2-7-6] 弾のレベル*
				BowgunAmmoSettingsProtoBowgunAmmoLevel_Selected = {false, false, false, false}
				function BowgunAmmoSettingsProto_BowgunAmmoLevel()
					gg.getResults(9999)
					gg.setVisible(false)
					BowgunAmmoSettingsProtoBowgunAmmoLevelMenu = gg.choice({		
						(BowgunAmmoSettingsProtoBowgunAmmoLevel_Selected[1] and "\n[ON]    Lv1\n" or "\n[1]    Lv1\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoLevel_Selected[2] and "\n[ON]    Lv2\n" or "\n[2]    Lv2\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoLevel_Selected[3] and "\n[ON]    Lv3\n" or "\n[3]    Lv3\n"),
						(BowgunAmmoSettingsProtoBowgunAmmoLevel_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/各武器の性質/ボウガン/\n\n弾のレベル*")
					if BowgunAmmoSettingsProtoBowgunAmmoLevelMenu == nil then
						temporarilyhide()
						BowgunAmmoSettingsProto_BowgunAmmoLevel()
					elseif BowgunAmmoSettingsProtoBowgunAmmoLevelMenu >= 1 and BowgunAmmoSettingsProtoBowgunAmmoLevelMenu <= 4 then
						for i = 1, 4 do
							BowgunAmmoSettingsProtoBowgunAmmoLevel_Selected[i] = false
						end
						BowgunAmmoSettingsProtoBowgunAmmoLevel_Selected[BowgunAmmoSettingsProtoBowgunAmmoLevelMenu] = true
						if BowgunAmmoSettingsProtoBowgunAmmoLevelMenu >= 1 and BowgunAmmoSettingsProtoBowgunAmmoLevelMenu <= 3 then
							local chosenValue = tostring(BowgunAmmoSettingsProtoBowgunAmmoLevelMenu)
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif BowgunAmmoSettingsProtoBowgunAmmoLevelMenu == 4 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ボウガンの弾のレベルを変更 #Dword型\n\n[  1 ~ 3  ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end	
						BowgunAmmoSettingsProto_BowgunAmmoLevel()	
					elseif BowgunAmmoSettingsProtoBowgunAmmoLevelMenu == 5 then
						Bowgun()
					end
				end		
				-- [1-2-7-7] アドレスの再取得
				function Refresh_Bowgun()
					local name1 = {"_Qapplyfix_BowgunAmmoSpec", "_Abaseaccuracy_BowgunAmmoSpec", "BowgunAmmoSpec_Bowgun"}
					local Prompt = gg.prompt({
						"\n[1]    反動パターン*\n[2]    装填パターン*\n[3]    装填数*\n[4]    弾の種類*\n[5]    弾の属性種類*\n[6]    弾のレベル*"
					}, {false}, {"checkbox"})
					if Prompt == nil then
						temporarilyhide()
						Bowgun()
					end
					if Prompt[1] == true then
						DeleteNameAddress(name1[1])
						DeleteNameAddress(name1[2])
						DeleteNameAddress(name1[3])
						valueFromClass("BowgunAmmoSpec")	
						BowgunAmmoSpecBowgunRecoilType_Selected = {false, false, false, false, false}	
						BowgunAmmoSpecBowgunReloadType_Selected = {false, false, false, false, false}
						BowgunAmmoSpecBowgunCapacity_Selected = {false, false, false}
						BowgunAmmoSettingsProtoBowgunAmmoType_Selected = {false, false, false, false, false, false}
						BowgunAmmoSettingsProtoBowgunAmmoElementType_Selected = {false, false, false, false, false, false, false, false, false, false, false}
						BowgunAmmoSettingsProtoBowgunAmmoLevel_Selected = {false, false, false, false}
					end
					Bowgun()
				end	
		-- [1-3] 武器の性能
		function WeaponSpec()
			IncludeCheckAndTrueFalseA("WeaponLevelSpecSettingsProto_Weapon")
			IncludeCheckAndTrueFalseB("WeaponSpecSettingsProto_Weapon")	
			WeaponSpec_Selected = {A, A, A, B, B, B}
			gg.setVisible(false)	
			WeaponSpecMenu = gg.choice({
				(WeaponSpec_Selected[1] and "\n-> [1]    攻撃力\n" or "\n[1]    攻撃力\n"),
				(WeaponSpec_Selected[2] and "\n-> [2]    属性攻撃力\n" or "\n[2]    属性攻撃力\n"),
				(WeaponSpec_Selected[3] and "\n-> [3]    会心率\n" or "\n[3]    会心率\n"),
				(WeaponSpec_Selected[4] and "\n-> [4]    属性種類\n" or "\n[4]    属性種類\n"),
				(WeaponSpec_Selected[5] and "\n-> [5]    ノーマルスキル (武器の指定)\n" or "\n[5]    ノーマルスキル (武器の指定)\n"),
				(WeaponSpec_Selected[6] and "\n-> [6]    スペシャルスキルレベル\n" or "\n[6]    スペシャルスキルレベル\n"),				
				"\n[←]    もどる"
			}, nil, "メインメニュー/装備/\n\n武器の性能")	
			if WeaponSpecMenu == nil then
				temporarilyhide()
				WeaponSpec()
			elseif WeaponSpecMenu >= 1 and WeaponSpecMenu <= 3 then
				LoadNameAddress("WeaponLevelSpecSettingsProto_Weapon")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else			
					valueFromClass("WeaponLevelSpecSettingsProto")	
					applyoffset(0x14, gg.TYPE_DWORD)
					gg.refineNumber("1~10,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("WeaponLevelSpecSettingsProto_Weapon")
				end
				if WeaponSpecMenu == 1 then
					applyoffset(0x8, gg.TYPE_DWORD)	
					WeaponLevelSpecSettingsProto_WeaponAttack()	
				elseif WeaponSpecMenu == 2 then
					applyoffset(0xC, gg.TYPE_DWORD)	
					WeaponLevelSpecSettingsProto_WeaponElementAttack()				
				elseif WeaponSpecMenu == 3 then
					applyoffset(0x10, gg.TYPE_DWORD)	
					WeaponLevelSpecSettingsProto_WeaponCritical()	
				end
			elseif WeaponSpecMenu >= 4 and WeaponSpecMenu <= 6 then
				LoadNameAddress("WeaponSpecSettingsProto_Weapon")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else			
					valueFromClass("WeaponSpecSettingsProto")
					applyoffset(0x14, gg.TYPE_DWORD)
					gg.refineNumber("1~10,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("WeaponSpecSettingsProto_Weapon")
				end
				if WeaponSpecMenu == 4 then
					applyoffset(0x8, gg.TYPE_DWORD)	
					WeaponSpecSettingsProto_WeaponElementType()							
				elseif WeaponSpecMenu == 5 then	
					WeaponSpecSettingsProto_WeaponNormalSkillsetting()	
				elseif WeaponSpecMenu == 6 then
					WeaponSpecSettingsProto_WeaponSpecialSkillAllLevel()					
				end
				WeaponSpec()
			elseif WeaponSpecMenu == 7 then
				Equipment()
			end		
		end	
			-- [1-3-1] 攻撃力
			WeaponLevelSpecSettingsProtoWeaponAttack_Selected = {false, false, false, false}
			function WeaponLevelSpecSettingsProto_WeaponAttack()
				gg.getResults(9999)
				gg.setVisible(false)
				local WeaponAttack = {"3,000", "12,000", "3,000,000"}
				WeaponLevelSpecSettingsProtoWeaponAttackMenu = gg.choice({
					(WeaponLevelSpecSettingsProtoWeaponAttack_Selected[1] and "\n[ON]    3,000\n" or "\n[1]    3,000\n"),
					(WeaponLevelSpecSettingsProtoWeaponAttack_Selected[2] and "\n[ON]    12,000\n" or "\n[2]    12,000\n"),
					(WeaponLevelSpecSettingsProtoWeaponAttack_Selected[3] and "\n[ON]    3,000,000\n" or "\n[3]    3,000,000\n"),
					(WeaponLevelSpecSettingsProtoWeaponAttack_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/武器の性能/\n\n攻撃力")
				if WeaponLevelSpecSettingsProtoWeaponAttackMenu == nil then
					temporarilyhide()
					WeaponLevelSpecSettingsProto_WeaponAttack()
				elseif WeaponLevelSpecSettingsProtoWeaponAttackMenu >= 1 and WeaponLevelSpecSettingsProtoWeaponAttackMenu <= 4 then
					for i = 1, 4 do
						WeaponLevelSpecSettingsProtoWeaponAttack_Selected[i] = false
					end
					WeaponLevelSpecSettingsProtoWeaponAttack_Selected[WeaponLevelSpecSettingsProtoWeaponAttackMenu] = true				
					if WeaponLevelSpecSettingsProtoWeaponAttackMenu >= 1 and WeaponLevelSpecSettingsProtoWeaponAttackMenu <= 3 then
						local chosenValue = WeaponAttack[WeaponLevelSpecSettingsProtoWeaponAttackMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif WeaponLevelSpecSettingsProtoWeaponAttackMenu == 4 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全武器の攻撃力を変更 #Dword型\n\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					WeaponLevelSpecSettingsProto_WeaponAttack()
				elseif WeaponLevelSpecSettingsProtoWeaponAttackMenu == 5 then
					WeaponSpec()
				end
			end	
			-- [1-3-2] 属性攻撃力
			WeaponLevelSpecSettingsProtoWeaponElementAttack_Selected = {false, false, false, false}
			function WeaponLevelSpecSettingsProto_WeaponElementAttack()
				gg.getResults(9999)
				gg.setVisible(false)
				local WeaponElementAttack = {"1,500", "6,000", "1,500,000"}
				WeaponLevelSpecSettingsProtoWeaponElementAttackMenu = gg.choice({
					(WeaponLevelSpecSettingsProtoWeaponElementAttack_Selected[1] and "\n[ON]    1,500\n" or "\n[1]    1,500\n"),
					(WeaponLevelSpecSettingsProtoWeaponElementAttack_Selected[2] and "\n[ON]    6,000\n" or "\n[2]    6,000\n"),
					(WeaponLevelSpecSettingsProtoWeaponElementAttack_Selected[3] and "\n[ON]    1,500,000\n" or "\n[3]    1,500,000\n"),
					(WeaponLevelSpecSettingsProtoWeaponElementAttack_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/武器の性能/\n\n属性攻撃力")
				if WeaponLevelSpecSettingsProtoWeaponElementAttackMenu == nil then
					temporarilyhide()
					WeaponLevelSpecSettingsProto_WeaponElementAttack()
				elseif WeaponLevelSpecSettingsProtoWeaponElementAttackMenu >= 1 and WeaponLevelSpecSettingsProtoWeaponElementAttackMenu <= 4 then
					for i = 1, 4 do
						WeaponLevelSpecSettingsProtoWeaponElementAttack_Selected[i] = false
					end
					WeaponLevelSpecSettingsProtoWeaponElementAttack_Selected[WeaponLevelSpecSettingsProtoWeaponElementAttackMenu] = true				
					if WeaponLevelSpecSettingsProtoWeaponElementAttackMenu >= 1 and WeaponLevelSpecSettingsProtoWeaponElementAttackMenu <= 3 then
						local chosenValue = WeaponElementAttack[WeaponLevelSpecSettingsProtoWeaponElementAttackMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif WeaponLevelSpecSettingsProtoWeaponElementAttackMenu == 4 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全武器の属性攻撃力を変更 #Dword型\n\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					WeaponLevelSpecSettingsProto_WeaponElementAttack()
				elseif WeaponLevelSpecSettingsProtoWeaponElementAttackMenu == 5 then
					WeaponSpec()
				end
			end	
			-- [1-3-3] 会心率
			WeaponLevelSpecSettingsProtoWeaponCritical_Selected = {false, false, false, false}
			function WeaponLevelSpecSettingsProto_WeaponCritical()
				gg.getResults(9999)
				gg.setVisible(false)
				local WeaponCritical = {"0", "30", "100"}
				WeaponLevelSpecSettingsProtoWeaponCriticalMenu = gg.choice({
					(WeaponLevelSpecSettingsProtoWeaponCritical_Selected[1] and "\n[ON]    0\n" or "\n[1]    0\n"),
					(WeaponLevelSpecSettingsProtoWeaponCritical_Selected[2] and "\n[ON]    30\n" or "\n[2]    30\n"),
					(WeaponLevelSpecSettingsProtoWeaponCritical_Selected[3] and "\n[ON]    100\n" or "\n[3]    100\n"),
					(WeaponLevelSpecSettingsProtoWeaponCritical_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/武器の性能/\n\n会心率")
				if WeaponLevelSpecSettingsProtoWeaponCriticalMenu == nil then
					temporarilyhide()
					WeaponLevelSpecSettingsProto_WeaponCritical()
				elseif WeaponLevelSpecSettingsProtoWeaponCriticalMenu >= 1 and WeaponLevelSpecSettingsProtoWeaponCriticalMenu <= 4 then
					for i = 1, 4 do
						WeaponLevelSpecSettingsProtoWeaponCritical_Selected[i] = false
					end
					WeaponLevelSpecSettingsProtoWeaponCritical_Selected[WeaponLevelSpecSettingsProtoWeaponCriticalMenu] = true				
					if WeaponLevelSpecSettingsProtoWeaponCriticalMenu >= 1 and WeaponLevelSpecSettingsProtoWeaponCriticalMenu <= 3 then
						local chosenValue = WeaponCritical[WeaponLevelSpecSettingsProtoWeaponCriticalMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif WeaponLevelSpecSettingsProtoWeaponCriticalMenu == 4 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全武器の会心率を変更 #Dword型\n\n割合%\n[  -100 ~ 100  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					WeaponLevelSpecSettingsProto_WeaponCritical()
				elseif WeaponLevelSpecSettingsProtoWeaponCriticalMenu == 5 then
					WeaponSpec()
				end
			end	
			-- [1-3-4] 属性種類
			WeaponSpecSettingsProtoWeaponElementType_Selected = {false, false, false, false, false, false, false, false, false, false, false}
			function WeaponSpecSettingsProto_WeaponElementType()
				gg.getResults(9999)
				gg.setVisible(false)
				WeaponSpecSettingsProtoWeaponElementTypeMenu = gg.choice({
	                    (WeaponSpecSettingsProtoWeaponElementType_Selected[1] and "\n[ON]    なし\n" or "\n[1]    なし\n"),
						(WeaponSpecSettingsProtoWeaponElementType_Selected[2] and "\n[ON]    火\n" or "\n[2]    火\n"),
						(WeaponSpecSettingsProtoWeaponElementType_Selected[3] and "\n[ON]    水\n" or "\n[3]    水\n"),
						(WeaponSpecSettingsProtoWeaponElementType_Selected[4] and "\n[ON]    雷\n" or "\n[4]    雷\n"),						
						(WeaponSpecSettingsProtoWeaponElementType_Selected[5] and "\n[ON]    氷\n" or "\n[5]    氷\n"),
						(WeaponSpecSettingsProtoWeaponElementType_Selected[6] and "\n[ON]    龍\n" or "\n[6]    龍\n"),
						(WeaponSpecSettingsProtoWeaponElementType_Selected[7] and "\n[ON]    毒\n" or "\n[7]    毒\n"),
						(WeaponSpecSettingsProtoWeaponElementType_Selected[8] and "\n[ON]    麻痺\n" or "\n[8]    麻痺\n"),
						(WeaponSpecSettingsProtoWeaponElementType_Selected[9] and "\n[ON]    睡眠\n" or "\n[9]    睡眠\n"),
						(WeaponSpecSettingsProtoWeaponElementType_Selected[10] and "\n[ON]    爆破\n" or "\n[10]    爆破\n"),						
						(WeaponSpecSettingsProtoWeaponElementType_Selected[11] and "\n[ON]    任意の値\n" or "\n[11]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/武器の性能/\n\n属性種類")
				if WeaponSpecSettingsProtoWeaponElementTypeMenu == nil then
					temporarilyhide()
					WeaponSpecSettingsProto_WeaponElementType()
				elseif WeaponSpecSettingsProtoWeaponElementTypeMenu >= 1 and WeaponSpecSettingsProtoWeaponElementTypeMenu <= 11 then
					for i = 1, 11 do
						WeaponSpecSettingsProtoWeaponElementType_Selected[i] = false
					end
					WeaponSpecSettingsProtoWeaponElementType_Selected[WeaponSpecSettingsProtoWeaponElementTypeMenu] = true				
					if WeaponSpecSettingsProtoWeaponElementTypeMenu >= 1 and WeaponSpecSettingsProtoWeaponElementTypeMenu <= 10 then
						local chosenValue = tostring(WeaponSpecSettingsProtoWeaponElementTypeMenu)
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif WeaponSpecSettingsProtoWeaponElementTypeMenu == 11 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全武器の属性種類を変更 #Dword型\n\n1: なし,     2: 火,        3: 水,        4: 雷,        5: 氷,        6: 龍, \n   7: 毒,        8: 麻痺,       9: 睡眠,       10: 爆破\n[  1 ~ 10  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					WeaponSpecSettingsProto_WeaponElementType()
				elseif WeaponSpecSettingsProtoWeaponElementTypeMenu == 12 then
					WeaponSpec()
				end
			end	
			-- [1-3-5] ノーマルスキル (武器の指定)
			WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected = {false, false, false, false, false, false, false, false, false}
			function WeaponSpecSettingsProto_WeaponNormalSkillsetting()				
				local function moverefine()
					applyoffset(0x20, gg.TYPE_DWORD)
					MoveThePointer()
					applyoffset(0x10, gg.TYPE_DWORD)
					MoveThePointer()
					applyoffset(0x20, gg.TYPE_DWORD)
					MoveThePointer()
					applyoffset(0x10, gg.TYPE_DWORD)
					local ranges = {{"5000~5503"},{"7000~7103"}} -- (多分不要,SPスキル以外になるようリファインする)
					gg.getResults(9999)
					for _, rangeList in ipairs(ranges) do
						for _, range in ipairs(rangeList) do
							gg.getResults(9999)
							gg.refineNumber(range, gg.TYPE_DWORD, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)
						end
					end
					gg.getResults(9999)
				end
				gg.setVisible(false)
				WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu = gg.choice({
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] and "\n-> [1]    全武器 (一括変更)\n" or "\n[1]    全武器 (一括変更)\n"),
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[2] and "\n-> [2]    大剣\n" or "\n[2]    大剣\n"),
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[3] and "\n-> [3]    片手剣\n" or "\n[3]    片手剣\n"),	
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[4] and "\n-> [4]    双剣\n" or "\n[4]    双剣\n"),
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[5] and "\n-> [5]    太刀\n" or "\n[5]    太刀\n"),
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[6] and "\n-> [6]    ハンマー\n" or "\n[6]    ハンマー\n"),
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[7] and "\n-> [7]    ランス\n" or "\n[7]    ランス\n"),
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[8] and "\n-> [8]    弓\n" or "\n[8]    弓\n"),
					(WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[9] and "\n-> [9]    ライトボウガン\n" or "\n[9]    ライトボウガン\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/武器の性能/\n\nノーマルスキル (武器の指定)")
				if WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == nil then
					temporarilyhide()
					WeaponSpecSettingsProto_WeaponNormalSkillsetting()	
				elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu >= 1 and WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu <= 9 then	
					WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu] = true	
					LoadNameAddress("WeaponSpecSettingsProto_Weapon")
					applyoffset(0x4, gg.TYPE_DWORD)	
					if WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 1 then				
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected = {true, false, false, false, false, false, false, false, false}
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillAll()                            
					elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 2 then
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] = false
						gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillGreatSword()
					elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 3 then
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] = false
						gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillSwordShield()								
					elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 4 then
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] = false
						gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillDualBlades()								
					elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 5 then
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] = false
						gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillLongSword()							
					elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 6 then
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] = false
						gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillHammer()								
					elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 7 then	
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] = false
						gg.refineNumber("7", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillLance()								
					elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 8 then
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] = false
						gg.refineNumber("12", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillBow()								
					elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 9 then
						WeaponSpecSettingsProtoWeaponNormalSkillsetting_Selected[1] = false
						gg.refineNumber("14", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						moverefine()
						WeaponSpecSettingsProto_WeaponNormalSkillLightBowgun()							
					else
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				elseif WeaponSpecSettingsProtoWeaponNormalSkillsettingMenu == 10 then
					WeaponSpec()
				end				
			end
				-- [1-3-5-1] 全武器(一括変更)
				WeaponSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function WeaponSpecSettingsProto_WeaponNormalSkillAll()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5\n)\n" or "\n[8]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\n全武器 (一括変更)")
					if WeaponSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillAll()
					elseif WeaponSpecSettingsProtoNormalSkillAllMenu >= 1 and WeaponSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							WeaponSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillAll_Selected[WeaponSpecSettingsProtoNormalSkillAllMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillAllMenu >= 1 and WeaponSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "全武器のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						WeaponSpecSettingsProto_WeaponNormalSkillAll()
					elseif WeaponSpecSettingsProtoNormalSkillAllMenu == 14 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end		
				-- [1-3-5-2] 大剣
				WeaponSpecSettingsProtoNormalSkillGreatSword_Selected = {false, false, false, false, false, false, false, false, false, false, false}
				function WeaponSpecSettingsProto_WeaponNormalSkillGreatSword()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"5801", "2403", "2305","605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillGreatSwordMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[1] and "\n[ON]    ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[4] and "\n[ON]     麻痺耐性(5)\n" or "\n[4]    麻痺耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[5] and "\n[ON]     睡眠耐性(5)\n" or "\n[5]    睡眠耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[6] and "\n[ON]     耳栓(5)\n" or "\n[6]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[7] and "\n[ON]     風圧耐性(5)\n" or "\n[7]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[8] and "\n[ON]     耐震(3)\n" or "\n[8]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[9] and "\n[ON]     回避距離UP(5)\n" or "\n[9]    回避距離UP(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[10] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[10]    ジャスト回避強化(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[11] and "\n[ON]     任意の値\n" or "\n[11]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\n大剣")
					if WeaponSpecSettingsProtoNormalSkillGreatSwordMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillGreatSword()
					elseif WeaponSpecSettingsProtoNormalSkillGreatSwordMenu >= 1 and WeaponSpecSettingsProtoNormalSkillGreatSwordMenu <= 11 then
						for i = 1, 11 do
							WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillGreatSword_Selected[WeaponSpecSettingsProtoNormalSkillGreatSwordMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillGreatSwordMenu >= 1 and WeaponSpecSettingsProtoNormalSkillGreatSwordMenu <= 10 then
							local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillGreatSwordMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillGreatSwordMenu == 11 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "大剣のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end								
						end
						WeaponSpecSettingsProto_WeaponNormalSkillGreatSword()
					elseif WeaponSpecSettingsProtoNormalSkillGreatSwordMenu == 12 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end	
				-- [1-3-5-3] 片手剣
				WeaponSpecSettingsProtoNormalSkillSwordShield_Selected = {false, false, false, false, false, false, false, false, false, false}
				function WeaponSpecSettingsProto_WeaponNormalSkillSwordShield()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"5801", "2403", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillSwordShieldMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[2] and "\n[ON]     体幹強化(3\n)\n" or "\n[2]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[3] and "\n[ON]     麻痺耐性(5)\n" or "\n[3]    麻痺耐性(5\n)"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[4] and "\n[ON]     睡眠耐性(5)\n" or "\n[4]    睡眠耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[5] and "\n[ON]     耳栓(5)\n" or "\n[5]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[6] and "\n[ON]     風圧耐性(5\n)\n" or "\n[6]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[7] and "\n[ON]     耐震(3)\n" or "\n[7]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[8] and "\n[ON]     回避距離UP(5)\n" or "\n[8]    回避距離UP(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[9] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[9]    ジャスト回避強化(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[10] and "\n[ON]     任意の\n値" or "\n[10]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\n片手剣")
					if WeaponSpecSettingsProtoNormalSkillSwordShieldMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillSwordShield()
					elseif WeaponSpecSettingsProtoNormalSkillSwordShieldMenu >= 1 and WeaponSpecSettingsProtoNormalSkillSwordShieldMenu <= 10 then
						for i = 1, 10 do
							WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillSwordShield_Selected[WeaponSpecSettingsProtoNormalSkillSwordShieldMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillSwordShieldMenu >= 1 and WeaponSpecSettingsProtoNormalSkillSwordShieldMenu <= 9 then
							local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillSwordShieldMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillSwordShieldMenu == 10 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "片手剣のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end								
						end
						WeaponSpecSettingsProto_WeaponNormalSkillSwordShield()
					elseif WeaponSpecSettingsProtoNormalSkillSwordShieldMenu == 11 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end	
				-- [1-3-5-4] 双剣
				WeaponSpecSettingsProtoNormalSkillDualBlades_Selected = {false, false, false, false, false, false, false, false, false, false}
				function WeaponSpecSettingsProto_WeaponNormalSkillDualBlades()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"5801", "2403", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillDualBladesMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[3] and "\n[ON]     麻痺耐性(5)\n" or "\n[3]    麻痺耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[4] and "\n[ON]     睡眠耐性(5)\n" or "\n[4]    睡眠耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[5] and "\n[ON]     耳栓(5\n)\n" or "\n[5]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[6] and "\n[ON]     風圧耐性(5)\n" or "\n[6]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[7] and "\n[ON]     耐震(3)\n" or "\n[7]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[8] and "\n[ON]     回避距離UP(5)\n" or "\n[8]    回避距離UP(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[9] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[9]    ジャスト回避強化(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[10] and "\n[ON]     任意の値\n" or "\n[10]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\n双剣")
					if WeaponSpecSettingsProtoNormalSkillDualBladesMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillDualBlades()
					elseif WeaponSpecSettingsProtoNormalSkillDualBladesMenu >= 1 and WeaponSpecSettingsProtoNormalSkillDualBladesMenu <= 10 then
						for i = 1, 10 do
							WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillDualBlades_Selected[WeaponSpecSettingsProtoNormalSkillDualBladesMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillDualBladesMenu >= 1 and WeaponSpecSettingsProtoNormalSkillDualBladesMenu <= 9 then
							local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillDualBladesMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillDualBladesMenu == 10 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "双剣のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end								
						end
						WeaponSpecSettingsProto_WeaponNormalSkillDualBlades()
					elseif WeaponSpecSettingsProtoNormalSkillDualBladesMenu == 11 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end	
				-- [1-3-5-5] 太刀
				WeaponSpecSettingsProtoNormalSkillLongSword_Selected = {false, false, false, false, false, false, false, false, false, false, false}					
				function WeaponSpecSettingsProto_WeaponNormalSkillLongSword()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"5801", "2403", "2305", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillLongSwordMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[4] and "\n[ON]     麻痺耐性(5)\n" or "\n[4]    麻痺耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[5] and "\n[ON]     睡眠耐性(5)\n" or "\n[5]    睡眠耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[6] and "\n[ON]     耳栓(5)\n" or "\n[6]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[7] and "\n[ON]     風圧耐性(5)\n" or "\n[7]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[8] and "\n[ON]     耐震(3)\n" or "\n[8]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[9] and "\n[ON]     回避距離UP(5)\n" or "\n[9]    回避距離UP(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[10] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[10]    ジャスト回避強化(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLongSword_Selected[11] and "\n[ON]     任意の値\n" or "\n[11]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\n太刀")
					if WeaponSpecSettingsProtoNormalSkillLongSwordMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillLongSword()
					elseif WeaponSpecSettingsProtoNormalSkillLongSwordMenu >= 1 and WeaponSpecSettingsProtoNormalSkillLongSwordMenu <= 11 then
						for i = 1, 11 do
							WeaponSpecSettingsProtoNormalSkillLongSword_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillLongSword_Selected[WeaponSpecSettingsProtoNormalSkillLongSwordMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillLongSwordMenu >= 1 and WeaponSpecSettingsProtoNormalSkillLongSwordMenu <= 10 then
							local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillLongSwordMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillLongSwordMenu == 11 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "太刀のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end								
						end
						WeaponSpecSettingsProto_WeaponNormalSkillLongSword()
					elseif WeaponSpecSettingsProtoNormalSkillLongSwordMenu == 12 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end				
				-- [1-3-5-6] ハンマー
				WeaponSpecSettingsProtoNormalSkillHammer_Selected = {false, false, false, false, false, false, false, false, false, false}										
				function WeaponSpecSettingsProto_WeaponNormalSkillHammer()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"5801", "2403", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillHammerMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[3] and "\n[ON]     麻痺耐性(5)\n" or "\n[3]    麻痺耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[4] and "\n[ON]     睡眠耐性(5)\n" or "\n[4]    睡眠耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[5] and "\n[ON]     耳栓(5)\n" or "\n[5]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[6] and "\n[ON]     風圧耐性(5)\n" or "\n[6]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[7] and "\n[ON]     耐震(3)\n" or "\n[7]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[8] and "\n[ON]     回避距離UP(5)\n" or "\n[8]    回避距離UP(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[9] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[9]    ジャスト回避強化(5\n)"),
						(WeaponSpecSettingsProtoNormalSkillHammer_Selected[10] and "\n[ON]     任意の値\n" or "\n[10]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\nハンマー")
					if WeaponSpecSettingsProtoNormalSkillHammerMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillHammer()
					elseif WeaponSpecSettingsProtoNormalSkillHammerMenu >= 1 and WeaponSpecSettingsProtoNormalSkillHammerMenu <= 10 then
						for i = 1, 10 do
							WeaponSpecSettingsProtoNormalSkillHammer_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillHammer_Selected[WeaponSpecSettingsProtoNormalSkillHammerMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillHammerMenu >= 1 and WeaponSpecSettingsProtoNormalSkillHammerMenu <= 9 then
							local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillHammerMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillHammerMenu == 10 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ハンマーのノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end								
						end
						WeaponSpecSettingsProto_WeaponNormalSkillHammer()
					elseif WeaponSpecSettingsProtoNormalSkillHammerMenu == 11 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end	
				-- [1-3-5-7] ランス
				WeaponSpecSettingsProtoNormalSkillLance_Selected = {false, false, false, false, false, false, false, false, false, false}										
				function WeaponSpecSettingsProto_WeaponNormalSkillLance()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"5801", "2403", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillLanceMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[3] and "\n[ON]     麻痺耐性(5)\n" or "\n[3]    麻痺耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[4] and "\n[ON]     睡眠耐性(5)\n" or "\n[4]    睡眠耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[5] and "\n[ON]     耳栓(5)\n" or "\n[5]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[6] and "\n[ON]     風圧耐性(5)\n" or "\n[6]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[7] and "\n[ON]     耐震(3)\n" or "\n[7]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[8] and "\n[ON]     回避距離UP(5)\n" or "\n[8]    回避距離UP(5\n)"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[9] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[9]    ジャスト回避強化(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLance_Selected[10] and "\n[ON]     任意の値\n" or "\n[10]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\nランス")
					if WeaponSpecSettingsProtoNormalSkillLanceMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillLance()
					elseif WeaponSpecSettingsProtoNormalSkillLanceMenu >= 1 and WeaponSpecSettingsProtoNormalSkillLanceMenu <= 10 then
						for i = 1, 10 do
							WeaponSpecSettingsProtoNormalSkillLance_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillLance_Selected[WeaponSpecSettingsProtoNormalSkillLanceMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillLanceMenu >= 1 and WeaponSpecSettingsProtoNormalSkillLanceMenu <= 9 then
						local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillLanceMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillLanceMenu == 10 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ランスのノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						WeaponSpecSettingsProto_WeaponNormalSkillLance()
					elseif WeaponSpecSettingsProtoNormalSkillLanceMenu == 11 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end	
				-- [1-3-5-8] 弓
				WeaponSpecSettingsProtoNormalSkillBow_Selected = {false, false, false, false, false, false, false, false, false, false}										
				function WeaponSpecSettingsProto_WeaponNormalSkillBow()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"2403", "2305", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillBowMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[1] and "\n[ON]     体幹強化(3)\n" or "\n[1]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[2] and "\n[ON]     集中(5)\n" or "\n[2]    集中(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[3] and "\n[ON]     麻痺耐性(5)\n" or "\n[3]    麻痺耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[4] and "\n[ON]     睡眠耐性(5)\n" or "\n[4]    睡眠耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[5] and "\n[ON]     耳栓(5)\n" or "\n[5]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[6] and "\n[ON]     風圧耐性(5)\n" or "\n[6]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[7] and "\n[ON]     耐震(3)\n" or "\n[7]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[8] and "\n[ON]     回避距離UP(5)\n" or "\n[8]    回避距離UP(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[9] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[9]    ジャスト回避強化(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillBow_Selected[10] and "\n[ON]     任意の値\n" or "\n[10]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\n弓")
					if WeaponSpecSettingsProtoNormalSkillBowMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillBow()
					elseif WeaponSpecSettingsProtoNormalSkillBowMenu >= 1 and WeaponSpecSettingsProtoNormalSkillBowMenu <= 10 then
						for i = 1, 10 do
							WeaponSpecSettingsProtoNormalSkillBow_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillBow_Selected[WeaponSpecSettingsProtoNormalSkillBowMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillBowMenu >= 1 and WeaponSpecSettingsProtoNormalSkillBowMenu <= 9 then
							local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillBowMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillBowMenu == 10 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "弓のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end								
						end
						WeaponSpecSettingsProto_WeaponNormalSkillBow()
					elseif WeaponSpecSettingsProtoNormalSkillBowMenu == 11 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end	
				-- [1-3-5-9] ライトボウガン
				WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected = {false, false, false, false, false, false, false, false, false, false, false}										
				function WeaponSpecSettingsProto_WeaponNormalSkillLightBowgun()
					gg.getResults(9999)
					gg.setVisible(false)
					local WeaponNormalSkillId = {"2403", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					WeaponSpecSettingsProtoNormalSkillLightBowgunMenu = gg.choice({
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[1] and "\n[ON]     体幹強化(3)\n" or "\n[1]    体幹強化(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[2] and "\n[ON]     反動軽減(3)\n" or "\n[2]    反動軽減(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[3] and "\n[ON]     装填速度(3)\n" or "\n[3]    装填速度(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[4] and "\n[ON]     麻痺耐性(5)\n" or "\n[4]    麻痺耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[5] and "\n[ON]     睡眠耐性(5)\n" or "\n[5]    睡眠耐性(5\n)"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[6] and "\n[ON]     耳栓(5)\n" or "\n[6]    耳栓(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[7] and "\n[ON]     風圧耐性(5)\n" or "\n[7]    風圧耐性(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[8] and "\n[ON]     耐震(3)\n" or "\n[8]    耐震(3)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[9] and "\n[ON]     回避距離UP(5)\n" or "\n[9]    回避距離UP(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[10] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[10]    ジャスト回避強化(5)\n"),
						(WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[11] and "\n[ON]     任意の値\n" or "\n[11]    任意の値\n"),						
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/武器の性能/ノーマルスキル (武器の指定)/\n\nライトボウガン")
					if WeaponSpecSettingsProtoNormalSkillLightBowgunMenu == nil then
						temporarilyhide()
						WeaponSpecSettingsProto_WeaponNormalSkillLightBowgun()
					elseif WeaponSpecSettingsProtoNormalSkillLightBowgunMenu >= 1 and WeaponSpecSettingsProtoNormalSkillLightBowgunMenu <= 11 then
						for i = 1, 11 do
							WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[i] = false
						end
						WeaponSpecSettingsProtoNormalSkillLightBowgun_Selected[WeaponSpecSettingsProtoNormalSkillLightBowgunMenu] = true				
						if WeaponSpecSettingsProtoNormalSkillLightBowgunMenu >= 1 and WeaponSpecSettingsProtoNormalSkillLightBowgunMenu <= 10 then
							local chosenValue = WeaponNormalSkillId[WeaponSpecSettingsProtoNormalSkillLightBowgunMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif WeaponSpecSettingsProtoNormalSkillLightBowgunMenu == 11 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "ライトボウガンのノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end								
						end
						WeaponSpecSettingsProto_WeaponNormalSkillLightBowgun()
					elseif WeaponSpecSettingsProtoNormalSkillLightBowgunMenu == 12 then
						WeaponSpecSettingsProto_WeaponNormalSkillsetting()
					end
				end					
			-- [1-3-6] スペシャルスキル
			WeaponSpecSettingsProtoWeaponSpecialSkillAllLevel_Selected = {false, false, false}
			function WeaponSpecSettingsProto_WeaponSpecialSkillAllLevel()
				gg.getResults(9999)
				gg.setVisible(false)
				WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu = gg.choice({
					(WeaponSpecSettingsProtoWeaponSpecialSkillAllLevel_Selected[1] and "\n-> [1]    Lv1\n" or "\n[1]    Lv1\n"),
					(WeaponSpecSettingsProtoWeaponSpecialSkillAllLevel_Selected[2] and "\n-> [2]    Lv2\n" or "\n[2]    Lv2\n"),
					(WeaponSpecSettingsProtoWeaponSpecialSkillAllLevel_Selected[3] and "\n-> [3]    Lv3\n" or "\n[3]    Lv3\n"),	
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/武器の性能/\n\nスペシャルスキル")
				if WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu == nil then
					temporarilyhide()
					WeaponSpecSettingsProto_WeaponSpecialSkillAllLevel()
				elseif WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu >= 1 and WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu <= 3 then
					for i = 1, 3 do
						WeaponSpecSettingsProtoWeaponSpecialSkillAllLevel_Selected[i] = false
					end
					WeaponSpecSettingsProtoWeaponSpecialSkillAllLevel_Selected[WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu] = true				
					local function processNumber(number, resultValue)	
						LoadNameAddress("WeaponSpecSettingsProto_Weapon")
						applyoffset(0x4, gg.TYPE_DWORD)	
						gg.refineNumber(tostring(number), gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
						applyoffset(0x28, gg.TYPE_DWORD)
						MoveThePointer()
						applyoffset(0x10, gg.TYPE_DWORD)
						gg.editAll(tostring(resultValue), gg.TYPE_DWORD)
					end					
					if WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu == 1 then
						processNumber(1, 5001)
						processNumber(2, 5101)
						processNumber(3, 7001)
						processNumber(4, 5201)
						processNumber(5, 5301)
						processNumber(7, 7101)
						processNumber(12, 5501)
						processNumber(14, 5401)
					elseif WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu == 2 then
						processNumber(1, 5002)
						processNumber(2, 5102)
						processNumber(3, 7002)
						processNumber(4, 5202)
						processNumber(5, 5302)
						processNumber(7, 7102)
						processNumber(12, 5502)
						processNumber(14, 5402)	
					elseif WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu == 3 then	
						processNumber(1, 5003)
						processNumber(2, 5103)
						processNumber(3, 7003)
						processNumber(4, 5203)
						processNumber(5, 5303)
						processNumber(7, 7103)
						processNumber(12, 5503)
						processNumber(14, 5403)
					end
					WeaponSpecSettingsProto_WeaponSpecialSkillAllLevel()					
				elseif WeaponSpecSettingsProtoWeaponSpecialSkillAllLevelMenu == 4 then
					WeaponSpecSettingsProto_WeaponNormalSkillsetting()
				end
			end			
		-- [1-4] 防具の性能			
		function ArmorSpec()
			IncludeCheckAndTrueFalseA("ArmorLevelSpecSettingsProto_Armor")
			IncludeCheckAndTrueFalseB("ArmorSpecSettingsProto_Armor")	
			ArmorSpec_Selected = {A, A, B, B}
			gg.setVisible(false)	
			ArmorSpecMenu = gg.choice({
				(ArmorSpec_Selected[1] and "\n-> [1]    防御力\n" or "\n[1]    防御力\n"),
				(ArmorSpec_Selected[2] and "\n-> [2]    属性防御力\n" or "\n[2]    属性防御力\n"),
				(ArmorSpec_Selected[3] and "\n-> [3]    属性種類\n" or "\n[3]    属性種類\n"),
				(ArmorSpec_Selected[4] and "\n-> [4]    ノーマルスキル (防具の指定)\n" or "\n[4]    ノーマルスキル (防具の指定)\n"),		
				"\n[←]    もどる"
			}, nil, "メインメニュー/装備/\n\n防具の性能")	
			if ArmorSpecMenu == nil then
				temporarilyhide()
				ArmorSpec()
			elseif ArmorSpecMenu >= 1 and ArmorSpecMenu <= 2 then
				LoadNameAddress("ArmorLevelSpecSettingsProto_Armor")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else			
					valueFromClass("ArmorLevelSpecSettingsProto")	
					applyoffset(0x14, gg.TYPE_DWORD)
					gg.refineNumber("1~10,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("ArmorLevelSpecSettingsProto_Armor")
				end
				if ArmorSpecMenu == 1 then
					applyoffset(0x8, gg.TYPE_DWORD)	
					ArmorLevelSpecSettingsProto_ArmorDefence()	
				elseif ArmorSpecMenu == 2 then
					applyoffset(0xC, gg.TYPE_DWORD)	
					ArmorLevelSpecSettingsProto_ArmorElementDefence()				
				end
			elseif ArmorSpecMenu >= 3 and ArmorSpecMenu <= 4 then
				LoadNameAddress("ArmorSpecSettingsProto_Armor")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else			
					valueFromClass("ArmorSpecSettingsProto")
					applyoffset(0x14, gg.TYPE_DWORD)
					gg.refineNumber("1~10,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("ArmorSpecSettingsProto_Armor")
				end
				if ArmorSpecMenu == 3 then
					applyoffset(0x8, gg.TYPE_DWORD)	
					ArmorSpecSettingsProto_ArmorElementType()	
				elseif ArmorSpecMenu == 4 then	
					ArmorSpecSettingsProto_ArmorNormalSkillsetting()
				end
				ArmorSpec()
			elseif ArmorSpecMenu == 5 then
				Equipment()
			end		
		end	
			-- [1-4-1] 防御力	
			ArmorLevelSpecSettingsProtoArmorDefence_Selected = {false, false, false, false}
			function ArmorLevelSpecSettingsProto_ArmorDefence()
				gg.getResults(9999)
				gg.setVisible(false)
				local ArmorDefence = {"200", "800", "200,000"}
				ArmorLevelSpecSettingsProtoArmorDefenceMenu = gg.choice({
					(ArmorLevelSpecSettingsProtoArmorDefence_Selected[1] and "\n[ON]    200\n" or "\n[1]    200\n"),
					(ArmorLevelSpecSettingsProtoArmorDefence_Selected[2] and "\n[ON]    800\n" or "\n[2]    800\n"),
					(ArmorLevelSpecSettingsProtoArmorDefence_Selected[3] and "\n[ON]    200,000\n" or "\n[3]    200,000\n"),
					(ArmorLevelSpecSettingsProtoArmorDefence_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/防具の性能/\n\n防御力")
				if ArmorLevelSpecSettingsProtoArmorDefenceMenu == nil then
					temporarilyhide()
					ArmorLevelSpecSettingsProto_ArmorDefence()
				elseif ArmorLevelSpecSettingsProtoArmorDefenceMenu >= 1 and ArmorLevelSpecSettingsProtoArmorDefenceMenu <= 4 then
					for i = 1, 4 do
						ArmorLevelSpecSettingsProtoArmorDefence_Selected[i] = false
					end
					ArmorLevelSpecSettingsProtoArmorDefence_Selected[ArmorLevelSpecSettingsProtoArmorDefenceMenu] = true				
					if ArmorLevelSpecSettingsProtoArmorDefenceMenu >= 1 and ArmorLevelSpecSettingsProtoArmorDefenceMenu <= 3 then
						local chosenValue = ArmorDefence[ArmorLevelSpecSettingsProtoArmorDefenceMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif ArmorLevelSpecSettingsProtoArmorDefenceMenu == 4 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全防具の防御力を変更 #Dword型\n\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					ArmorLevelSpecSettingsProto_ArmorDefence()
				elseif ArmorLevelSpecSettingsProtoArmorDefenceMenu == 5 then
					ArmorSpec()
				end
			end	
			-- [1-4-2] 属性防御力	
			ArmorLevelSpecSettingsProtoArmorElementDefence_Selected = {false, false, false, false}
			function ArmorLevelSpecSettingsProto_ArmorElementDefence()
				gg.getResults(9999)
				gg.setVisible(false)
				local ArmorElementDefence = {"100", "400", "100,000"}
				ArmorLevelSpecSettingsProtoArmorElementDefenceMenu = gg.choice({
					(ArmorLevelSpecSettingsProtoArmorElementDefence_Selected[1] and "\n[ON]    100" or "\n[1]    100"),
					(ArmorLevelSpecSettingsProtoArmorElementDefence_Selected[2] and "\n[ON]    400" or "\n[2]    400"),
					(ArmorLevelSpecSettingsProtoArmorElementDefence_Selected[3] and "\n[ON]    100,000\n" or "\n[3]    100,000\n"),
					(ArmorLevelSpecSettingsProtoArmorElementDefence_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/防具の性能/\n\n属性防御力")
				if ArmorLevelSpecSettingsProtoArmorElementDefenceMenu == nil then
					temporarilyhide()
					ArmorLevelSpecSettingsProto_ArmorElementDefence()
				elseif ArmorLevelSpecSettingsProtoArmorElementDefenceMenu >= 1 and ArmorLevelSpecSettingsProtoArmorElementDefenceMenu <= 4 then
					for i = 1, 4 do
						ArmorLevelSpecSettingsProtoArmorElementDefence_Selected[i] = false
					end
					ArmorLevelSpecSettingsProtoArmorElementDefence_Selected[ArmorLevelSpecSettingsProtoArmorElementDefenceMenu] = true				
					if ArmorLevelSpecSettingsProtoArmorElementDefenceMenu >= 1 and ArmorLevelSpecSettingsProtoArmorElementDefenceMenu <= 3 then
						local chosenValue = ArmorElementDefence[ArmorLevelSpecSettingsProtoArmorElementDefenceMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif ArmorLevelSpecSettingsProtoArmorElementDefenceMenu == 4 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全防具の属性防御力を変更 #Dword型\n\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					ArmorLevelSpecSettingsProto_ArmorElementDefence()
				elseif ArmorLevelSpecSettingsProtoArmorElementDefenceMenu == 5 then
					ArmorSpec()
				end
			end				
			-- [1-4-3] 属性種類	
			ArmorSpecSettingsProtoArmorElementType_Selected = {false, false, false, false, false, false, false, false, false, false, false}
			function ArmorSpecSettingsProto_ArmorElementType()
				gg.getResults(9999)
				gg.setVisible(false)
				ArmorSpecSettingsProtoArmorElementTypeMenu = gg.choice({
					(ArmorSpecSettingsProtoArmorElementType_Selected[1] and "\n[ON]    なし\n" or "\n[1]    なし\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[2] and "\n[ON]    火\n" or "\n[2]    火\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[3] and "\n[ON]    水\n" or "\n[3]    水\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[4] and "\n[ON]    雷\n" or "\n[4]    雷\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[5] and "\n[ON]    氷\n" or "\n[5]    氷\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[6] and "\n[ON]    龍\n" or "\n[6]    龍\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[7] and "\n[ON]    毒\n" or "\n[7]    毒\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[8] and "\n[ON]    麻痺\n" or "\n[8]    麻痺\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[9] and "\n[ON]    睡眠\n" or "\n[9]    睡眠\n"),
					(ArmorSpecSettingsProtoArmorElementType_Selected[10] and "\n[ON]    爆破\n" or "\n[10]    爆破\n"),	
					(ArmorSpecSettingsProtoArmorElementType_Selected[11] and "\n[ON]    任意の値\n" or "\n[11]    任意の値\n"),	
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/防具の性能/\n\n属性種類")
				if ArmorSpecSettingsProtoArmorElementTypeMenu == nil then
					temporarilyhide()
					ArmorSpecSettingsProto_ArmorElementType()
				elseif ArmorSpecSettingsProtoArmorElementTypeMenu >= 1 and ArmorSpecSettingsProtoArmorElementTypeMenu <= 11 then
					for i = 1, 11 do
						ArmorSpecSettingsProtoArmorElementType_Selected[i] = false
					end
					ArmorSpecSettingsProtoArmorElementType_Selected[ArmorSpecSettingsProtoArmorElementTypeMenu] = true				
					if ArmorSpecSettingsProtoArmorElementTypeMenu >= 1 and ArmorSpecSettingsProtoArmorElementTypeMenu <= 10 then
						local chosenValue = tostring(ArmorSpecSettingsProtoArmorElementTypeMenu)
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif ArmorSpecSettingsProtoArmorElementTypeMenu == 11 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "全防具の属性種類を変更 #Dword型\n\n1: なし,     2: 火,        3: 水,        4: 雷,        5: 氷,        6: 龍, \n   7: 毒,        8: 麻痺,       9: 睡眠,       10: 爆破\n[  1 ~ 10  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end
					end
					ArmorSpecSettingsProto_ArmorElementType()
				elseif ArmorSpecSettingsProtoArmorElementTypeMenu == 12 then
					ArmorSpec()
				end
			end	
			-- [1-4-4] ノーマルスキル (防具の指定)	
			ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected = {false, false, false, false, false, false, false, false, false, false, false}
			function ArmorSpecSettingsProto_ArmorNormalSkillsetting()
				local function movefine1()
    				applyoffset(0x20, gg.TYPE_DWORD)
    				MoveThePointer()
    				applyoffset(0x10, gg.TYPE_DWORD)
    				MoveThePointer()
    				applyoffset(0x20, gg.TYPE_DWORD)
    				MoveThePointer()
    				applyoffset(0x10, gg.TYPE_DWORD)
					local ranges = {{"5000~5503"},{"7000~7103"}} -- (多分不要,SPスキル以外になるようリファインする)
					gg.getResults(9999)
					for _, rangeList in ipairs(ranges) do
						for _, range in ipairs(rangeList) do
							gg.getResults(9999)
							gg.refineNumber(range, gg.TYPE_DWORD, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)
						end
					end
					gg.getResults(9999)
				end
				local function movefine2()
					applyoffset(0x20, gg.TYPE_DWORD)
    				MoveThePointer()
    				applyoffset(0x10, gg.TYPE_DWORD)
    				MoveThePointer()
    				applyoffset(0x28, gg.TYPE_DWORD)
    				MoveThePointer()
    				applyoffset(0x10, gg.TYPE_DWORD)
					local ranges = {{"5000~5503"},{"7000~7103"}} -- (多分不要,SPスキル以外になるようリファインする)
					gg.getResults(9999)
					for _, rangeList in ipairs(ranges) do
						for _, range in ipairs(rangeList) do
							gg.getResults(9999)
							gg.refineNumber(range, gg.TYPE_DWORD, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)
						end
					end
					gg.getResults(9999)
				end					
				gg.setVisible(false)
				ArmorSpecSettingsProtoArmorNormalSkillsettingMenu = gg.choice({
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] and "\n-> [1]    全身防具 (お気に入り)\n" or "\n[1]    全身防具 (お気に入り)\n"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[2] and "\n-> [2]    頭1\n" or "\n[2]    頭1\n"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[3] and "\n-> [3]    頭2\n" or "\n[3]    頭2"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[4] and "\n-> [4]    胴1\n" or "\n[4]    胴\n1"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[5] and "\n-> [5]    胴2\n" or "\n[5]    胴2\n"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[6] and "\n-> [6]    腕1\n" or "\n[6]    腕1\n"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[7] and "\n-> [7]    腕2\n" or "\n[7]    腕2\n"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[8] and "\n-> [8]    腰1\n" or "\n[8]    腰1\n"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[9] and "\n-> [9]    腰2\n" or "\n[9]    腰2\n"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[10] and "\n-> [10]    脚1\n" or "\n[10]    脚1\n"),
					(ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[11] and "\n-> [11]    脚2\n" or "\n[11]    脚2\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/装備/防具の性能/\n\nノーマルスキル (防具の指定)\n")
				if ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == nil then
					temporarilyhide()
					ArmorSpecSettingsProto_ArmorNormalSkillsetting()
				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu >= 1 and ArmorSpecSettingsProtoArmorNormalSkillsettingMenu <= 11 then	
					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[ArmorSpecSettingsProtoArmorNormalSkillsettingMenu] = true	
					LoadNameAddress("ArmorSpecSettingsProto_Armor")
					if ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 1 then
                        local promptResult = gg.prompt({[1] = "全身防具 (お気に入り) のノーマルスキルを変更\n\n内容: \n体幹強化5, 麻痺耐性5, 睡眠耐性5, 耳栓5, 風圧耐性5, 耐震3, 回避距離UP5, ジャスト回避強化5, + 各武器の推奨スキル\n\n< 以下の番号を1つを入力 >\n\n1: 大剣用 (ロックオン1, 集中5)\n2: 片手剣;双剣;ハンマー;ランス用 (ロックオン1, 毒耐性5)\n3: 弓用 (集中5, 毒耐性)\n4: ライトボウガン用 (反動軽減3, 装填速度3)"}, {[1] = ""})						
    					if promptResult == nil then
    						gg.alert("エラー\n\n有効な値を入力して下さい")
							ArmorSpecSettingsProto_ArmorNormalSkillsetting()
    					end						
    					local ArmorChoice = tonumber(promptResult[1])
    					if ArmorChoice == 1 then
    						applyoffset(0x4, gg.TYPE_DWORD)
    						gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							movefine1()
    						gg.editAll("2305",gg.TYPE_DWORD)
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")						
    						applyoffset(0x4, gg.TYPE_DWORD)
    						gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    						movefine2()
    						gg.editAll("5801",gg.TYPE_DWORD)							
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")							
							applyoffset(0x4, gg.TYPE_DWORD)
    						gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    						movefine1()
    						gg.editAll("2403",gg.TYPE_DWORD)	
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
    						gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    						movefine2()
							gg.editAll("605",gg.TYPE_DWORD)	
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
							gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    						movefine1()
    						gg.editAll("6305",gg.TYPE_DWORD)	
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
    						gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    						movefine2()
    						gg.editAll("3405",gg.TYPE_DWORD)	
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
    						gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
							movefine1()
    						gg.editAll("4805",gg.TYPE_DWORD)	
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
    						gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    						movefine2()
							gg.editAll("6803",gg.TYPE_DWORD)	
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
							gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    						movefine1()
    						gg.editAll("1805",gg.TYPE_DWORD)	
    						LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
    						gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    						movefine2()
    						gg.editAll("3605",gg.TYPE_DWORD)	
                   		elseif ArmorChoice == 2 then				
    						applyoffset(0x4, gg.TYPE_DWORD)
                  			gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                   			movefine1()
                   			gg.editAll("5801", gg.TYPE_DWORD)
                  			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                   			movefine2()
                   			gg.editAll("2403", gg.TYPE_DWORD)							
                   			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                  			movefine1()
                   			gg.editAll("505", gg.TYPE_DWORD)	
                   			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                   			movefine2()
                   			gg.editAll("605", gg.TYPE_DWORD)	
                   			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                   			movefine1()
                   			gg.editAll("6305", gg.TYPE_DWORD)	
                   			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                   			movefine2()
                   			gg.editAll("3405", gg.TYPE_DWORD)	
                   			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                  			movefine1()
                   			gg.editAll("4805", gg.TYPE_DWORD)	
                   			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                   			movefine2()
                   			gg.editAll("6803", gg.TYPE_DWORD)	
                   			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                   			movefine1()
                   			gg.editAll("1805", gg.TYPE_DWORD)	
                   			LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                   			gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                   			movefine2()
                   			gg.editAll("3605", gg.TYPE_DWORD)
                       	elseif ArmorChoice == 3 then				
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                       		gg.editAll("2305", gg.TYPE_DWORD)
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                       		gg.editAll("2403", gg.TYPE_DWORD)							
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                       		gg.editAll("505", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                       		gg.editAll("605", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                      		gg.editAll("6305", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                       		gg.editAll("3405", gg.TYPE_DWORD)	
                      		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                       		gg.editAll("4805", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                      		gg.editAll("6803", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                      		gg.editAll("1805", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                       		gg.editAll("3605", gg.TYPE_DWORD)
                       	elseif ArmorChoice == 4 then
                       		applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                       		gg.editAll("2503", gg.TYPE_DWORD)
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                       		gg.editAll("3503", gg.TYPE_DWORD)							
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                       		gg.editAll("2403", gg.TYPE_DWORD)	
                      		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                       		gg.editAll("605", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                       		gg.editAll("6305", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                       		gg.editAll("3405", gg.TYPE_DWORD)	
                      		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                       		gg.editAll("4805", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine2()
                       		gg.editAll("6803", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                       		movefine1()
                       		gg.editAll("1805", gg.TYPE_DWORD)	
                       		LoadNameAddress("ArmorSpecSettingsProto_Armor")					
    						applyoffset(0x4, gg.TYPE_DWORD)
                       		gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
                      		movefine2()
                       		gg.editAll("3605", gg.TYPE_DWORD)									
                       	else
                       		gg.alert("エラー\n\n有効な値を入力して下さい")
                       	end
                       	ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected = {true, false, false, false, false, false, false, false, false, false, false}
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()    				
					elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 2 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
						gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine1()
    					ArmorSpecSettingsProto_ArmorNormalSkillHead1()
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 3 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
  						gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine2()
    					ArmorSpecSettingsProto_ArmorNormalSkillHead2()								
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 4 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
						applyoffset(0x4, gg.TYPE_DWORD)
    					gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine1()
    					ArmorSpecSettingsProto_ArmorNormalSkillChest1()								
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 5 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
    					gg.refineNumber("2", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine2()
    					ArmorSpecSettingsProto_ArmorNormalSkillChest2()							
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 6 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
    					gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine1()
    					ArmorSpecSettingsProto_ArmorNormalSkillArm1()								
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 7 then	
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
    					gg.refineNumber("3", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine2()
    					ArmorSpecSettingsProto_ArmorNormalSkillArm2()								
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 8 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
    					gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine1()
    					ArmorSpecSettingsProto_ArmorNormalSkillTorso1()
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 9 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
    					gg.refineNumber("4", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine2()
    					ArmorSpecSettingsProto_ArmorNormalSkillTorso2()		
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 10 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
						gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine1()
    					ArmorSpecSettingsProto_ArmorNormalSkillLegs1()								
    				elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 11 then
    					ArmorSpecSettingsProtoArmorNormalSkillsetting_Selected[1] = false
    					applyoffset(0x4, gg.TYPE_DWORD)
    					gg.refineNumber("5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
    					movefine2()
    					ArmorSpecSettingsProto_ArmorNormalSkillLegs2()			
    				end					
			    elseif ArmorSpecSettingsProtoArmorNormalSkillsettingMenu == 12 then
					ArmorSpec()
				end				
			end	
				-- [1-4-4-1] 頭1		
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillHead1()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5\n)"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n頭1")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillHead1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "頭1のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillHead1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end		
				-- [1-4-4-2] 頭2		
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillHead2()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n頭2")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillHead2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "頭2のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillHead2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end		
				-- [1-4-4-3] 胴1		
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillChest1()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n胴1")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillChest1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "胴1のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillChest1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end			
				-- [1-4-4-4] 胴2		
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillChest2()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n胴2")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillChest2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "胴2のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillChest2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end		
				-- [1-4-4-5] 腕1	
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillArm1()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n腕1")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillArm1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "腕1のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillArm1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end				
				-- [1-4-4-6] 腕2	
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillArm2()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n腕2")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillArm2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "腕2のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillArm2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end			
				-- [1-4-4-7] 腰1	
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillTorso1()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n腰1")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillTorso1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "腰1のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillTorso1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end			
				-- [1-4-4-8] 腰2	
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillTorso2()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n腰2")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillTorso2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "腰2のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillTorso2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end			
				-- [1-4-4-9] 脚1	
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillLegs1()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n脚1")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillLegs1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "脚1のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillLegs1()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end			
				-- [1-4-4-10] 脚2	
				ArmorSpecSettingsProtoNormalSkillAll_Selected = {false, false, false, false, false, false, false, false, false, false, false, false, false}
				function ArmorSpecSettingsProto_ArmorNormalSkillLegs2()
					gg.getResults(9999)
					gg.setVisible(false)
					local ArmorNormalSkillId = {"5801", "2403", "2305", "2503", "3503", "605", "6305", "3405", "4805", "6803", "1805", "3605"}
					ArmorSpecSettingsProtoNormalSkillAllMenu = gg.choice({
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[1] and "\n[ON]     ロックオン(1)\n" or "\n[1]    ロックオン(1)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[2] and "\n[ON]     体幹強化(3)\n" or "\n[2]    体幹強化(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[3] and "\n[ON]     集中(5)\n" or "\n[3]    集中(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[4] and "\n[ON]     反動軽減(3)\n" or "\n[4]    反動軽減(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[5] and "\n[ON]     装填速度(3)\n" or "\n[5]    装填速度(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[6] and "\n[ON]     麻痺耐性(5)\n" or "\n[6]    麻痺耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[7] and "\n[ON]     睡眠耐性(5)\n" or "\n[7]    睡眠耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[8] and "\n[ON]     耳栓(5)\n" or "\n[8]    耳栓(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[9] and "\n[ON]     風圧耐性(5)\n" or "\n[9]    風圧耐性(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[10] and "\n[ON]     耐震(3)\n" or "\n[10]    耐震(3)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[11] and "\n[ON]     回避距離UP(5)\n" or "\n[11]    回避距離UP(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[12] and "\n[ON]     ジャスト回避強化(5)\n" or "\n[12]    ジャスト回避強化(5)\n"),
						(ArmorSpecSettingsProtoNormalSkillAll_Selected[13] and "\n[ON]     任意の値\n" or "\n[13]    任意の値\n"),
						"\n[←]    もどる"
					}, nil, "メインメニュー/装備/防具の性能/ノーマルスキル (防具の指定)/\n\n脚2")
					if ArmorSpecSettingsProtoNormalSkillAllMenu == nil then
						temporarilyhide()
						ArmorSpecSettingsProto_ArmorNormalSkillLegs2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 13 then
						for i = 1, 13 do
							ArmorSpecSettingsProtoNormalSkillAll_Selected[i] = false
						end
						ArmorSpecSettingsProtoNormalSkillAll_Selected[ArmorSpecSettingsProtoNormalSkillAllMenu] = true				
						if ArmorSpecSettingsProtoNormalSkillAllMenu >= 1 and ArmorSpecSettingsProtoNormalSkillAllMenu <= 12 then
							local chosenValue = ArmorNormalSkillId[ArmorSpecSettingsProtoNormalSkillAllMenu]
							gg.editAll(chosenValue, gg.TYPE_DWORD)
						elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 13 then
							while true do
								gg.setVisible(false)
								local val = gg.prompt({[1] = "脚2のノーマルスキルを一括変更\n以下を参照しノーマルスキルIDを1つ入力して下さい \n#Dword型\n\nノーマルスキルID:\n*語尾はスキルレベルを表す\n[  105: 体力増強(5),                   205: 攻撃(5), \n   305: 防御(5),                           405: SPゲージ加速(5), \n   505: 毒耐性(5),                       605: 麻痺耐性(5), \n   705: 火耐性(5),                       805: 水耐性(5), \n   905: 氷耐性(5),                     1005: 雷耐性(5), \n 1105: 毒属性強化(5),             1205: 麻痺属性強化, \n 1305: 炎属性強化(5),            1405: 水属性強化(5), \n 1505: 氷属性強化(5),            1605: 雷属性強化(5), \n 1705: 見切り(5),                    1805: 回避距離UP(5), \n 1905: 弱点特攻(5),                2005: 破壊王(5), \n 2205: 精霊の加護(5),            2305: 集中(5),  \n 2403: 体幹強化(3),                 2503: 反動軽減(3), \n 2605: 根性(5),                         2805: 攻めの守勢(5), \n 3005: 連撃(5),                        3105: ガード性能(5), \n 3205: 背水防御(5),                3305: 火事場力(5), \n 3405: 耳栓(5),                        3503: 装填速度(3), \n 3605: ジャスト回避強化(5), \n 3705: 尻上がり(5),                3803: 貫通弾強化(3), \n 3903: 徹甲榴弾強化(3),        4003: 斬裂弾強化(3), \n 4103: 散弾強化(3):4103,      4205: 闇討ち(5), \n 4305: フルチャージ(5),        4505: 超会心(5),   \n 4605: 不屈(5),                        4705: SPスキル威力アップ(5), \n 4805: 風圧耐性(5):4805,     4905: KO術(5), \n 5605: 逆恨み(5),                    5705: ジャスト回避強化[仮](5), \n 5801: ロックオン(1),            5905: 龍属性攻撃強化(5), \n 6001: 団結力【秋のかぼちゃ狩り, \n 6105: ジャスト巧攻(5),        6205: 睡眠攻撃強化(5), \n 6305: 睡眠耐性(5), \n 6405: SPゲージ加速【ジャスト回避】(5), \n 6505: SPゲージ加速【ガード】(5), \n 6605: 軽巧(5),                         6705: 進撃(5), \n 6803: 耐震(3), \n 7201: ハッピーニューイヤー【2024】(1), \n 範囲外の値: なし                                                                          ]"}, {[1] = ""}, {"number"})
								if val and val[1] ~= nil then
									gg.editAll(val[1], gg.TYPE_DWORD)									
									break
								else
									temporarilyhide()
								end
							end
						end
						ArmorSpecSettingsProto_ArmorNormalSkillLegs2()
					elseif ArmorSpecSettingsProtoNormalSkillAllMenu == 14 then
						ArmorSpecSettingsProto_ArmorNormalSkillsetting()
					end
				end			
	-- [2] ハンター
	function Hunter()
		gg.setVisible(false)	
		HunterMenu = gg.choice({
			"\n[1]    動作\n",	
			"\n[2]    体力\n",
			"\n[3]    ダメージ\n",
			"\n[4]    特定のアクション\n",				
			"\n[5]    戦闘時\n",		
			"\n[6]    耐性\n",		
			"\n[7]    攻撃変数の書き換え\n",					
			"\n[←]    もどる"
		}, nil, "メインメニュー/\n\nハンター")
		if HunterMenu == nil then
			temporarilyhide()	
			Hunter()
		elseif HunterMenu == 1 then		
			HunterMotion()
		elseif HunterMenu == 2 then		
			HunterHealth()
		elseif HunterMenu == 3 then	
			HunterDamage()
		elseif HunterMenu == 4 then	
			HunterAction()
		elseif HunterMenu == 5 then	
			HunterBattle()		
		elseif HunterMenu == 6 then		
			HunterResistance()
		elseif HunterMenu == 7 then	
			HunterAttackParam()			
		elseif HunterMenu == 8 then		
			Main()
		end
	end
		-- [2-1] 動作
		function HunterMotion()
			IncludeCheckAndTrueFalseA("MotionController_HunterSpeedSpeed")
			IncludeCheckAndTrueFalseB("_HunterWeapon")
			HunterMotion_Selected = {A, B}
			gg.setVisible(false)
			HunterMotionMenu = gg.choice({
				(HunterMotion_Selected[1] and "\n-> [1]    速度\n" or "\n[1]    速度\n"),
				(HunterMotion_Selected[2] and "\n-> [2]    攻撃の挙動 (武器)*\n" or "\n[2]    攻撃の挙動 (武器)*\n"),
				"\n[~]    アドレスの再取得\n",
				"\n[←]    もどる"
			}, nil, "メインメニュー/ハンター\n\n動作")
			if HunterMotionMenu == nil then
				temporarilyhide()
				HunterMotion()
			elseif HunterMotionMenu == 1 then	
				LoadNameAddress("MotionController_HunterSpeedSpeed")
				local count = gg.getResultsCount()
				if count >= 1 then
					MotionController_HunterSpeed()
				else
					LoadNameAddress("MotionController_HunterSpeedSpeed")
					local count = gg.getResultsCount()
					if count >= 1 then
					else
						valueFromClass("MotionController")
						applyoffset(0x28, gg.TYPE_FLOAT)
						gg.refineNumber("0~100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
						AddNameAddress("MotionController_MonsterSpeed")
					end
					gg.refineNumber("0.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
					local count = gg.getResultsCount()
					if count == 1 then
						AddNameAddress("MotionController_HunterSpeedSpeed")
					else
						LoadNameAddress("MotionController_MonsterSpeed")
						gg.refineNumber("0.5~1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
						local choice = gg.alert("メインメニュー/ハンター/動作\n\n速度\n\nアドレスが特定出来ない為,手動操作が必要\n\n以下の手順に従って下さい\n[STEP1] モンスター動作速度の設定\n[STEP2] 戦闘画面への出入り\n\n(続行する場合は画面外をタップ)", "[←]    もどる")
						if choice == 1 then
							HunterMotion()
						end
						while true do
							gg.setVisible(false)
							local MonsterSpeedValues = {"1.0001","0","5"}	
							MonsterMotionSpeedMenuHunter = gg.choice({
								"\n[1]    デフォルト",
								"\n[2]    凍結",
								"\n[3]    5倍"
							},nil,"メインメニュー/ハンター/動作/\n\n速度\n\n->[STEP1] モンスター,オトモ動作速度の設定")        				
							if MonsterMotionSpeedMenuHunter == nil then
							else
								if MonsterMotionSpeedMenuHunter >= 1 and MonsterMotionSpeedMenuHunter <= 3 then
									local chosenValue = MonsterSpeedValues[MonsterMotionSpeedMenuHunter]
									gg.getResults(9999)
									gg.editAll(chosenValue, gg.TYPE_FLOAT)
									break
								end
							end
						end
						gg.alert("メインメニュー/ハンター/動作/\n\n速度\n\n->[STEP2] 戦闘画面への出入り","")
						while true do
							temporarilyhide()
							gg.setVisible(false)
							local choice = gg.alert("戦闘画面への出入りを済ませましたか？\n\n(準備し直す場合は画面外をタップ)","はい")
							if choice == 1 then
								break
							end
						end
						gg.refineNumber("0.5~~1", gg.TYPE_FLOAT, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)	
						AddNameAddress("MotionController_HunterSpeedSpeed")
					end
					MotionController_HunterSpeed()
				end
			elseif HunterMotionMenu == 2 then
    			LoadNameAddress("_Abaseaccuracy_HunterWeapon")
    			local count = gg.getResultsCount()
    			if count == 0 then
    			    valueFromClass("HunterWeapon")
    			else
    			    MoveThePointer()
    			end
				applyoffset(0x14, gg.TYPE_DWORD)
				gg.refineNumber("119~121", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
				applyoffset(0x4, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)
						local val = gg.prompt({[1] = "現在装備している武器の番号を入力して下さい\n#Dword型\n\n   0: 大剣,       1: 片手剣,       2: 双剣,       3: 太刀, \n   4: ハンマー,       5: 狩猟笛,       6: ランス,       \n   7: ガンランス,       8: スラッシュアックス, \n   9: チャージアックス,       10: 昆虫棍,       11: 弓, \n 12: ヘビーボウガン,       13: ライトボウガン\n[  0 ~  13  ]"}, {[1] = ""}, {"number"})
						if val and val[1] ~= nil then
							gg.refineNumber(val[1], gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)									
							break
						else
							temporarilyhide()
						end
					end						
				local count = gg.getResultsCount()
				if count == 0 then
				    gg.alert("エラー\n\n武器の番号が間違っています")
				    HunterMotion()
				end
    			HunterWeapon_WeaponType()
			elseif HunterMotionMenu == 3 then
				refresh_HunterMotion()
			elseif HunterMotionMenu == 4 then
				Hunter()
			end
		end		
			-- [2-1-1] 速度
			MotionControllerHunterSpeed_Selected = {false, false, false, false}
			function MotionController_HunterSpeed()
				local results = gg.getResults(9999)
				local HunterSpeedValue = {"1", "5", "50"}
				gg.setVisible(false)
				MotionControllerHunterSpeedMenu = gg.choice({
					(MotionControllerHunterSpeed_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(MotionControllerHunterSpeed_Selected[2] and "\n[ON]    5 倍\n" or "\n[2]    5 倍\n"),
					(MotionControllerHunterSpeed_Selected[3] and "\n[ON]    50 倍\n" or "\n[3]    50 倍\n"),
					(MotionControllerHunterSpeed_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/動作/\n\n速度\n")
				if MotionControllerHunterSpeedMenu == nil then
					temporarilyhide()
					MotionController_HunterSpeed()
				elseif MotionControllerHunterSpeedMenu >= 1 and MotionControllerHunterSpeedMenu <= 4 then
				    for i = 1, 4 do
						MotionControllerHunterSpeed_Selected[i] = false
					end
					MotionControllerHunterSpeed_Selected[MotionControllerHunterSpeedMenu] = true				
					if MotionControllerHunterSpeedMenu >= 1 and MotionControllerHunterSpeedMenu <= 3 then
						for _, result in ipairs(results) do
							gg.addListItems({{
							address = result.address,
							flags = gg.TYPE_FLOAT,
							value = HunterSpeedValue[MotionControllerHunterSpeedMenu],
							freeze = true,
							name = "_HunterSpeed"
							}})
						end
					elseif MotionControllerHunterSpeedMenu == 4 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの動作速度を変更 #Float型\n\n倍率, デフォ: 1\n[  0 ~ 1000  ]"}, {[1] = ""})
							if val and val[1] ~= nil then
								for _, result in ipairs(results) do
									gg.addListItems({{
									address = result.address,
									flags = gg.TYPE_FLOAT,
									value = tonumber(val[1]),
									freeze = true,
									name = "_HunterSpeed"
									}})
								end
								break
							else
								temporarilyhide()
							end
						end
					end
					MotionController_HunterSpeed()
				elseif MotionControllerHunterSpeedMenu == 5 then
					Hunter()
				end
			end		
			-- [2-1-2] 攻撃の挙動 (武器)*
			HunterWeaponWeaponType_Selected = {false}
			function HunterWeapon_WeaponType()
				gg.getResults(9999)
				gg.setVisible(false)
				HunterWeaponWeaponTypeMenu = gg.choice({
					(HunterWeaponWeaponType_Selected[1] and "\n[ON]    任意の値\n" or "\n[1]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/動作\n\n攻撃の挙動 (武器)*")
				if HunterWeaponWeaponTypeMenu == nil then
					temporarilyhide()
					HunterWeapon_WeaponType()
				elseif HunterWeaponWeaponTypeMenu == 1 then
				    HunterWeaponWeaponType_Selected = {true}
					while true do
						gg.setVisible(false)
						local val = gg.prompt({[1] = "ハンターの攻撃の挙動(武器)を変更 #Dword型\n\n   0: 大剣,       1: 片手剣,       2: 双剣,       3: 太刀, \n   4: ハンマー,       5: 狩猟笛,       6: ランス,       \n   7: ガンランス,       8: スラッシュアックス, \n   9: チャージアックス,       10: 昆虫棍,       11: 弓, \n 12: ヘビーボウガン,       13: ライトボウガン\n[  0 ~  13  ]"}, {[1] = ""}, {"number"})
						if val and val[1] ~= nil then
							gg.editAll(val[1], gg.TYPE_DWORD)									
							break
						else
							temporarilyhide()
						end
					end						
					HunterWeapon_WeaponType()
				elseif HunterWeaponWeaponTypeMenu == 2 then
					HunterMotion()
				end
			end	
			-- [2-1-3] アドレスの再取得
			function refresh_HunterMotion()		
				local name1 = {"_Qapplyfix_MotionController"," _Abaseaccuracy_MotionController", "MotionController_HunterSpeedSpeed", "MotionController_MonsterSpeed"}
				local name2 = {"_Qapplyfix_HunterWeapon", "_Abaseaccuracy_HunterWeapon"}
				local Prompt = gg.prompt({
					"\n[1]    速度",
					"\n[2]    攻撃の挙動 (武器)*"
				}, {false, false}, {"checkbox", "checkbox"})
				if Prompt == nil then
					temporarilyhide()
					HunterMotion()
				end
				if Prompt[1] == true then
					DeleteNameAddress(name1[1])
					DeleteNameAddress(name1[2])
					DeleteNameAddress(name1[3])
					DeleteNameAddress(name1[4])
					valueFromClass("MotionController")	
					MotionControllerHunter_Selected = {false, false, false, false}
				end
				if Prompt[2] == true then
					DeleteNameAddress(name2[1])
					DeleteNameAddress(name2[2])
					valueFromClass("HunterWeapon")	
					HunterWeaponWeaponType_Selected = {false}
				end
				HunterMotion()
			end		
		-- [2-2] 体力
		HunterHealth_currentA = 1
		HunterHealth_SelectedA = {"\n[1]    無敵\n", "\n[ON]    無敵\n", "[OFF]    無敵\n"}  		
		function HunterHealth()
			IncludeCheckAndTrueFalseA("FieldManager_HunterHealth")
			FieldManager_Selected = {A, A, A}
			gg.setVisible(false)
			FieldManagerMenu = gg.choice({
				HunterHealth_SelectedA[HunterHealth_currentA],
				(FieldManager_Selected[1] and "\n-> [2]    最大値\n" or "\n[2]    最大値\n"),
				(FieldManager_Selected[2] and "\n-> [3]    回復速度\n" or "\n[3]    回復速度\n"),
				(FieldManager_Selected[3] and "\n-> [4]    回復薬による回復量\n" or "\n[4]    回復薬による回復量\n"),
				"\n[←]    もどる"
			}, nil, "メインメニュー/ハンター\n\n体力")
			if FieldManagerMenu == nil then
				temporarilyhide()
				HunterHealth()
			elseif FieldManagerMenu == 1 then
                LoadNameAddress("HunterDefence")
                local count = gg.getResultsCount()
        		if count >= 1 then
        		else			
					gg.setRanges(gg.REGION_CODE_APP)
					gg.clearResults()
					gg.searchNumber("h 00 10 2E 1E C0 03 5F D6 FF C3 00 D1 F5 53 01 A9 F3 7B 02 A9 F4 71 02 90 E0 0F 00 BD 95 48 02 F0 B3 48 02 90 88 4A 7B 39 B5 92 44 F9 73 6A 42 F9", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("HunterDefence")
                end
                gg.getResults(9999)
    			if HunterHealth_currentA == 1 or HunterHealth_currentA == 3 then
                    gg.editAll("h E0 03 27 1E C0 03 5F D6 FF C3 00 D1 F5 53 01 A9 F3 7B 02 A9 F4 71 02 90 E0 0F 00 BD 95 48 02 F0 B3 48 02 90 88 4A 7B 39 B5 92 44 F9 73 6A 42 F9", gg.TYPE_BYTE)
                    HunterHealth_currentA = 2
                elseif HunterHealth_currentA == 2 then
                    gg.editAll("h 00 10 2E 1E C0 03 5F D6 FF C3 00 D1 F5 53 01 A9 F3 7B 02 A9 F4 71 02 90 E0 0F 00 BD 95 48 02 F0 B3 48 02 90 88 4A 7B 39 B5 92 44 F9 73 6A 42 F9", gg.TYPE_BYTE)
                    HunterHealth_currentA = 3
                end			
				HunterHealth()
			elseif FieldManagerMenu >= 2 and FieldManagerMenu <= 4 then	
				LoadNameAddress("FieldManager_HunterHealth")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else
					valueFromClass("FieldManager")					
					applyoffset(0x250, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x20, gg.TYPE_DOUBLE)
					gg.refineNumber("0.00002~0.00003", gg.TYPE_DOUBLE, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("FieldManager_HunterHealth")
				end
				if FieldManagerMenu == 2 then
					applyoffset(-0x8, gg.TYPE_DWORD)
					FieldManager_MaximumHealth()
				elseif FieldManagerMenu == 3 then
					FieldManager_AmountHealthRecoverPerMilliseconds()
				elseif FieldManagerMenu == 4 then
					applyoffset(0x10, gg.TYPE_DWORD)
					FieldManager_PotionRecoverPercentage()
				end
			elseif FieldManagerMenu == 5 then
				Hunter()
			end
		end		
			-- [2-2-2] 最大値
			FieldManagerMaximumHealth_Selected = {false, false, false}
			function FieldManager_MaximumHealth()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterMaximumHealth = {"150", "1,500,000"}
				FieldManagerMaximumHealthMenu = gg.choice({
					(FieldManagerMaximumHealth_Selected[1] and "\n-> [1]    150\n" or "\n[1]    150\n"),
					(FieldManagerMaximumHealth_Selected[2] and "\n-> [1]    1,500,000\n" or "\n[2]    1,500,000\n"),
					(FieldManagerMaximumHealth_Selected[3] and "\n-> [3]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/体力\n\n最大値")
				if FieldManagerMaximumHealthMenu == nil then
					temporarilyhide()
					FieldManager_MaximumHealth()
				elseif FieldManagerMaximumHealthMenu >= 1 and FieldManagerMaximumHealthMenu <= 3 then
					for i = 1, 3 do
						FieldManagerMaximumHealth_Selected[i] = false
					end
					FieldManagerMaximumHealth_Selected[FieldManagerMaximumHealthMenu] = true				
					if FieldManagerMaximumHealthMenu >= 1 and FieldManagerMaximumHealthMenu <= 2 then
						local chosenValue = HunterMaximumHealth[FieldManagerMaximumHealthMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif FieldManagerMaximumHealthMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの体力の最大値を変更 #Dword型\n\n[  0(≠) ~  1,500,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					FieldManager_MaximumHealth()
				elseif FieldManagerMaximumHealthMenu == 4 then
					HunterHealth()
				end
			end
			-- [2-2-3] 回復速度
			FieldManagerAmountHealthRecoverPerMilliseconds_Selected = {false, false, false}
			function FieldManager_AmountHealthRecoverPerMilliseconds()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterAmountHealthRecoverPerMilliseconds = {"0.00002777778", "10,000,000"}
				FieldManagerAmountHealthRecoverPerMillisecondsMenu = gg.choice({
					(FieldManagerAmountHealthRecoverPerMilliseconds_Selected[1] and "\n-> [1]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(FieldManagerAmountHealthRecoverPerMilliseconds_Selected[2] and "\n-> [2]    超回復\n" or "\n[2]    超回復\n"),
					(FieldManagerAmountHealthRecoverPerMilliseconds_Selected[3] and "\n-> [3]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/体力\n\n回復速度")
				if FieldManagerAmountHealthRecoverPerMillisecondsMenu == nil then
					temporarilyhide()
					FieldManager_AmountHealthRecoverPerMilliseconds()
				elseif FieldManagerAmountHealthRecoverPerMillisecondsMenu >= 1 and FieldManagerAmountHealthRecoverPerMillisecondsMenu <= 3 then
					for i = 1, 3 do
						FieldManagerAmountHealthRecoverPerMilliseconds_Selected[i] = false
					end
					FieldManagerAmountHealthRecoverPerMilliseconds_Selected[FieldManagerAmountHealthRecoverPerMillisecondsMenu] = true				
					if FieldManagerAmountHealthRecoverPerMillisecondsMenu >= 1 and FieldManagerAmountHealthRecoverPerMillisecondsMenu <= 2 then
						local chosenValue = HunterAmountHealthRecoverPerMilliseconds[FieldManagerAmountHealthRecoverPerMillisecondsMenu]
						gg.editAll(chosenValue, gg.TYPE_DOUBLE)
					elseif FieldManagerAmountHealthRecoverPerMillisecondsMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの体力の回復速度を変更 #Double型\n\n1ミリ秒あたりの回復量, デフォ: 0.00002777778\n[  0(≠) ~  10,000,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DOUBLE)									
								break
							else
								temporarilyhide()
							end
						end					
					end
					FieldManager_AmountHealthRecoverPerMilliseconds()
				elseif FieldManagerAmountHealthRecoverPerMillisecondsMenu == 4 then
					HunterHealth()
				end
			end				
			-- [2-2-4] 回復薬による回復量
			FieldManagerPotionRecoverPercentage_Selected = {false, false, false}
			function FieldManager_PotionRecoverPercentage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterPotionRecoverPercentage = {"50", "100"}
				FieldManagerPotionRecoverPercentageMenu = gg.choice({
					(FieldManagerPotionRecoverPercentage_Selected[1] and "\n-> [1]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(FieldManagerPotionRecoverPercentage_Selected[2] and "\n-> [2]    全回復\n" or "\n[2]    全回復\n"),
					(FieldManagerPotionRecoverPercentage_Selected[3] and "\n-> [3]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/体力\n\n回復薬による回復量")
				if FieldManagerPotionRecoverPercentageMenu == nil then
					temporarilyhide()
					FieldManager_PotionRecoverPercentage()
				elseif FieldManagerPotionRecoverPercentageMenu >= 1 and FieldManagerPotionRecoverPercentageMenu <= 3 then
					for i = 1, 3 do
						FieldManagerPotionRecoverPercentage_Selected[i] = false
					end
					FieldManagerPotionRecoverPercentage_Selected[FieldManagerPotionRecoverPercentageMenu] = true				
					if FieldManagerPotionRecoverPercentageMenu >= 1 and FieldManagerPotionRecoverPercentageMenu <= 2 then
						local chosenValue = HunterPotionRecoverPercentage[FieldManagerPotionRecoverPercentageMenu]
						gg.editAll(chosenValue, gg.TYPE_DOUBLE)
					elseif FieldManagerPotionRecoverPercentageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの回復薬による体力の回復量を変更 #Dword型\n\n割合%, デフォ: 50\n[  0 ~  100  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DOUBLE)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					FieldManager_PotionRecoverPercentage()
				elseif FieldManagerPotionRecoverPercentageMenu == 4 then
					HunterHealth()
				end
			end		
		-- [2-3] ダメージ
		HunterDamage_currentA = 1
		HunterDamage_SelectedA = {"\n[1]    クイック変更\n", "\n[ON]    デフォルト\n", "\n[ON]    15 倍\n", "[ON]    ワンパン\n"}  
		function HunterDamage()
			IncludeCheckAndTrueFalseA("PhysicalDamageData_Damage")
			IncludeCheckAndTrueFalseB("BattleConfig_Damage")
			HunterDamage_Selected = {A, A, A, A, A, A, A, A, B, B, B, B, B}
			gg.setVisible(false)
			HunterDamageMenu = gg.choice({
				HunterDamage_SelectedA[HunterDamage_currentA],
				(HunterDamage_Selected[1] and "\n-> [2]    斬撃\n" or "\n[2]    斬撃\n"),
				(HunterDamage_Selected[2] and "\n-> [3]    打撃\n" or "\n[3]    打撃\n"),
				(HunterDamage_Selected[3] and "\n-> [4]    射撃\n" or "\n[4]    射撃\n"),
				(HunterDamage_Selected[4] and "\n-> [5]    火属性\n" or "\n[5]    火属性\n"),
				(HunterDamage_Selected[5] and "\n-> [6]    水属性\n" or "\n[6]    水属性\n"),
				(HunterDamage_Selected[6] and "\n-> [7]    雷属性\n" or "\n[7]    雷属性\n"),				
				(HunterDamage_Selected[7] and "\n-> [8]    氷属性\n" or "\n[8]    氷属性\n"),
				(HunterDamage_Selected[8] and "\n-> [9]    龍属性\n" or "\n[9]    龍属性\n"),					
				(HunterDamage_Selected[9] and "\n-> [10]    プラス会心\n" or "\n[10]    プラス会心\n"),
				(HunterDamage_Selected[10] and "\n-> [11]    マイナス会心\n" or "\n[11]    マイナス会心\n"),				
				(HunterDamage_Selected[11] and "\n-> [12]    無会心\n" or "\n[12]    無会心\n"),								
				(HunterDamage_Selected[12] and "\n-> [13]    爆破\n" or "\n[13]    爆破\n"),
				(HunterDamage_Selected[13] and "\n-> [14]    弱点\n" or "\n[14]    弱点\n"),
				"\n\n[←]    もどる"
			}, nil, "メインメニュー/ハンター\n\nダメージ")
			if HunterDamageMenu == nil then
				temporarilyhide()
				HunterDamage()
			elseif HunterDamageMenu == 1 then
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if HunterDamage_currentA == 1 or HunterDamage_currentA == 4 then
					gg.setValues({{address = start + 0x193DB08, flags = 4, value = "~A8 FMOV S0, #0x3F800000;"}})
					HunterDamage_currentA = 2
				elseif HunterDamage_currentA == 2 then
					gg.setValues({{address = start + 0x193DB08, flags = 4, value = "~A8 FMOV S0, #0x41C00000;"}})
					HunterDamage_currentA = 3
                elseif HunterDamage_currentA == 3 then
					gg.setValues({{address = start + 0x193DB08, flags = 4, value = "~A8 FCVTAS W0, S8;"}})
					HunterDamage_currentA = 4
                end
				HunterDamage()
			elseif HunterDamageMenu >= 2 and HunterDamageMenu <= 9 then
				LoadNameAddress("PhysicalDamageData_Damage")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else						
					valueFromClass("PhysicalDamageData")	
					applyoffset(0x10, gg.TYPE_DWORD)
					gg.refineNumber("10~1,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("PhysicalDamageData_Damage")
				end
				if HunterDamageMenu >= 2 and HunterDamageMenu <= 4 then					
					if HunterDamageMenu == 2 then				
						PhysicalDamageData_CutDamage()
					elseif HunterDamageMenu == 3 then
						applyoffset(0x4, gg.TYPE_DWORD)
						PhysicalDamageData_BluntDamage()
					elseif HunterDamageMenu == 4 then
						applyoffset(0x8, gg.TYPE_DWORD)
						PhysicalDamageData_AmmoDamage()
					end
				elseif HunterDamageMenu >= 5 and HunterDamageMenu <= 9 then
					applyoffset(-0x4, gg.TYPE_QWORD)
				    MoveThePointer()
					if HunterDamageMenu == 5 then
						applyoffset(0x10, gg.TYPE_DWORD)
    					PhysicalDamageData_FireDamage()
					elseif HunterDamageMenu == 6 then
    					applyoffset(0x14, gg.TYPE_DWORD)				
    					PhysicalDamageData_WaterDamage()					
					elseif HunterDamageMenu == 7 then	
    					applyoffset(0x18, gg.TYPE_DWORD)
    					PhysicalDamageData_ThunderDamage()						
					elseif HunterDamageMenu == 8 then		
    					applyoffset(0x1C, gg.TYPE_DWORD)
    					PhysicalDamageData_IceDamage()						
					elseif HunterDamageMenu == 9 then	
    					applyoffset(0x20, gg.TYPE_DWORD)				
    					PhysicalDamageData_DragonDamage()						
					end	
				end		
			elseif HunterDamageMenu >= 10 and HunterDamageMenu <= 14 then		
				LoadNameAddress("BattleConfig_Damage")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else			    
					valueFromClass("BattleConfig")
					applyoffset(0x50, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x10, gg.TYPE_DWORD)
					gg.refineNumber("10~1,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("BattleConfig_Damage")
				end
				if HunterDamageMenu == 10 then				
					BattleConfig_PlusCriticalDamage()
				elseif HunterDamageMenu == 11 then		
    				applyoffset(0x4, gg.TYPE_DWORD)			
    				BattleConfig_MinusCriticalDamage()					
				elseif HunterDamageMenu == 12 then		
    				applyoffset(0x10, gg.TYPE_DWORD)			
    				BattleConfig_NoCriticalDamage()					
				elseif HunterDamageMenu == 13 then
					applyoffset(0x8, gg.TYPE_DWORD)
					BattleConfig_BlastDamage()
				elseif HunterDamageMenu == 14 then
					applyoffset(0xC, gg.TYPE_DWORD)
					BattleConfig_WeakPointThresholdDamage()
				end
			elseif HunterDamageMenu == 15 then
				Hunter()
			end
		end	
			-- [2-3-2] 斬撃
			PhysicalDamageDataCutDamage_Selected = {false, false, false}
			function PhysicalDamageData_CutDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterCutDamage = {"150", "1,500,000"}
				PhysicalDamageDataCutDamageMenu = gg.choice({
					(PhysicalDamageDataCutDamage_Selected[1] and "\n-> [1]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(PhysicalDamageDataCutDamage_Selected[2] and "\n-> [2]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(PhysicalDamageDataCutDamage_Selected[3] and "\n-> [3]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\n斬撃")
				if PhysicalDamageDataCutDamageMenu == nil then
					temporarilyhide()
					PhysicalDamageData_CutDamage()
				elseif PhysicalDamageDataCutDamageMenu >= 1 and PhysicalDamageDataCutDamageMenu <= 3 then
					for i = 1, 3 do
						PhysicalDamageDataCutDamage_Selected[i] = false
					end
					PhysicalDamageDataCutDamage_Selected[PhysicalDamageDataCutDamageMenu] = true				
					if PhysicalDamageDataCutDamageMenu >= 1 and PhysicalDamageDataCutDamageMenu <= 2 then
						local chosenValue = HunterCutDamage[PhysicalDamageDataCutDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif PhysicalDamageDataCutDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの斬撃ダメージを変更 #Dword型\n\nほぼデフォ: 150\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end							
					end
					PhysicalDamageData_CutDamage()
				elseif PhysicalDamageDataCutDamageMenu == 4 then
					HunterDamage()
				end
			end						
			-- [2-3-3] 打撃
			PhysicalDamageDataBluntDamage_Selected = {false, false, false}
			function PhysicalDamageData_BluntDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterBluntDamage = {"150", "1,500,000"}
				PhysicalDamageDataBluntDamageMenu = gg.choice({
					(PhysicalDamageDataBluntDamage_Selected[1] and "\n-> [1]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(PhysicalDamageDataBluntDamage_Selected[2] and "\n-> [2]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(PhysicalDamageDataBluntDamage_Selected[3] and "\n-> [3]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\n打撃")
				if PhysicalDamageDataBluntDamageMenu == nil then
					temporarilyhide()
					PhysicalDamageData_BluntDamage()
				elseif PhysicalDamageDataBluntDamageMenu >= 1 and PhysicalDamageDataBluntDamageMenu <= 3 then
					for i = 1, 3 do
						PhysicalDamageDataBluntDamage_Selected[i] = false
					end
					PhysicalDamageDataBluntDamage_Selected[PhysicalDamageDataBluntDamageMenu] = true				
					if PhysicalDamageDataBluntDamageMenu >= 1 and PhysicalDamageDataBluntDamageMenu <= 2 then
						local chosenValue = HunterBluntDamage[PhysicalDamageDataBluntDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif PhysicalDamageDataBluntDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの打撃ダメージを変更 #Dword型\n\nほぼデフォ: 150\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					PhysicalDamageData_BluntDamage()
				elseif PhysicalDamageDataBluntDamageMenu == 4 then
					HunterDamage()
				end
			end		
			-- [2-3-4] 射撃
			PhysicalDamageDataAmmoDamage_Selected = {false, false, false}
			function PhysicalDamageData_AmmoDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterAmmoDamage = {"150", "1,500,000"}
				PhysicalDamageDataAmmoDamageMenu = gg.choice({
					(PhysicalDamageDataAmmoDamage_Selected[1] and "\n-> [1]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(PhysicalDamageDataAmmoDamage_Selected[2] and "\n-> [2]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(PhysicalDamageDataAmmoDamage_Selected[3] and "\n-> [3]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\n射撃")
				if PhysicalDamageDataAmmoDamageMenu == nil then
					temporarilyhide()
					PhysicalDamageData_AmmoDamage()
				elseif PhysicalDamageDataAmmoDamageMenu >= 1 and PhysicalDamageDataAmmoDamageMenu <= 3 then
					for i = 1, 3 do
						PhysicalDamageDataAmmoDamage_Selected[i] = false
					end
					PhysicalDamageDataAmmoDamage_Selected[PhysicalDamageDataAmmoDamageMenu] = true				
					if PhysicalDamageDataAmmoDamageMenu >= 1 and PhysicalDamageDataAmmoDamageMenu <= 2 then
						local chosenValue = HunterAmmoDamage[PhysicalDamageDataAmmoDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif PhysicalDamageDataAmmoDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの射撃ダメージを変更 #Dword型\n\nほぼデフォ: 150\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
							break
							else
								temporarilyhide()
							end
						end							
					end
					PhysicalDamageData_AmmoDamage()
				elseif PhysicalDamageDataAmmoDamageMenu == 4 then
					PhysicalDamageData_PhysicalDamage()
				end
			end	
			-- [2-3-5] 火属性
			PhysicalDamageDataFireDamage_Selected = {false, false, false}
			function PhysicalDamageData_FireDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterFireDamage = {"100", "1,000,000"}
				PhysicalDamageDataFireDamageMenu = gg.choice({
					(PhysicalDamageDataFireDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(PhysicalDamageDataFireDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(PhysicalDamageDataFireDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ\n\n火属性")
				if PhysicalDamageDataFireDamageMenu == nil then
					temporarilyhide()
					PhysicalDamageData_FireDamage()
				elseif PhysicalDamageDataFireDamageMenu >= 1 and PhysicalDamageDataFireDamageMenu <= 3 then
					for i = 1, 3 do
						PhysicalDamageDataFireDamage_Selected[i] = false
					end
					PhysicalDamageDataFireDamage_Selected[PhysicalDamageDataFireDamageMenu] = true				
					if PhysicalDamageDataFireDamageMenu >= 1 and PhysicalDamageDataFireDamageMenu <= 2 then
						local chosenValue = HunterFireDamage[PhysicalDamageDataFireDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif PhysicalDamageDataFireDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの火属性ダメージを変更 #Dword型\n\nほぼデフォ: 100\n[  0 ~ 1,000,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end							
					end
					PhysicalDamageData_FireDamage()
				elseif PhysicalDamageDataFireDamageMenu == 4 then
					HunterDamage()
				end
			end	
			-- [2-3-6] 水属性
			PhysicalDamageDataWaterDamage_Selected = {false, false, false}
			function PhysicalDamageData_WaterDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterWaterDamage = {"100", "1,000,000"}
				PhysicalDamageDataWaterDamageMenu = gg.choice({
					(PhysicalDamageDataWaterDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(PhysicalDamageDataWaterDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(PhysicalDamageDataWaterDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\n水属性")
				if PhysicalDamageDataWaterDamageMenu == nil then
					temporarilyhide()
					PhysicalDamageData_WaterDamage()
				elseif PhysicalDamageDataWaterDamageMenu >= 1 and PhysicalDamageDataWaterDamageMenu <= 3 then
					for i = 1, 3 do
						PhysicalDamageDataWaterDamage_Selected[i] = false
					end
					PhysicalDamageDataWaterDamage_Selected[PhysicalDamageDataWaterDamageMenu] = true				
					if PhysicalDamageDataWaterDamageMenu >= 1 and PhysicalDamageDataWaterDamageMenu <= 2 then
						local chosenValue = HunterWaterDamage[PhysicalDamageDataWaterDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif PhysicalDamageDataWaterDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの水属性ダメージを変更 #Dword型\n\nほぼデフォ: 100\n[  0 ~ 1,000,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end							
					end
					PhysicalDamageData_WaterDamage()
				elseif PhysicalDamageDataWaterDamageMenu == 4 then
					HunterDamage()
				end
			end	
			-- [2-3-7] 雷属性
			PhysicalDamageDataThunderDamage_Selected = {false, false, false}
			function PhysicalDamageData_ThunderDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterThunderDamage = {"100", "1,000,000"}
				PhysicalDamageDataThunderDamageMenu = gg.choice({
					(PhysicalDamageDataThunderDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(PhysicalDamageDataThunderDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(PhysicalDamageDataThunderDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\n雷属性")
				if PhysicalDamageDataThunderDamageMenu == nil then
					temporarilyhide()
					PhysicalDamageData_ThunderDamage()
				elseif PhysicalDamageDataThunderDamageMenu >= 1 and PhysicalDamageDataThunderDamageMenu <= 3 then
					for i = 1, 3 do
						PhysicalDamageDataThunderDamage_Selected[i] = false
					end
						PhysicalDamageDataThunderDamage_Selected[PhysicalDamageDataThunderDamageMenu] = true				
					if PhysicalDamageDataThunderDamageMenu >= 1 and PhysicalDamageDataThunderDamageMenu <= 2 then
						local chosenValue = HunterThunderDamage[PhysicalDamageDataThunderDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif PhysicalDamageDataThunderDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの雷属性ダメージを変更 #Dword型\n\nほぼデフォ: 100\n[  0 ~ 1,000,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end							
					end
					PhysicalDamageData_ThunderDamage()
				elseif PhysicalDamageDataThunderDamageMenu == 4 then
					HunterDamage()
				end
			end	
			-- [2-3-8] 氷属性
			PhysicalDamageDataIceDamage_Selected = {false, false, false}
			function PhysicalDamageData_IceDamage()			
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterIceDamage = {"100", "1,000,000"}
				PhysicalDamageDataIceDamageMenu = gg.choice({
					(PhysicalDamageDataIceDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(PhysicalDamageDataIceDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(PhysicalDamageDataIceDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\n氷属性")
				if PhysicalDamageDataIceDamageMenu == nil then
					temporarilyhide()
					PhysicalDamageData_IceDamage()
				elseif PhysicalDamageDataIceDamageMenu >= 1 and PhysicalDamageDataIceDamageMenu <= 3 then
					for i = 1, 3 do
						PhysicalDamageDataIceDamage_Selected[i] = false
					end
					PhysicalDamageDataIceDamage_Selected[PhysicalDamageDataIceDamageMenu] = true				
					if PhysicalDamageDataIceDamageMenu >= 1 and PhysicalDamageDataIceDamageMenu <= 2 then
						local chosenValue = HunterIceDamage[PhysicalDamageDataIceDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif PhysicalDamageDataIceDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの氷属性ダメージを変更 #Dword型\n\nほぼデフォ: 100\n[  0 ~ 1,000,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end							
					end
					PhysicalDamageData_IceDamage()
				elseif PhysicalDamageDataIceDamageMenu == 4 then
					HunterDamage()
				end
			end	
			-- [2-3-9] 龍属性
			PhysicalDamageDataDragonDamage_Selected = {false, false, false}
			function PhysicalDamageData_DragonDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterDragonDamage = {"100", "1,000,000"}
				PhysicalDamageDataDragonDamageMenu = gg.choice({
					(PhysicalDamageDataDragonDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(PhysicalDamageDataDragonDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(PhysicalDamageDataDragonDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\n龍属性")
				if PhysicalDamageDataDragonDamageMenu == nil then
					temporarilyhide()
					PhysicalDamageData_DragonDamage()
				elseif PhysicalDamageDataDragonDamageMenu >= 1 and PhysicalDamageDataDragonDamageMenu <= 3 then
					for i = 1, 3 do
						PhysicalDamageDataDragonDamage_Selected[i] = false
					end
					PhysicalDamageDataDragonDamage_Selected[PhysicalDamageDataDragonDamageMenu] = true				
					if PhysicalDamageDataDragonDamageMenu >= 1 and PhysicalDamageDataDragonDamageMenu <= 2 then
						local chosenValue = HunterDragonDamage[PhysicalDamageDataDragonDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif PhysicalDamageDataDragonDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの龍属性ダメージを変更 #Dword型\n\nほぼデフォ: 100\n[  0 ~ 1,000,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end							
					end
					PhysicalDamageData_DragonDamage()
				elseif PhysicalDamageDataDragonDamageMenu == 4 then
					HunterDamage()
				end
			end				
			-- [2-3-10] プラス会心
			BattleConfigPlusCriticalDamage_Selected = {false, false, false}
			function BattleConfig_PlusCriticalDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterPlusCriticalDamage = {"125", "1,250,000"}
				BattleConfigPlusCriticalDamageMenu = gg.choice({
					(BattleConfigPlusCriticalDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(BattleConfigPlusCriticalDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(BattleConfigPlusCriticalDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\nプラス会心")
				if BattleConfigPlusCriticalDamageMenu == nil then
					temporarilyhide()
					BattleConfig_PlusCriticalDamage()
				elseif BattleConfigPlusCriticalDamageMenu >= 1 and BattleConfigPlusCriticalDamageMenu <= 3 then
					for i = 1, 3 do
						BattleConfigPlusCriticalDamage_Selected[i] = false
					end
					BattleConfigPlusCriticalDamage_Selected[BattleConfigPlusCriticalDamageMenu] = true				
					if BattleConfigPlusCriticalDamageMenu >= 1 and BattleConfigPlusCriticalDamageMenu <= 2 then
						local chosenValue = HunterPlusCriticalDamage[BattleConfigPlusCriticalDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleConfigPlusCriticalDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターのプラス会心ダメージを変更 #Dword型\n\nほぼデフォ: 125\n[  0 ~ 1,250,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleConfig_PlusCriticalDamage()
				elseif BattleConfigPlusCriticalDamageMenu == 4 then
					HunterDamage()
				end
			end	
			-- [2-3-11] マイナス会心
			BattleConfigMinusCriticalDamage_Selected = {false, false, false}
			function BattleConfig_MinusCriticalDamage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterMinusCriticalDamage = {"75", "750,000"}
				BattleConfigMinusCriticalDamageMenu = gg.choice({
					(BattleConfigMinusCriticalDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(BattleConfigMinusCriticalDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(BattleConfigMinusCriticalDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\nマイナス会心")
				if BattleConfigMinusCriticalDamageMenu == nil then
					temporarilyhide()
					BattleConfig_MinusCriticalDamage()
				elseif BattleConfigMinusCriticalDamageMenu >= 1 and BattleConfigMinusCriticalDamageMenu <= 3 then
					for i = 1, 3 do
						BattleConfigMinusCriticalDamage_Selected[i] = false
					end
					BattleConfigMinusCriticalDamage_Selected[BattleConfigMinusCriticalDamageMenu] = true				
					if BattleConfigMinusCriticalDamageMenu >= 1 and BattleConfigMinusCriticalDamageMenu <= 2 then
						local chosenValue = HunterMinusCriticalDamage[BattleConfigMinusCriticalDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleConfigMinusCriticalDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターのマイナス会心ダメージを変更 #Dword型\n\nほぼデフォ: 75\n[  0 ~ 750,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleConfig_MinusCriticalDamage()
				elseif BattleConfigMinusCriticalDamageMenu == 4 then
					HunterDamage()
				end
			end				
			-- [2-3-12] 無会心
			BattleConfigNoCriticalDamage_Selected = {false, false, false}
			function BattleConfig_NoCriticalDamage()	
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterNoCriticalDamage = {"40", "400,000"}
				BattleConfigNoCriticalDamageMenu = gg.choice({
					(BattleConfigNoCriticalDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(BattleConfigNoCriticalDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(BattleConfigNoCriticalDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ/\n\n無会心")
				if BattleConfigNoCriticalDamageMenu == nil then
					temporarilyhide()
					BattleConfig_NoCriticalDamage()
				elseif BattleConfigNoCriticalDamageMenu >= 1 and BattleConfigNoCriticalDamageMenu <= 3 then
					for i = 1, 3 do
						BattleConfigNoCriticalDamage_Selected[i] = false
					end
					BattleConfigNoCriticalDamage_Selected[BattleConfigNoCriticalDamageMenu] = true				
					if BattleConfigNoCriticalDamageMenu >= 1 and BattleConfigNoCriticalDamageMenu <= 2 then
						local chosenValue = HunterNoCriticalDamage[BattleConfigNoCriticalDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleConfigNoCriticalDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの無会心ダメージを変更 #Dword型\n\nほぼデフォ: 40\n[  0 ~ 400,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end							
					end
					BattleConfig_NoCriticalDamage()
				elseif BattleConfigNoCriticalDamageMenu == 4 then
					HunterDamage()
				end
			end									
			-- [2-3-13] 爆破
			BattleConfigBlastDamage_Selected = {false, false, false}
			function BattleConfig_BlastDamage()		
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterBlastDamage = {"130", "1,300,000"}
				BattleConfigBlastDamageMenu = gg.choice({
					(BattleConfigBlastDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(BattleConfigBlastDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(BattleConfigBlastDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ\n\n爆破")
				if BattleConfigBlastDamageMenu == nil then
					temporarilyhide()
					BattleConfig_BlastDamage()
				elseif BattleConfigBlastDamageMenu >= 1 and BattleConfigBlastDamageMenu <= 3 then
					for i = 1, 3 do
						BattleConfigBlastDamage_Selected[i] = false
					end
					BattleConfigBlastDamage_Selected[BattleConfigBlastDamageMenu] = true				
					if BattleConfigBlastDamageMenu >= 1 and BattleConfigBlastDamageMenu <= 2 then
						local chosenValue = HunterBlastDamage[BattleConfigBlastDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleConfigBlastDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの爆破ダメージを変更 #Dword型\n\nほぼデフォ: 130\n[  0 ~ 1,300,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleConfig_BlastDamage()
				elseif BattleConfigBlastDamageMenu == 4 then
					HunterDamage()
				end
			end	
			-- [2-3-14] 弱点
			BattleConfigWeakPointThresholdDamage_Selected = {false, false, false}
			function BattleConfig_WeakPointThresholdDamage()			
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterWeakPointThresholdDamage = {"130", "1,300,000"}
				BattleConfigWeakPointThresholdDamageMenu = gg.choice({
					(BattleConfigWeakPointThresholdDamage_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(BattleConfigWeakPointThresholdDamage_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(BattleConfigWeakPointThresholdDamage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/ダメージ\n\n弱点")
				if BattleConfigWeakPointThresholdDamageMenu == nil then
					temporarilyhide()
					BattleConfig_WeakPointThresholdDamage()
				elseif BattleConfigWeakPointThresholdDamageMenu >= 1 and BattleConfigWeakPointThresholdDamageMenu <= 3 then
					for i = 1, 3 do
						BattleConfigWeakPointThresholdDamage_Selected[i] = false
					end
					BattleConfigWeakPointThresholdDamage_Selected[BattleConfigWeakPointThresholdDamageMenu] = true				
					if BattleConfigWeakPointThresholdDamageMenu >= 1 and BattleConfigWeakPointThresholdDamageMenu <= 2 then
						local chosenValue = HunterWeakPointThresholdDamage[BattleConfigWeakPointThresholdDamageMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleConfigWeakPointThresholdDamageMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの弱点ダメージを変更 #Dword型\n\nほぼデフォ: 130\n[  0 ~ 1,300,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleConfig_WeakPointThresholdDamage()
				elseif BattleConfigWeakPointThresholdDamageMenu == 4 then
					HunterDamage()
				end
			end			
		-- [2-4] 特定のアクション
		HunterAction_currentA = 1
		HunterAction_SelectedA = {"\n[1]    チャージ 最大\n", "\n[ON]    チャージ 最大\n", "[OFF]    チャージ 最大\n"}  
		function HunterAction()		
			IncludeCheckAndTrueFalseA("BattleConfig_JustDodge")
			HunterAction_Selected = {A}
			gg.setVisible(false)
			HunterActionMenu = gg.choice({	
				HunterAction_SelectedA[HunterAction_currentA],
				(HunterAction_Selected[1] and "\n-> [2]    ジャスト回避後の無敵時間" or "\n[2]    ジャスト回避後の無敵時間"),											
				"\n[←]    もどる"
			}, nil, "メインメニュー/ハンター\n\n特定のアクション")
			if HunterActionMenu == nil then
				temporarilyhide()
				HunterAction()
			elseif HunterActionMenu == 1 then
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if HunterAction_currentA == 1 or HunterAction_currentA == 3 then
                    gg.setValues({{address = start + 0x1A64488, flags = 4, value = "~A8 LDUR S0, [X0,#0x1];"}})
                    HunterAction_currentA = 2
					HunterAction()	
                elseif HunterAction_currentA == 2 then
                    gg.setValues({{address = start + 0x1A64488, flags = 4, value = "~A8 LDR S0, [X0,#0x198];"}})
                    HunterAction_currentA = 3
                end			
			elseif HunterActionMenu == 2 then
				LoadNameAddress("BattleConfig_JustDodge")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else			
					valueFromClass("BattleConfig")
					applyoffset(0x98, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x40, gg.TYPE_FLOAT)
					gg.refineNumber("0.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
					AddNameAddress("BattleConfig_JustDodge")
				end
				BattleConfig_JustDodgeInvincibleDuration()
			elseif HunterActionMenu == 3 then
				Hunter()
			end
		end	
			-- [2-4-2] ジャスト回避後の無敵時間
			BattleConfigJustDodgeInvincibleDuration_Selected = {false, false, false}
			function BattleConfig_JustDodgeInvincibleDuration()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterJustDodgeInvincibleDuration = {"0.5", "300"}
				BattleConfigJustDodgeInvincibleDurationMenu = gg.choice({
					(BattleConfigJustDodgeInvincibleDuration_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigJustDodgeInvincibleDuration_Selected[2] and "\n[ON]    300 秒\n" or "\n[2]    300 秒\n"),
					(BattleConfigJustDodgeInvincibleDuration_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/特定のアクション/\n\nジャスト回避後の無敵時間")
				if BattleConfigJustDodgeInvincibleDurationMenu == nil then
					temporarilyhide()
					BattleConfig_JustDodgeInvincibleDuration()
				elseif BattleConfigJustDodgeInvincibleDurationMenu >= 1 and BattleConfigJustDodgeInvincibleDurationMenu <= 3 then
					for i = 1, 3 do
						BattleConfigJustDodgeInvincibleDuration_Selected[i] = false
					end
					BattleConfigJustDodgeInvincibleDuration_Selected[BattleConfigJustDodgeInvincibleDurationMenu] = true	
					if BattleConfigJustDodgeInvincibleDurationMenu >= 1 and BattleConfigJustDodgeInvincibleDurationMenu <= 2 then
						local chosenValue = HunterJustDodgeInvincibleDuration[BattleConfigJustDodgeInvincibleDurationMenu]
						gg.editAll(chosenValue, gg.TYPE_FLOAT)
					elseif BattleConfigJustDodgeInvincibleDurationMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターのジャスト回避後の無敵時間を変更 #Float型\n\nデフォ: 0.5\n[  0.5 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_FLOAT)									
								break
							else
								temporarilyhide()
							end
						end
					end
					BattleConfig_JustDodgeInvincibleDuration()	
				elseif BattleConfigJustDodgeInvincibleDurationMenu == 4 then
					HunterAction()
				end
			end			
		-- [2-5] 戦闘時
		HunterBattle_currentA = 1
		HunterBattle_SelectedA = {"\n[1]    SPゲージ 満タン\n", "\n[ON]    SPゲージ 満タン\n", "\n[OFF]    SPゲージ 満タン\n"}  
		function HunterBattle()		
			IncludeCheckAndTrueFalseA("BattleConfig_Battle")
			HunterBattle_Selected = {A, A, A, A}
			gg.setVisible(false)
			HunterBattleMenu = gg.choice({
				HunterBattle_SelectedA[HunterBattle_currentA],
				(HunterBattle_Selected[1] and "\n-> [2]    回復薬のクールタイム\n" or "\n[2]    回復薬のクールタイム\n"),		
				(HunterBattle_Selected[2] and "\n-> [3]    復活後の無敵時間\n" or "\n[3]    復活後の無敵時間\n"),
				(HunterBattle_Selected[3] and "\n-> [4]    SPゲージの最大容量\n" or "\n[4]    SPゲージの最大容量\n"),
				(HunterBattle_Selected[4] and "\n-> [5]    SPゲージのダウンペナルティ\n" or "\n[5]    SPゲージのダウンペナルティ\n"),	
				"\n[←]    もどる"
			}, nil, "メインメニュー/ハンター\n\n戦闘時")
			if HunterBattleMenu == nil then
				temporarilyhide()
				HunterBattle()
			elseif HunterBattleMenu == 1 then
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if HunterBattle_currentA == 1 or HunterBattle_currentA == 3 then
					gg.setValues({{address = start + 0x193DD94, flags = 4, value = "~A8 MOV W0, #0x1;"}})
					HunterBattle_currentA = 2
                elseif HunterBattle_currentA == 2 then
					gg.setValues({{address = start + 0x193DD94, flags = 4, value = "~A8 MOV W0, WZR;"}})
					HunterBattle_currentA = 3
                end					
				HunterBattle()	
			elseif HunterBattleMenu >= 2 and HunterBattleMenu <= 5 then	
				LoadNameAddress("BattleConfig_Battle")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else			
					valueFromClass("BattleConfig")
					applyoffset(0x88, gg.TYPE_FLOAT)
					gg.refineNumber("15", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("BattleConfig_Battle")
				end
				if HunterBattleMenu == 2 then
					BattleConfig_PotionCoolTimeSeconds()
				elseif HunterBattleMenu == 3 then
					applyoffset(0x4, gg.TYPE_FLOAT)
					BattleConfig_ReviveInvincibleTimeSeconds()
				elseif HunterBattleMenu == 4 then
					applyoffset(0x3C, gg.TYPE_DWORD)
					BattleConfig_SpecialGaugeCapacity()
				elseif HunterBattleMenu == 5 then	
					applyoffset(0x40, gg.TYPE_DWORD)
					BattleConfig_SpecialGaugeDownPenaltyPercentage()
				end
			elseif HunterBattleMenu == 6 then
				Hunter()
			end
		end	
			-- [2-5-1] 回復薬のクールタイム
			BattleConfigPotionCoolTimeSeconds_Selected = {false, false, false}
			function BattleConfig_PotionCoolTimeSeconds()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterPotionCoolTimeSeconds = {"15", "0"}
				BattleConfigPotionCoolTimeSecondsMenu = gg.choice({
					(BattleConfigPotionCoolTimeSeconds_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigPotionCoolTimeSeconds_Selected[2] and "\n[ON]    なし\n" or "\n[2]    なし\n"),
					(BattleConfigPotionCoolTimeSeconds_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/戦闘時/\n\n回復薬のクールタイム")
				if BattleConfigPotionCoolTimeSecondsMenu == nil then
					temporarilyhide()
					BattleConfig_PotionCoolTimeSeconds()
				elseif BattleConfigPotionCoolTimeSecondsMenu >= 1 and BattleConfigPotionCoolTimeSecondsMenu <= 3 then
					for i = 1, 3 do
						BattleConfigPotionCoolTimeSeconds_Selected[i] = false
					end
					BattleConfigPotionCoolTimeSeconds_Selected[BattleConfigPotionCoolTimeSecondsMenu] = true				
					if BattleConfigPotionCoolTimeSecondsMenu >= 1 and BattleConfigPotionCoolTimeSecondsMenu <= 2 then
						local chosenValue = HunterPotionCoolTimeSeconds[BattleConfigPotionCoolTimeSecondsMenu]
						gg.editAll(chosenValue, gg.TYPE_FLOAT)
					elseif BattleConfigPotionCoolTimeSecondsMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの回復薬のクールタイムを変更 #Float型\n\n秒, デフォ: 0\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_FLOAT)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleConfig_PotionCoolTimeSeconds()
				elseif BattleConfigPotionCoolTimeSecondsMenu == 4 then
					HunterBattle()
				end
			end	
			-- [2-5-2] 復活後の無敵時間
			BattleConfigReviveInvincibleTimeSeconds_Selected = {false, false, false}
			function BattleConfig_ReviveInvincibleTimeSeconds()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterReviveInvincibleTimeSeconds = {"2.5", "300"}
				BattleConfigReviveInvincibleTimeSecondsMenu = gg.choice({
					(BattleConfigReviveInvincibleTimeSeconds_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigReviveInvincibleTimeSeconds_Selected[2] and "\n[ON]    なし\n" or "\n[2]    なし\n"),
					(BattleConfigReviveInvincibleTimeSeconds_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/戦闘時/\n\n復活後の無敵時間")
				if BattleConfigReviveInvincibleTimeSecondsMenu == nil then
					temporarilyhide()
					BattleConfig_ReviveInvincibleTimeSeconds()
				elseif BattleConfigReviveInvincibleTimeSecondsMenu >= 1 and BattleConfigReviveInvincibleTimeSecondsMenu <= 3 then
					for i = 1, 3 do
						BattleConfigReviveInvincibleTimeSeconds_Selected[i] = false
					end
					BattleConfigReviveInvincibleTimeSeconds_Selected[BattleConfigReviveInvincibleTimeSecondsMenu] = true				
					if BattleConfigReviveInvincibleTimeSecondsMenu >= 1 and BattleConfigReviveInvincibleTimeSecondsMenu <= 2 then
						local chosenValue = HunterReviveInvincibleTimeSeconds[BattleConfigReviveInvincibleTimeSecondsMenu]
						gg.editAll(chosenValue, gg.TYPE_FLOAT)
					elseif BattleConfigReviveInvincibleTimeSecondsMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの復活後の無敵時間を変更 #Float型\n\n秒, デフォ: 2.5\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_FLOAT)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleConfig_ReviveInvincibleTimeSeconds()
				elseif BattleConfigReviveInvincibleTimeSecondsMenu == 4 then
					HunterBattle()
				end
			end	
			-- [2-5-3] SPゲージの最大容量
			BattleConfigSpecialGaugeCapacity_Selected = {false, false, false}
			function BattleConfig_SpecialGaugeCapacity()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterSpecialGaugeCapacity = {"230", "1"}
				BattleConfigSpecialGaugeCapacityMenu = gg.choice({
					(BattleConfigSpecialGaugeCapacity_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigSpecialGaugeCapacity_Selected[2] and "\n[ON]    即フルチャージ\n" or "\n[2]    即フルチャージ\n"),
					(BattleConfigSpecialGaugeCapacity_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/戦闘時/\n\nSPゲージの最大容量")
				if BattleConfigSpecialGaugeCapacityMenu == nil then
					temporarilyhide()
					BattleConfig_SpecialGaugeCapacity()
				elseif BattleConfigSpecialGaugeCapacityMenu >= 1 and BattleConfigSpecialGaugeCapacityMenu <= 3 then
					for i = 1, 3 do
						BattleConfigSpecialGaugeCapacity_Selected[i] = false
					end
					BattleConfigSpecialGaugeCapacity_Selected[BattleConfigSpecialGaugeCapacityMenu] = true				
					if BattleConfigSpecialGaugeCapacityMenu >= 1 and BattleConfigSpecialGaugeCapacityMenu <= 2 then
						local chosenValue = HunterSpecialGaugeCapacity[BattleConfigSpecialGaugeCapacityMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleConfigSpecialGaugeCapacityMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターのSPゲージの最大容量を変更 #Dword型\n\n秒, デフォ: 230\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleConfig_SpecialGaugeCapacity()
				elseif BattleConfigSpecialGaugeCapacityMenu == 4 then
					HunterBattle()
				end
			end	
			-- [2-5-4] SPゲージのダウンペナルティ
			BattleConfigSpecialGaugeDownPenaltyPercentage_Selected = {false, false, false}
			function BattleConfig_SpecialGaugeDownPenaltyPercentage()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterSpecialGaugeDownPenaltyPercentage = {"20", "0"}
				SpecialGaugeDownPenaltyPercentage = gg.choice({
					(BattleConfigSpecialGaugeDownPenaltyPercentage_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigSpecialGaugeDownPenaltyPercentage_Selected[2] and "\n[ON]    即フルチャージ\n" or "\n[2]    即フルチャージ\n"),
					(BattleConfigSpecialGaugeDownPenaltyPercentage_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/戦闘時/\n\nSPゲージのダウンペナルティ")
				if SpecialGaugeDownPenaltyPercentage == nil then
					temporarilyhide()
					BattleConfig_SpecialGaugeDownPenaltyPercentage()
				elseif SpecialGaugeDownPenaltyPercentage >= 1 and SpecialGaugeDownPenaltyPercentage <= 3 then
					for i = 1, 3 do
						BattleConfigSpecialGaugeDownPenaltyPercentage_Selected[i] = false
					end
					BattleConfigSpecialGaugeDownPenaltyPercentage_Selected[SpecialGaugeDownPenaltyPercentage] = true				
					if SpecialGaugeDownPenaltyPercentage >= 1 and SpecialGaugeDownPenaltyPercentage <= 2 then
						local chosenValue = HunterSpecialGaugeDownPenaltyPercentage[SpecialGaugeDownPenaltyPercentage]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif SpecialGaugeDownPenaltyPercentage == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターのSPゲージのダウンペナルティを変更 #Float型\n\n割合%, デフォ: 20\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleConfig_SpecialGaugeDownPenaltyPercentage()
				elseif SpecialGaugeDownPenaltyPercentage == 4 then
					HunterBattle()
				end
			end	
		-- [2-6] 耐性
		function HunterResistance()		
			IncludeCheckAndTrueFalseA("BattleConfig_Poison")
			IncludeCheckAndTrueFalseB("BattleConfig_Paralysis")
			IncludeCheckAndTrueFalseC("BattleConfig_Bleeding")
			IncludeCheckAndTrueFalseD("BattleConfig_Flash")
			HunterResistance_Selected = {A, B, C, D}
			gg.setVisible(false)
			HunterResistanceMenu = gg.choice({
				(HunterResistance_Selected[1] and "\n-> [1]    毒\n" or "\n[1]    毒\n"),
				(HunterResistance_Selected[2] and "\n-> [2]    麻痺\n" or "\n[2]    麻痺\n"),
				(HunterResistance_Selected[3] and "\n-> [3]    裂傷\n" or "\n[3]    裂傷\n"),
				(HunterResistance_Selected[4] and "\n-> [4]    気絶\n" or "\n[4]    気絶\n"),			
				"\n[~]    アドレスの再取得\n",
				"\n[←]    もどる"
			}, nil, "メインメニュー/ハンター\n\n耐性")
			if HunterResistanceMenu == nil then
				temporarilyhide()
				HunterResistance()
			elseif HunterResistanceMenu == 1 then
    			BattleConfig_PoisonResistance()
    		elseif HunterResistanceMenu == 2 then
    			BattleConfig_ParalysisResistance()
			elseif HunterResistanceMenu == 3 then
				BattleConfig_BleedingResistance()
			elseif HunterResistanceMenu == 4 then	
				BattleConfig_FlashResistance()
			elseif HunterResistanceMenu == 5 then
				refresh_HunterResistance()
			elseif HunterResistanceMenu == 6 then
				Hunter()
			end
		end		
			-- [2-6-1] 毒
			BattleConfigPoisonResistance_Selected = {false, false, false}
			function BattleConfig_PoisonResistance()
				gg.getResults(9999)
				gg.setVisible(false)
				BattleConfigPoisonResistanceMenu = gg.choice({
					(BattleConfigPoisonResistance_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigPoisonResistance_Selected[2] and "\n[ON]    無効\n" or "\n[2]    無効\n"),
					(BattleConfigPoisonResistance_Selected[3] and "\n[ON]    詳細設定\n" or "\n[3]    詳細設定\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/耐性\n\n毒")
				if BattleConfigPoisonResistanceMenu == nil then
					temporarilyhide()
					BattleConfig_PoisonResistance()
				elseif BattleConfigPoisonResistanceMenu >= 1 and BattleConfigPoisonResistanceMenu <= 3 then
					for i = 1, 3 do
						BattleConfigPoisonResistance_Selected[i] = false
					end
					BattleConfigPoisonResistance_Selected[BattleConfigPoisonResistanceMenu] = true	
					LoadNameAddress("BattleConfig_Poison")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else					
						valueFromClass("BattleConfig")	
						applyoffset(0xB8, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x10, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x10, gg.TYPE_FLOAT)
						gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
						AddNameAddress("BattleConfig_Poison")
					end
					gg.getResults(9999)
					if BattleConfigPoisonResistanceMenu == 1 then	
						gg.editAll("1", gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll("0.5", gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll("1", gg.TYPE_FLOAT)
					elseif BattleConfigPoisonResistanceMenu == 2 then
						gg.editAll("0", gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll("0", gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll("0", gg.TYPE_FLOAT)					
					elseif BattleConfigPoisonResistanceMenu == 3 then
						gg.setVisible(false)
						local prompt = {"ハンターの毒状態の持続時間 #Float型\n\n秒, デフォ: 1\n[  0 ~ 300  ]", "毒ダメージ #Float型\n\n1秒あたりに受けるダメージ, デフォ: 0.5\n[  0 ~   ]", "毒ダメージを受ける間隔 #Float型\n\n秒, デフォ: 1\n[  0 ~   ]"}
						local userInput = gg.prompt(prompt, {[1] = "", [2] = "", [3] = ""}, {[1] = gg.TYPE_FLOAT, [2] = gg.TYPE_FLOAT, [3] = gg.TYPE_FLOAT},{"number","number","number"})
						if not userInput then
							BattleConfig_PoisonResistance()
						end
						local value1 = userInput[1]
						local value2 = userInput[2]
						local value3 = userInput[3]	
						gg.editAll(value1, gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll(value2, gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll(value3, gg.TYPE_FLOAT)							
					end
					BattleConfig_PoisonResistance()
				elseif BattleConfigPoisonResistanceMenu == 4 then	
					HunterResistance()
				end
			end	
			-- [2-6-2] 麻痺
			BattleConfigParalysisResistance_Selected = {false, false, false}
			function BattleConfig_ParalysisResistance()
				gg.getResults(9999)
				gg.setVisible(false)
				BattleConfigParalysisResistanceMenu = gg.choice({
					(BattleConfigParalysisResistance_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigParalysisResistance_Selected[2] and "\n[ON]    無効\n" or "\n[2]    無効\n"),
					(BattleConfigParalysisResistance_Selected[3] and "\n[ON]    詳細設定\n" or "\n[3]    詳細設定\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/耐性\n\n麻痺")
				if BattleConfigParalysisResistanceMenu == nil then
					temporarilyhide()
					BattleConfig_ParalysisResistance()
				elseif BattleConfigParalysisResistanceMenu >= 1 and BattleConfigParalysisResistanceMenu <= 3 then
					for i = 1, 3 do
						BattleConfigParalysisResistance_Selected[i] = false
					end
					BattleConfigParalysisResistance_Selected[BattleConfigParalysisResistanceMenu] = true	
					LoadNameAddress("BattleConfig_Paralysis")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else						
						valueFromClass("BattleConfig")	
						applyoffset(0xB8, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x18, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x18, gg.TYPE_FLOAT)
						gg.refineNumber("4~7", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
						AddNameAddress("BattleConfig_Paralysis")
					end
					gg.getResults(9999)
					if BattleConfigParalysisResistanceMenu == 1 then	
						gg.editAll("5.19999980927", gg.TYPE_FLOAT)
						applyoffset(0x1C, gg.TYPE_FLOAT)
						gg.editAll("0.20000000298", gg.TYPE_FLOAT)
					elseif BattleConfigParalysisResistanceMenu == 2 then
						gg.editAll("0", gg.TYPE_FLOAT)
						applyoffset(0x1C, gg.TYPE_FLOAT)
						gg.editAll("1,000", gg.TYPE_FLOAT)			
					elseif BattleConfigParalysisResistanceMenu == 3 then
						gg.setVisible(false)
						local prompt = {"ハンターの麻痺状態の持続時間 #Float型\n\n秒, デフォ: 5.19999980927\n[  0 ~   ]", "1タップによる麻痺時間の削減量 #Float型\n\n秒, デフォ: 0.20000000298\n[  0 ~   ]"}
						local userInput = gg.prompt(prompt, {[1] = "", [2] = ""}, {[1] = gg.TYPE_FLOAT, [2] = gg.TYPE_FLOAT},{"number","number"})
						if not userInput then
							BattleConfig_ParalysisResistance()
						end
						local value1 = userInput[1]
						local value2 = userInput[2]
						gg.editAll(value1, gg.TYPE_FLOAT)
						applyoffset(0x1C, gg.TYPE_FLOAT)
						gg.editAll(value2, gg.TYPE_FLOAT)							
					end
					BattleConfig_ParalysisResistance()
				elseif BattleConfigParalysisResistanceMenu == 4 then	
					HunterResistance()
				end
			end	
			-- [2-6-3] 裂傷
			BattleConfigBleedingResistance_Selected = {false, false, false}
			function BattleConfig_BleedingResistance()
				gg.getResults(9999)
				gg.setVisible(false)
				BattleConfigBleedingResistanceMenu = gg.choice({
					(BattleConfigBleedingResistance_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigBleedingResistance_Selected[2] and "\n[ON]    無効\n" or "\n[2]    無効\n"),
					(BattleConfigBleedingResistance_Selected[3] and "\n[ON]    詳細設定\n" or "\n[3]    詳細設定\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/耐性\n\n裂傷")
				if BattleConfigBleedingResistanceMenu == nil then
					temporarilyhide()
					BattleConfig_BleedingResistance()
				elseif BattleConfigBleedingResistanceMenu >= 1 and BattleConfigBleedingResistanceMenu <= 3 then
					for i = 1, 3 do
						BattleConfigBleedingResistance_Selected[i] = false
					end
					BattleConfigBleedingResistance_Selected[BattleConfigBleedingResistanceMenu] = true	
					LoadNameAddress("BattleConfig_Bleeding")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else								
						valueFromClass("BattleConfig")	
						applyoffset(0xB8, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x28, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x10, gg.TYPE_FLOAT)
						gg.refineNumber("20", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
						AddNameAddress("BattleConfig_Bleeding")
					end
					gg.getResults(9999)
					if BattleConfigBleedingResistanceMenu == 1 then	
						gg.editAll("20", gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll("3", gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_DWORD)
						gg.editAll("5", gg.TYPE_DWORD)
					elseif BattleConfigBleedingResistanceMenu == 2 then
						gg.editAll("0", gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll("0", gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_DWORD)
						gg.editAll("0", gg.TYPE_DWORD)					
					elseif BattleConfigBleedingResistanceMenu == 3 then
						gg.setVisible(false)
						local prompt = {"ハンターの裂傷状態の復帰時間 #Float型\n\n秒, デフォ: 20\n[  0 ~   ]", "休息による裂傷状態の復帰時間 #Float型\n\n秒, デフォ: 3\n[  0 ~   ]", "裂傷ダメージ #Float型\n\nデフォ: 5\n[  0 ~   ]"}
						local userInput = gg.prompt(prompt, {[1] = "", [2] = "", [3] = ""}, {[1] = gg.TYPE_FLOAT, [2] = gg.TYPE_FLOAT, [3] = gg.TYPE_DWORD},{"number","number","number"})
						if not userInput then
							BattleConfig_BleedingResistance()
						end
						local value1 = userInput[1]
						local value2 = userInput[2]
						local value3 = userInput[3]	
						gg.editAll(value1, gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_FLOAT)
						gg.editAll(value2, gg.TYPE_FLOAT)
						applyoffset(0x4, gg.TYPE_DWORD)
						gg.editAll(value3, gg.TYPE_DWORD)							
					end
					BattleConfig_BleedingResistance()
				elseif BattleConfigBleedingResistanceMenu == 4 then	
					HunterResistance()
				end
			end	
			-- [2-6-4] 気絶
			BattleConfigFlashResistance_Selected = {false, false, false}
			function BattleConfig_FlashResistance()
				gg.getResults(9999)
				gg.setVisible(false)
				BattleConfigFlashResistanceMenu = gg.choice({
					(BattleConfigFlashResistance_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigFlashResistance_Selected[2] and "\n[ON]    無効\n" or "\n[2]    無効\n"),
					(BattleConfigFlashResistance_Selected[3] and "\n[ON]    詳細設定\n" or "\n[3]    詳細設定\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/耐性\n\n気絶")
				if BattleConfigFlashResistanceMenu == nil then
					temporarilyhide()
					BattleConfig_FlashResistance()
				elseif BattleConfigFlashResistanceMenu >= 1 and BattleConfigFlashResistanceMenu <= 3 then
					for i = 1, 3 do
						BattleConfigFlashResistance_Selected[i] = false
					end
					BattleConfigFlashResistance_Selected[BattleConfigFlashResistanceMenu] = true	
					LoadNameAddress("BattleConfig_Flash")
					local count = gg.getResultsCount(9999)
					if count >= 1 then
					else					
						valueFromClass("BattleConfig")	
						applyoffset(0xB8, gg.TYPE_QWORD)
						MoveThePointer()
						applyoffset(0x30, gg.TYPE_QWORD)
						gg.refineNumber("5~8", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
						AddNameAddress("BattleConfig_Flash")
					end
					gg.getResults(9999)
					if BattleConfigFlashResistanceMenu == 1 then	
						gg.editAll("5.19999980927", gg.TYPE_FLOAT)
					elseif BattleConfigFlashResistanceMenu == 2 then
						gg.editAll("0", gg.TYPE_FLOAT)			
					elseif BattleConfigFlashResistanceMenu == 3 then
						gg.setVisible(false)
						local prompt = {"ハンターの気絶状態の持続時間 #Float型\n\n秒, デフォ: 7[  0 ~  ]"}
						local userInput = gg.prompt(prompt, {[1] = ""}, {[1] = gg.TYPE_FLOAT},{"number"})
						if not userInput then
							BattleConfig_FlashResistance()
						end
						local value1 = userInput[1]
						gg.editAll(value1, gg.TYPE_FLOAT)						
					end
					BattleConfig_FlashResistance()
				elseif BattleConfigFlashResistanceMenu == 4 then	
					HunterResistance()
				end
			end	
		-- [2-7] 攻撃変数の書き換え
		function HunterAttackParam()	
			IncludeCheckAndTrueFalseA("BattleAttackParam_AttackParam")
			HunterBattle_Selected = {A, A, A, A, A}
			gg.setVisible(false)
			HunterBattleMenu = gg.choice({
				(HunterBattle_Selected[1] and "\n-> [1]    モーション値*\n" or "\n[1]    モーション値*\n"),
				(HunterBattle_Selected[2] and "\n-> [2]    気絶値*\n" or "\n[2]    気絶値*\n"),
				(HunterBattle_Selected[3] and "\n-> [3]    SPゲージの増加量*\n" or "\n[3]    SPゲージの増加量*\n"),				
				(HunterBattle_Selected[4] and "\n-> [4]    属性種類*\n" or "\n[4]    属性種類*\n"),
				(HunterBattle_Selected[5] and "\n-> [5]    物理種類*\n" or "\n[5]    物理種類*\n"),
				"\n[~]    アドレスの再取得\n",				
				"\n[←]    もどる"
			}, nil, "メインメニュー/ハンター\n\n攻撃変数の書き換え")
			if HunterBattleMenu == nil then
				temporarilyhide()
				HunterAttackParam()
    		elseif HunterBattleMenu >= 1 and HunterBattleMenu <= 5 then
				LoadNameAddress("BattleAttackParam_AttackParam")
				local count = gg.getResultsCount(9999)
				if count >= 1 then
				else			
					valueFromClass("BattleAttackParam")	
					applyoffset(0x34, gg.TYPE_DWORD)
					gg.refineNumber("0~9", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)	
					AddNameAddress("BattleAttackParam_AttackParam")
				end	
				if HunterBattleMenu == 1 then
					applyoffset(-0x24, gg.TYPE_DWORD)
					BattleAttackParam_MotionValue()
				elseif HunterBattleMenu == 2 then
					applyoffset(-0x20, gg.TYPE_DWORD)
					BattleAttackParam_StunValue()
				elseif HunterBattleMenu == 3 then
					applyoffset(-0x1C, gg.TYPE_FLOAT)
					BattleAttackParam_GaugeAdditionValue()
				elseif HunterBattleMenu == 4 then
					BattleAttackParam_ElementType()
				elseif HunterBattleMenu == 5 then
					applyoffset(0x34, gg.TYPE_DWORD)
					BattleAttackParam_HitEffectType()
				end
			elseif HunterBattleMenu == 6 then
				refresh_HunterAttackParam()
			elseif HunterBattleMenu == 7 then
				Hunter()					
			end
		end	
			-- [2-7-1] モーション値*
			BattleAttackParamMotionValue_Selected = {false, false, false}
			function BattleAttackParam_MotionValue()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterMotionValue = {"100", "1,000,000"}
				BattleAttackParamMotionValueMenu = gg.choice({
					(BattleAttackParamMotionValue_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(BattleAttackParamMotionValue_Selected[2] and "\n[ON]    10,000 倍\n" or "\n[2]    10,000 倍\n"),
					(BattleAttackParamMotionValue_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/攻撃変数の書き換え/\n\nモーション値*")
				if BattleAttackParamMotionValueMenu == nil then
					temporarilyhide()
					BattleAttackParam_MotionValue()
				elseif BattleAttackParamMotionValueMenu >= 1 and BattleAttackParamMotionValueMenu <= 3 then
					for i = 1, 3 do
						BattleAttackParamMotionValue_Selected[i] = false
					end
					BattleAttackParamMotionValue_Selected[BattleAttackParamMotionValueMenu] = true				
					if BattleAttackParamMotionValueMenu >= 1 and BattleAttackParamMotionValueMenu <= 2 then
						local chosenValue = HunterMotionValue[BattleAttackParamMotionValueMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleAttackParamMotionValueMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターのモーション値を変更 #Dword型\n\nほぼデフォ: 100\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleAttackParam_MotionValue()
				elseif BattleAttackParamMotionValueMenu == 4 then
					HunterAttackParam()
				end
			end	
			-- [2-7-1] 気絶値*
			BattleAttackParamStunValue_Selected = {false, false, false}
			function BattleAttackParam_StunValue()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterStunValue = {"100", "10,000"}
				BattleAttackParamStunValueMenu = gg.choice({
					(BattleAttackParamStunValue_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleAttackParamStunValue_Selected[2] and "\n[ON]    即麻痺\n" or "\n[2]    即麻痺\n"),
					(BattleAttackParamStunValue_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/攻撃変数の書き換え/\n\n気絶値*")
				if BattleAttackParamStunValueMenu == nil then
					temporarilyhide()
					BattleAttackParam_StunValue()
				elseif BattleAttackParamStunValueMenu >= 1 and BattleAttackParamStunValueMenu <= 3 then
					for i = 1, 3 do
						BattleAttackParamStunValue_Selected[i] = false
					end
					BattleAttackParamStunValue_Selected[BattleAttackParamStunValueMenu] = true				
					if BattleAttackParamStunValueMenu >= 1 and BattleAttackParamStunValueMenu <= 2 then
						local chosenValue = HunterStunValue[BattleAttackParamStunValueMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleAttackParamStunValueMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの気絶値を変更 #Dword型\n\nデフォ: 0\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleAttackParam_StunValue()
				elseif BattleAttackParamStunValueMenu == 4 then
					HunterAttackParam()
				end
			end	
			-- [2-7-1] SPゲージの増加量*
			BattleAttackParamGaugeAdditionValue_Selected = {false, false, false}
			function BattleAttackParam_GaugeAdditionValue()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterGaugeAdditionValue = {"10", "10,000"}
				BattleAttackParamGaugeAdditionValueMenu = gg.choice({
					(BattleAttackParamGaugeAdditionValue_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
					(BattleAttackParamGaugeAdditionValue_Selected[2] and "\n[ON]    即フルチャージ\n" or "\n[2]    即フルチャージ\n"),
					(BattleAttackParamGaugeAdditionValue_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),						
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/攻撃変数の書き換え/\n\nSPゲージの増加量*")
				if BattleAttackParamGaugeAdditionValueMenu == nil then
					temporarilyhide()
					BattleAttackParam_GaugeAdditionValue()
				elseif BattleAttackParamGaugeAdditionValueMenu >= 1 and BattleAttackParamGaugeAdditionValueMenu <= 3 then
					for i = 1, 3 do
						BattleAttackParamGaugeAdditionValue_Selected[i] = false
					end
					BattleAttackParamGaugeAdditionValue_Selected[BattleAttackParamGaugeAdditionValueMenu] = true				
					if BattleAttackParamGaugeAdditionValueMenu >= 1 and BattleAttackParamGaugeAdditionValueMenu <= 2 then
						local chosenValue = HunterGaugeAdditionValue[BattleAttackParamGaugeAdditionValueMenu]
						gg.editAll(chosenValue, gg.TYPE_FLOAT)
					elseif BattleAttackParamGaugeAdditionValueMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターのSPゲージの増加量を変更 #Float型\n\nほぼデフォ: 10\n[  0 ~   ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_FLOAT)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleAttackParam_GaugeAdditionValue()
				elseif BattleAttackParamGaugeAdditionValueMenu == 4 then
					HunterAttackParam()
				end
			end	
			-- [2-7-4] 属性種類*
			BattleAttackParamElementType_Selected = {false, false, false, false, false, false, false, false, false, false, false}
			function BattleAttackParam_ElementType()
				gg.getResults(9999)
				gg.setVisible(false)
				local BattleAttackParamElementTypeMenu = gg.choice({
					(BattleAttackParamElementType_Selected[1] and "\n[ON]    なし\n" or "\n[1]    なし\n"),
					(BattleAttackParamElementType_Selected[2] and "\n[ON]    火\n" or "\n[2]    火\n"),
					(BattleAttackParamElementType_Selected[3] and "\n[ON]    水\n" or "\n[3]    水\n"),
					(BattleAttackParamElementType_Selected[4] and "\n[ON]    雷\n" or "\n[4]    雷\n"),
					(BattleAttackParamElementType_Selected[5] and "\n[ON]    氷\n" or "\n[5]    氷\n"),
					(BattleAttackParamElementType_Selected[6] and "\n[ON]    龍\n" or "\n[6]    龍\n"),
					(BattleAttackParamElementType_Selected[7] and "\n[ON]    毒\n" or "\n[7]    毒\n"),
					(BattleAttackParamElementType_Selected[8] and "\n[ON]    麻痺\n" or "\n[8]    麻痺\n"),
					(BattleAttackParamElementType_Selected[9] and "\n[ON]    睡眠\n" or "\n[9]    睡眠\n"),
					(BattleAttackParamElementType_Selected[10] and "\n[ON]    爆破\n" or "\n[10]    爆破\n"),	
					(BattleAttackParamElementType_Selected[11] and "\n[ON]    任意の値\n" or "\n[11]    任意の値\n"),				
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/攻撃変数の書き換え/\n\n属性種類*")
				if BattleAttackParamElementTypeMenu == nil then
					temporarilyhide()
					BattleAttackParam_ElementType()
				elseif BattleAttackParamElementTypeMenu >= 1 and BattleAttackParamElementTypeMenu <= 11 then
					for i = 1, 11 do
						BattleAttackParamElementType_Selected[i] = false
					end
					BattleAttackParamElementType_Selected[BattleAttackParamElementTypeMenu] = true				
					if BattleAttackParamElementTypeMenu >= 1 and BattleAttackParamElementTypeMenu <= 10 then
						local chosenValue = tostring(BattleAttackParamElementTypeMenu) - 1
							gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleAttackParamElementTypeMenu == 11 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの攻撃の属性種類を変更 #Dword型\n\n0: なし (デフォ),     1: 火,        2: 水,        3: 雷,        4: 氷,        5: 龍, \n   6: 毒,        7: 麻痺,       8: 睡眠,       9: 爆破\n[  0 ~ 9  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleAttackParam_ElementType()
				elseif BattleAttackParamElementTypeMenu == 12 then
					HunterAttackParam()
				end
			end	
			-- [2-7-4] 物理種類*
			BattleAttackParamHitEffectType_Selected = {false, false, false, false, false, false, false}
			function BattleAttackParam_HitEffectType()
				gg.getResults(9999)
				gg.setVisible(false)
				local BattleAttackParamHitEffectTypeMenu = gg.choice({
					(BattleAttackParamHitEffectType_Selected[1] and "\n[ON]    なし\n" or "\n[1]    なし\n"),
					(BattleAttackParamHitEffectType_Selected[2] and "\n[ON]    斬撃\n" or "\n[2]    斬撃\n"),
					(BattleAttackParamHitEffectType_Selected[3] and "\n[ON]    打撃\n" or "\n[3]    打撃\n"),
					(BattleAttackParamHitEffectType_Selected[4] and "\n[ON]    射撃\n" or "\n[4]    射撃\n"),
					(BattleAttackParamHitEffectType_Selected[5] and "\n[ON]    スラスト\n" or "\n[5]    スラスト\n"),
					(BattleAttackParamHitEffectType_Selected[6] and "\n[ON]    ランス\n" or "\n[6]    ランス\n"),
					(BattleAttackParamHitEffectType_Selected[7] and "\n[ON]    任意の値\n" or "\n[7]    任意の値\n"),				
					"\n[←]    もどる"
				}, nil, "メインメニュー/ハンター/攻撃変数の書き換え/\n\n物理種類*")
				if BattleAttackParamHitEffectTypeMenu == nil then
					temporarilyhide()
					BattleAttackParam_HitEffectType()
				elseif BattleAttackParamHitEffectTypeMenu >= 1 and BattleAttackParamHitEffectTypeMenu <= 7 then
					for i = 1, 7 do
						BattleAttackParamHitEffectType_Selected[i] = false
					end
					BattleAttackParamHitEffectType_Selected[BattleAttackParamHitEffectTypeMenu] = true				
					if BattleAttackParamHitEffectTypeMenu >= 1 and BattleAttackParamHitEffectTypeMenu <= 6 then
						local chosenValue = tostring(BattleAttackParamHitEffectTypeMenu) - 1
							gg.editAll(chosenValue, gg.TYPE_DWORD)
					elseif BattleAttackParamHitEffectTypeMenu == 7 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "ハンターの攻撃の物理種類を変更 #Dword型\n\n0: なし,     1: 斬撃,        2: 打撃,        3: 射撃,        4: スラスト,        5: ランス\n[  0 ~ 5  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
								temporarilyhide()
							end
						end						
					end
					BattleAttackParam_HitEffectType()
				elseif BattleAttackParamHitEffectTypeMenu == 8 then
					HunterAttackParam()
				end
			end	
			-- [2-7-5] アドレスの再取得
			function refresh_HunterAction()
			    local name1 = {"_Qapplyfix_BattleAttackParam", "_Abaseaccuracy_BattleAttackParam", "BattleAttackParam_AttackParam"}
				local Prompt = gg.prompt({
				    "\n[1]    モーション値*/n[2]    気絶値*\n[3]    SPゲージの増加量*\n[4]    属性種類*\n[5]    物理種類*"
				}, {false}, {"checkbox"})
				if Prompt == nil then
					temporarilyhide()
					HunterAttackParam()
				end
				if Prompt[1] == true then
					DeleteNameAddress(name1[1])
					DeleteNameAddress(name1[2])
					DeleteNameAddress(name1[3])
					valueFromClass("BattleAttackParam")		
					BattleAttackParamMotionValue_Selected = {false, false, false}
					BattleAttackParamStunValue_Selected = {false, false, false}
					BattleAttackParamGaugeAdditionValue_Selected = {false, false, false}
					BattleAttackParamElementType_Selected = {false, false, false, false, false, false, false, false, false, false, false}
					BattleAttackParamHitEffectType_Selected = {false, false, false, false, false, false, false}					
				end
				HunterAttackParam()
			end	
	-- [3] モンスター
	Monster_currentA = 1
	Monster_SelectedA = {"\n[2]    部位破壊 容易化\n", "\n[ON]    部位破壊 容易化\n", "[OFF]    部位破壊 容易化\n"}  
	function Monster()
		IncludeCheckAndTrueFalseA("_MotionController")
		IncludeCheckAndTrueFalseB("BattleConfig_PartBreak")
		IncludeCheckAndTrueFalseC("_BodyLengthEntityData")	
		IncludeCheckAndTrueFalseD("_ElementalWeaknessChart")
		IncludeCheckAndTrueFalseE("MarkedMonsterProto")		
		Monster_Selected = {A, B, C, D, A, E}	
		gg.setVisible(false)	
		HunterMenu = gg.choice({
			(Monster_Selected[1] and "\n-> [1]    動作\n" or "\n[1]    動作\n"),	
			Monster_SelectedA[Monster_currentA],
			(Monster_Selected[3] and "\n-> [3]    体の大きさ\n" or "\n[3]    体の大きさ\n"),
			(Monster_Selected[4] and "\n-> [4]    弱点の有無\n" or "\n[4]    弱点の有無\n"),		
			(Monster_Selected[5] and "\n-> [5]    耐性\n" or "\n[5]    耐性\n"),		
			(Monster_Selected[6] and "\n-> [6]    捕獲したモンスター (容姿変更)\n" or "\n[6]    捕獲したモンスター (容姿変更)\n"),	
			"\n[~]    アドレスの再取得\n",		
			"\n[←]    もどる"
		}, nil, "メインメニュー/\n\nモンスター")
		if HunterMenu == nil then
			temporarilyhide()	
			Monster()
		elseif HunterMenu == 1 then		
			MonsterMotion()
		elseif HunterMenu == 2 then	
			LoadNameAddress("BattleConfig_PartBreak")
			local count = gg.getResultsCount()
			if count >= 1 then
			else				
				valueFromClass("BattleConfig")	
				applyoffset(0x58, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x14, gg.TYPE_FLOAT)
				gg.refineNumber("0.1~0.2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
				AddNameAddress("BattleConfig_PartBreak")
			end	
			gg.getResults(9999)
			if Monster_currentA == 1 or Monster_currentA == 3 then
				gg.editAll("1,000,000,000", gg.TYPE_FLOAT)
				applyoffset(-0x4, gg.TYPE_DWORD)
				gg.editAll("999,999,999", gg.TYPE_DWORD)		
				Monster_currentA = 2
			elseif Monster_currentA == 2 then
				gg.editAll("0.15000000596", gg.TYPE_FLOAT)
				applyoffset(-0x4, gg.TYPE_DWORD)
				gg.editAll("100", gg.TYPE_DWORD)
				Monster_currentA = 3
			end
			Monster()
		elseif HunterMenu == 3 then	
			BodyLengthEntityData_BodyLength()
		elseif HunterMenu == 4 then	
			MonsterWeaknessChart()
		elseif HunterMenu == 5 then	
			MonsterResistance()		
		elseif HunterMenu == 6 then		
			MarkedMonsterProto_MonsterType()
		elseif HunterMenu == 7 then		
		    refresh_Monster()
		elseif HunterMenu == 8 then		
			Main()
		end
	end
		MonsterMotion_currentA = 1
		MonsterMotion_SelectedA = {"\n[2]    攻撃 排除\n", "\n[ON]    攻撃 排除\n", "\n[OFF]    攻撃 排除\n"}
		-- [3-1] 動作
		function MonsterMotion()
			IncludeCheckAndTrueFalseA("_MotionController")
			MonsterMotion_Selected = {A}
			gg.setVisible(false)
			MonsterMotionMenu = gg.choice({
				(MonsterMotion_Selected[1] and "\n-> [1]    速度\n" or "\n[1]    速度\n"),
				MonsterMotion_SelectedA[MonsterMotion_currentA],
				"\n[~]    アドレスの再取得\n",
				"\n[←]    もどる"
			}, nil, "メインメニュー/モンスター\n\n動作")
			if MonsterMotionMenu == nil then
				temporarilyhide()
				MonsterMotion()
			elseif MonsterMotionMenu == 1 then	
				LoadNameAddress("_MonsterSpeed")
				local count = gg.getResultsCount()
				if count >= 1 then
				else
					valueFromClass("MotionController")
					applyoffset(0x28, gg.TYPE_FLOAT)
					gg.refineNumber("0~100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("_MonsterSpeed")
					gg.getResults(9999)
					gg.refineNumber("0.5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
					if count == 1 then
						AddNameAddress("_HunterSpeed")
					end				
					LoadNameAddress("_MonsterSpeed")
				end
				MotionController_MonsterMotionSpeed()
			elseif MonsterMotionMenu == 2 then
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if MonsterMotion_currentA == 1 or MonsterMotion_currentA == 3 then
                    gg.setValues({{address = start + 0x193D8CC, flags = 4, value = "~A8 MOV W0, #0x1;"}})
                    MonsterMotion_currentA = 2
                elseif MonsterMotion_currentA == 2 then
                    gg.setValues({{address = start + 0x193D8CC, flags = 4, value = "~A8 MOV W0, WZR;"}})
                    MonsterMotion_currentA = 3
                end		
				MonsterMotion()
			elseif MonsterMotionMenu == 3 then
				refresh_MonsterMotion()
			elseif MonsterMotionMenu == 4 then
				Monster()
			end
		end
			-- [3-1-1] 速度
			MotionControllerMonsterMotionSpeed_Selected = {false, false, false}
			function MotionController_MonsterMotionSpeed()
				gg.getResults(9999)
				gg.setVisible(false)
				local HunterMonsterMotionSpeed = {"1", "0", "5"}
				MotionControllerMonsterMotionSpeedMenu = gg.choice({
					(MotionControllerMonsterMotionSpeed_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(MotionControllerMonsterMotionSpeed_Selected[2] and "\n[ON]    凍結\n" or "\n[2]    凍結\n"),
					(MotionControllerMonsterMotionSpeed_Selected[3] and "\n[ON]    5 倍\n" or "\n[3]    5 倍\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/モンスター/動作/\n\n速度")
				if MotionControllerMonsterMotionSpeedMenu == nil then
					temporarilyhide()
					MotionController_MonsterMotionSpeed()
				elseif MotionControllerMonsterMotionSpeedMenu >= 1 and MotionControllerMonsterMotionSpeedMenu <= 3 then
					for i = 1, 3 do
						MotionControllerMonsterMotionSpeed_Selected[i] = false
					end
					MotionControllerMonsterMotionSpeed_Selected[MotionControllerMonsterMotionSpeedMenu] = true				
					if MotionControllerMonsterMotionSpeedMenu >= 1 and MotionControllerMonsterMotionSpeedMenu <= 2 then
						local chosenValue = HunterMonsterMotionSpeed[MotionControllerMonsterMotionSpeedMenu]
						gg.editAll(chosenValue, gg.TYPE_FLOAT)
					elseif MotionControllerMonsterMotionSpeedMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "モンスターの動作速度を変更 #Flloat型\n\n割合, デフォ: 1\n[  0 ~  100  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_FLOAT)									
								break
							else
								temporarilyhide()
							end
						end					
					end
					MotionController_MonsterMotionSpeed()
				elseif MotionControllerMonsterMotionSpeedMenu == 4 then
					MonsterMotion()
				end
			end	
			-- [3-1-2] アドレス再取得
			function refresh_MonsterMotion()
				local name1 = {"_Qapplyfix_MotionController", "_Abaseaccuracy_MotionController", "_MonsterSpeed"}
				local Prompt = gg.prompt({
					"\n[1]    速度"
				}, {false}, {"checkbox"})
				if Prompt == nil then
					temporarilyhide()
					MonsterMotion()
				end
				if Prompt[1] == true then
					DeleteNameAddress(name1[1])
					DeleteNameAddress(name1[2])
					DeleteNameAddress(name1[3])
					valueFromClass("MotionController")	
					MotionControllerMonsterMotionSpeed_Selected = {false, false, false}
				end
				MonsterMotion()
			end	
		-- [3-3] 体の大きさ
		BodyLengthEntityDataBodyLength_Selected = {false, false, false, false}
		function BodyLengthEntityData_BodyLength()
			gg.getResults(9999)
			gg.setVisible(false)
			local MonsterBodyLenth = {"1", "0.5", "2"}
			BodyLengthEntityDataBodyLengthMenu = gg.choice({
				(BodyLengthEntityDataBodyLength_Selected[1] and "\n[ON]    ほぼデフォルト\n" or "\n[1]    ほぼデフォルト\n"),
				(BodyLengthEntityDataBodyLength_Selected[2] and "\n[ON]    0.5 倍\n" or "\n[2]    0.5 倍\n"),
				(BodyLengthEntityDataBodyLength_Selected[3] and "\n[ON]    2.0 倍\n" or "\n[3]    2.0 倍\n"),
				(BodyLengthEntityDataBodyLength_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),
				"\n[~]    アドレスの再取得\n",				
				"\n[←]    もどる"
			}, nil, "メインメニュー/モンスター/\n\n体の大きさ")
			if BodyLengthEntityDataBodyLengthMenu == nil then
				temporarilyhide()
				BodyLengthEntityData_BodyLength()
			elseif BodyLengthEntityDataBodyLengthMenu >= 1 and BodyLengthEntityDataBodyLengthMenu <= 4 then
				for i = 1, 4 do
					BodyLengthEntityDataBodyLength_Selected[i] = false
				end
				BodyLengthEntityDataBodyLength_Selected[BodyLengthEntityDataBodyLengthMenu] = true	
				valueFromClass("BodyLengthEntityData")	
				applyoffset(0x10, gg.TYPE_FLOAT)
				gg.refineNumber("0~100", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
				gg.getResults(9999)
				if BodyLengthEntityDataBodyLengthMenu >= 1 and BodyLengthEntityDataBodyLengthMenu <= 3 then
					local chosenValue = MonsterBodyLenth[BodyLengthEntityDataBodyLengthMenu]
					gg.editAll(chosenValue, gg.TYPE_FLOAT)					
				elseif BodyLengthEntityDataBodyLengthMenu == 4 then
					while true do
						gg.setVisible(false)
						local val = gg.prompt({[1] = "モンスターの体の大きさを変更 #Float型\n\n割合, ほぼデフォ: 1\n[  0 ~ 100  ]"}, {[1] = ""}, {"number"})
						if val and val[1] ~= nil then
							gg.editAll(val[1], gg.TYPE_FLOAT)									
							break
						else
						temporarilyhide()
						end
					end
				end
				BodyLengthEntityData_BodyLength()
			elseif BodyLengthEntityDataBodyLengthMenu == 5 then
				local name1 = {"_Qapplyfix_BodyLengthEntityData", "_Abaseaccuracy_BodyLengthEntityData"}
				DeleteNameAddress(name1[1])
				DeleteNameAddress(name1[2])
				valueFromClass("BodyLengthEntityData")
				BodyLengthEntityDataBodyLength_Selected = {false, false, false, false}
				BodyLengthEntityData_BodyLength()
			elseif BodyLengthEntityDataBodyLengthMenu == 6 then
				Monster()
			end
		end	
		-- [3-4] 弱点の有無
		MonsterWeaknessChart_Selected = {false, false, false, false, false, false, false, false, false}
		MonsterWeaknesElementTypeFire_Selected = {false, false}
		MonsterWeaknesElementTypeWater_Selected = {false, false}
		MonsterWeaknesElementTypeThunder_Selected = {false, false}
		MonsterWeaknesElementTypeIce_Selected = {false, false}
		MonsterWeaknesElementTypeDragon_Selected = {false, false}
		MonsterWeaknesElementTypePoison_Selected = {false, false}
		MonsterWeaknesElementTypeParalysis_Selected = {false, false}
		MonsterWeaknesElementTypeSleep_Selected = {false, false}
		function MonsterWeaknessChart()
			IncludeCheckAndTrueFalseA("_ElementalWeaknessChart")
			gg.setVisible(false)
			MonsterWeaknessChartMenu = gg.choice({
				(MonsterWeaknessChart_Selected[1] and "\n-> [1]    火\n" or "\n[1]    火\n"),
				(MonsterWeaknessChart_Selected[2] and "\n-> [2]    水\n" or "\n[2]    水\n"),
				(MonsterWeaknessChart_Selected[3] and "\n-> [3]    雷\n" or "\n[3]    雷\n"),
				(MonsterWeaknessChart_Selected[4] and "\n-> [4]    氷\n" or "\n[4]    氷\n"),		
				(MonsterWeaknessChart_Selected[5] and "\n-> [5]    龍\n" or "\n[5]    龍\n"),
				(MonsterWeaknessChart_Selected[6] and "\n-> [6]    毒\n" or "\n[6]    毒\n"),
				(MonsterWeaknessChart_Selected[7] and "\n-> [7]    麻痺\n" or "\n[7]    麻痺\n"),
				(MonsterWeaknessChart_Selected[8] and "\n-> [8]    睡眠\n" or "\n[8]    睡眠\n"),
				(MonsterWeaknessChart_Selected[9] and "\n-> [9]    全部追加\n" or "\n[9]    全部追加\n"),			
				"\n[←]    もどる"
			}, nil, "メインメニュー/モンスター\n\n弱点の有無")
			if MonsterWeaknessChartMenu == nil then
				temporarilyhide()
				MonsterWeaknessChart()
			elseif MonsterWeaknessChartMenu >= 1 and MonsterWeaknessChartMenu <= 9 then	
				MonsterWeaknessChart_Selected[MonsterWeaknessChartMenu] = true
				valueFromClass("ElementalWeaknessChart")
				if MonsterWeaknessChartMenu == 1 then
					applyoffset(0x10, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)	
						MonsterWeaknesElementTypeFireMenu = gg.choice({
							(MonsterWeaknesElementTypeFire_Selected[1] and "\n[ON]    追加\n" or "\n[OFF]    追加\n"),
							(MonsterWeaknesElementTypeFire_Selected[2] and "\n[ON]    削除\n" or "\n[OFF]    削除\n")
						}, nil,"メインメニュー/モンスター/弱点の有無/\n\n火\n")
						if MonsterWeaknesElementTypeFireMenu == nil then
						elseif MonsterWeaknesElementTypeFireMenu >= 1 and MonsterWeaknesElementTypeFireMenu <= 2 then
							for i = 1, 2 do
								MonsterWeaknesElementTypeFire_Selected[i] = false
							end
							MonsterWeaknesElementTypeFire_Selected[MonsterWeaknesElementTypeFireMenu] = true	
							if MonsterWeaknesElementTypeFireMenu == 1 then
								gg.editAll("1", gg.TYPE_DWORD)
							elseif MonsterWeaknesElementTypeFireMenu == 2 then
								gg.editAll("0", gg.TYPE_DWORD)
							end
							break
						end	
					end
				elseif MonsterWeaknessChartMenu == 2 then
					applyoffset(0x14, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)	
						MonsterWeaknesElementTypeWaterMenu = gg.choice({
							(MonsterWeaknesElementTypeWater_Selected[1] and "\n[ON]    追加\n" or "\n[OFF]    追加\n"),
							(MonsterWeaknesElementTypeWater_Selected[2] and "\n[ON]    削除\n" or "\n[OFF]    削除\n")
						}, nil,"メインメニュー/モンスター/弱点の有無/\n\n水\n")
						if MonsterWeaknesElementTypeWaterMenu == nil then
						elseif MonsterWeaknesElementTypeWaterMenu >= 1 and MonsterWeaknesElementTypeWaterMenu <= 2 then
							for i = 1, 2 do
								MonsterWeaknesElementTypeWater_Selected[i] = false
							end
							MonsterWeaknesElementTypeWater_Selected[MonsterWeaknesElementTypeWaterMenu] = true	
							if MonsterWeaknesElementTypeWaterMenu == 1 then
								gg.editAll("1", gg.TYPE_DWORD)
							elseif MonsterWeaknesElementTypeWaterMenu == 2 then
								gg.editAll("0", gg.TYPE_DWORD)
							end
							break
						end	
					end	
				elseif MonsterWeaknessChartMenu == 3 then
					applyoffset(0x18, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)	
						MonsterWeaknesElementTypeThunderMenu = gg.choice({
							(MonsterWeaknesElementTypeThunder_Selected[1] and "\n[ON]    追加\n" or "\n[OFF]    追加\n"),
							(MonsterWeaknesElementTypeThunder_Selected[2] and "\n[ON]    削除\n" or "\n[OFF]    削除\n")
						}, nil,"メインメニュー/モンスター/弱点の有無/\n\n雷\n")
						if MonsterWeaknesElementTypeThunderMenu == nil then
						elseif MonsterWeaknesElementTypeThunderMenu >= 1 and MonsterWeaknesElementTypeThunderMenu <= 2 then
							for i = 1, 2 do
								MonsterWeaknesElementTypeThunder_Selected[i] = false
							end
							MonsterWeaknesElementTypeThunder_Selected[MonsterWeaknesElementTypeThunderMenu] = true	
							if MonsterWeaknesElementTypeThunderMenu == 1 then
								gg.editAll("1", gg.TYPE_DWORD)
							elseif MonsterWeaknesElementTypeThunderMenu == 2 then
								gg.editAll("0", gg.TYPE_DWORD)
							end
							break
						end	
					end					
				elseif MonsterWeaknessChartMenu == 4 then
					applyoffset(0x1C, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)	
						MonsterWeaknesElementTypeIceMenu = gg.choice({
							(MonsterWeaknesElementTypeIce_Selected[1] and "\n[ON]    追加\n" or "\n[OFF]    追加\n"),
							(MonsterWeaknesElementTypeIce_Selected[2] and "\n[ON]    削除\n" or "\n[OFF]    削除\n")
						}, nil,"メインメニュー/モンスター/弱点の有無/\n\n氷\n")
						if MonsterWeaknesElementTypeIceMenu == nil then
						elseif MonsterWeaknesElementTypeIceMenu >= 1 and MonsterWeaknesElementTypeIceMenu <= 2 then
							for i = 1, 2 do
								MonsterWeaknesElementTypeIce_Selected[i] = false
							end
							MonsterWeaknesElementTypeIce_Selected[MonsterWeaknesElementTypeIceMenu] = true	
							if MonsterWeaknesElementTypeIceMenu == 1 then
								gg.editAll("1", gg.TYPE_DWORD)
							elseif MonsterWeaknesElementTypeIceMenu == 2 then
								gg.editAll("0", gg.TYPE_DWORD)
							end
							break
						end	
					end				
				elseif MonsterWeaknessChartMenu == 5 then
					applyoffset(0x20, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)	
						MonsterWeaknesElementTypeDragonMenu = gg.choice({
							(MonsterWeaknesElementTypeDragon_Selected[1] and "\n[ON]    追加\n" or "\n[OFF]    追加\n"),
							(MonsterWeaknesElementTypeDragon_Selected[2] and "\n[ON]    削除\n" or "\n[OFF]    削除\n")
						}, nil,"メインメニュー/モンスター/弱点の有無/\n\n龍\n")
						if MonsterWeaknesElementTypeDragonMenu == nil then
						elseif MonsterWeaknesElementTypeDragonMenu >= 1 and MonsterWeaknesElementTypeDragonMenu <= 2 then
							for i = 1, 2 do
								MonsterWeaknesElementTypeDragon_Selected[i] = false
							end
							MonsterWeaknesElementTypeDragon_Selected[MonsterWeaknesElementTypeDragonMenu] = true	
							if MonsterWeaknesElementTypeDragonMenu == 1 then
								gg.editAll("1", gg.TYPE_DWORD)
							elseif MonsterWeaknesElementTypeDragonMenu == 2 then
								gg.editAll("0", gg.TYPE_DWORD)
							end
							break
						end	
					end				
				elseif MonsterWeaknessChartMenu == 6 then
					applyoffset(0x24, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)	
						MonsterWeaknesElementTypePoisonMenu = gg.choice({
							(MonsterWeaknesElementTypePoison_Selected[1] and "\n[ON]    追加\n" or "\n[OFF]    追加\n"),
							(MonsterWeaknesElementTypePoison_Selected[2] and "\n[ON]    削除\n" or "\n[OFF]    削除\n")
						}, nil,"メインメニュー/モンスター/弱点の有無/\n\n毒\n")
						if MonsterWeaknesElementTypePoisonMenu == nil then
						elseif MonsterWeaknesElementTypePoisonMenu >= 1 and MonsterWeaknesElementTypePoisonMenu <= 2 then
							for i = 1, 2 do
								MonsterWeaknesElementTypePoison_Selected[i] = false
							end
							MonsterWeaknesElementTypePoison_Selected[MonsterWeaknesElementTypePoisonMenu] = true	
							if MonsterWeaknesElementTypePoisonMenu == 1 then
								gg.editAll("1", gg.TYPE_DWORD)
							elseif MonsterWeaknesElementTypePoisonMenu == 2 then
								gg.editAll("0", gg.TYPE_DWORD)
							end
							break
						end	
					end			
				elseif MonsterWeaknessChartMenu == 7 then
					applyoffset(0x28, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)	
						MonsterWeaknesElementTypeParalysisMenu = gg.choice({
							(MonsterWeaknesElementTypeParalysis_Selected[1] and "\n[ON]    追加\n" or "\n[OFF]    追加\n"),
							(MonsterWeaknesElementTypeParalysis_Selected[2] and "\n[ON]    削除\n" or "\n[OFF]    削除\n")
						}, nil,"メインメニュー/モンスター/弱点の有無/\n\n麻痺\n")
						if MonsterWeaknesElementTypeParalysisMenu == nil then
						elseif MonsterWeaknesElementTypeParalysisMenu >= 1 and MonsterWeaknesElementTypeParalysisMenu <= 2 then
							for i = 1, 2 do
								MonsterWeaknesElementTypeParalysis_Selected[i] = false
							end
							MonsterWeaknesElementTypeParalysis_Selected[MonsterWeaknesElementTypeParalysisMenu] = true	
							if MonsterWeaknesElementTypeParalysisMenu == 1 then
								gg.editAll("1", gg.TYPE_DWORD)
							elseif MonsterWeaknesElementTypeParalysisMenu == 2 then
								gg.editAll("0", gg.TYPE_DWORD)
							end
							break
						end	
					end					
				elseif MonsterWeaknessChartMenu == 8 then
					applyoffset(0x2C, gg.TYPE_DWORD)
					while true do
						gg.setVisible(false)	
						MonsterWeaknesElementTypeSleepMenu = gg.choice({
							(MonsterWeaknesElementTypeSleep_Selected[1] and "\n[ON]    追加\n" or "\n[OFF]    追加\n"),
							(MonsterWeaknesElementTypeSleep_Selected[2] and "\n[ON]    削除\n" or "\n[OFF]    削除\n")
						}, nil,"メインメニュー/モンスター/弱点の有無/\n\n睡眠\n")
						if MonsterWeaknesElementTypeSleepMenu == nil then
						elseif MonsterWeaknesElementTypeSleepMenu >= 1 and MonsterWeaknesElementTypeSleepMenu <= 2 then
							for i = 1, 2 do
								MonsterWeaknesElementTypeSleep_Selected[i] = false
							end
							MonsterWeaknesElementTypeSleep_Selected[MonsterWeaknesElementTypeSleepMenu] = true	
							if MonsterWeaknesElementTypeSleepMenu == 1 then
								gg.editAll("1", gg.TYPE_DWORD)
							elseif MonsterWeaknesElementTypeSleepMenu == 2 then
								gg.editAll("0", gg.TYPE_DWORD)
							end
							break
						end	
					end				
				elseif MonsterWeaknessChartMenu == 9 then
					applyoffset(0x10, gg.TYPE_DWORD)
					gg.editAll("1", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("1", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("1", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("1", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("1", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("1", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("1", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("1", gg.TYPE_DWORD)
				end
				MonsterWeaknessChart()
			elseif MonsterWeaknessChartMenu == 10 then
				Monster()
			end
		end				
		-- [3-5] 耐性
		MonsterResistance_Selected = {false, false, false, false}
		function MonsterResistance()
			gg.setVisible(false)
			MonsterResistanceMenu = gg.choice({
				(MonsterResistance_Selected[1] and "\n-> [1]    毒\n" or "\n[1]    毒\n"),
				(MonsterResistance_Selected[2] and "\n-> [2]    麻痺\n" or "\n[2]    麻痺\n"),
				(MonsterResistance_Selected[3] and "\n-> [3]    気絶\n" or "\n[3]    気絶\n"),
				(MonsterResistance_Selected[4] and "\n-> [4]    睡眠\n" or "\n[4]    睡眠\n"),				
				"\n[←]    もどる"
			}, nil, "メインメニュー/モンスター\n\n耐性")
			if MonsterResistanceMenu == nil then
				temporarilyhide()
				MonsterResistance()
			elseif MonsterResistanceMenu >= 1 and MonsterResistanceMenu <= 4 then	
				MonsterResistance_Selected[MonsterResistanceMenu] = true
				valueFromClass("BattleConfig")
				applyoffset(0x70, gg.TYPE_QWORD)
				MoveThePointer()
				if MonsterResistanceMenu == 1 then
					applyoffset(0x10, gg.TYPE_DWORD)
					gg.refineNumber("0~10,000", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					BattleConfig_PoisonResistance()
				elseif MonsterResistanceMenu == 2 then
					applyoffset(0x14, gg.TYPE_DWORD)
					BattleConfig_ParalysisResistance()
				elseif MonsterResistanceMenu == 3 then
					applyoffset(0x18, gg.TYPE_DWORD)
					BattleConfig_StunResistance()
				elseif MonsterResistanceMenu == 4 then
					applyoffset(0x1C, gg.TYPE_DWORD)
					BattleConfig_SleepResistance()
				end
			elseif MonsterResistanceMenu == 5 then
				Monster()
			end
		end
			-- [3-5-1] 毒
			BattleConfigPoisonResistance_Selected = {false, false, false}
			function BattleConfig_PoisonResistance()
				gg.getResults(9999)
				gg.setVisible(false)
				local MonsterPoisonResistance = {"100", "0"}
				BattleConfigPoisonResistanceMenu = gg.choice({
					(BattleConfigPoisonResistance_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigPoisonResistance_Selected[2] and "\n[ON]    排除\n" or "\n[2]    排除\n"),
					(BattleConfigPoisonResistance_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/モンスター/耐性/\n\n毒")
				if BattleConfigPoisonResistanceMenu == nil then
					temporarilyhide()
					BattleConfig_PoisonResistance()
				elseif BattleConfigPoisonResistanceMenu >= 1 and BattleConfigPoisonResistanceMenu <= 3 then
					for i = 1, 3 do
						BattleConfigPoisonResistance_Selected[i] = false
					end
					BattleConfigPoisonResistance_Selected[BattleConfigPoisonResistanceMenu] = true	
					if BattleConfigPoisonResistanceMenu >= 1 and BattleConfigPoisonResistanceMenu <= 2 then
						local chosenValue = MonsterPoisonResistance[BattleConfigPoisonResistanceMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)					
					elseif BattleConfigPoisonResistanceMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "モンスターの毒耐性を変更 #Dword型\n\nデフォ: 100\n[  0 ~ 10,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
							temporarilyhide()
							end
						end
					end
					BattleConfig_PoisonResistance()
				elseif BattleConfigPoisonResistanceMenu == 4 then
					MonsterResistance()
				end
			end	
			-- [3-5-2] 麻痺
			BattleConfigParalysisResistance_Selected = {false, false, false}
			function BattleConfig_ParalysisResistance()
				gg.getResults(9999)
				gg.setVisible(false)
				local MonsterParalysisResistance = {"100", "0"}
				BattleConfigParalysisResistanceMenu = gg.choice({
					(BattleConfigParalysisResistance_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigParalysisResistance_Selected[2] and "\n[ON]    排除\n" or "\n[2]    排除\n"),
					(BattleConfigParalysisResistance_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/モンスター/耐性/\n\n麻痺")
				if BattleConfigParalysisResistanceMenu == nil then
					temporarilyhide()
					BattleConfig_ParalysisResistance()
				elseif BattleConfigParalysisResistanceMenu >= 1 and BattleConfigParalysisResistanceMenu <= 3 then
					for i = 1, 3 do
						BattleConfigParalysisResistance_Selected[i] = false
					end
					BattleConfigParalysisResistance_Selected[BattleConfigParalysisResistanceMenu] = true	
					if BattleConfigParalysisResistanceMenu >= 1 and BattleConfigParalysisResistanceMenu <= 2 then
						local chosenValue = MonsterParalysisResistance[BattleConfigParalysisResistanceMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)					
					elseif BattleConfigParalysisResistanceMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "モンスターの麻痺耐性を変更 #Dword型\n\nデフォ: 100\n[  0 ~ 10,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
							temporarilyhide()
							end
						end
					end
					BattleConfig_ParalysisResistance()
				elseif BattleConfigParalysisResistanceMenu == 4 then
					MonsterResistance()
				end
			end	
			-- [3-5-3] 気絶
			BattleConfigStunResistance_Selected = {false, false, false}
			function BattleConfig_StunResistance()
				gg.getResults(9999)
				gg.setVisible(false)
				local MonsterStunResistance = {"100", "0"}
				BattleConfigStunResistanceMenu = gg.choice({
					(BattleConfigStunResistance_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigStunResistance_Selected[2] and "\n[ON]    排除\n" or "\n[2]    排除\n"),
					(BattleConfigStunResistance_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/モンスター/耐性/\n\n気絶")
				if BattleConfigStunResistanceMenu == nil then
					temporarilyhide()
					BattleConfig_StunResistance()
				elseif BattleConfigStunResistanceMenu >= 1 and BattleConfigStunResistanceMenu <= 3 then
					for i = 1, 3 do
						BattleConfigStunResistance_Selected[i] = false
					end
					BattleConfigStunResistance_Selected[BattleConfigStunResistanceMenu] = true	
					if BattleConfigStunResistanceMenu >= 1 and BattleConfigStunResistanceMenu <= 2 then
						local chosenValue = MonsterStunResistance[BattleConfigStunResistanceMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)					
					elseif BattleConfigStunResistanceMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "モンスターの気絶耐性を変更 #Dword型\n\nデフォ: 100\n[  0 ~ 10,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
							temporarilyhide()
							end
						end
					end
					BattleConfig_StunResistance()
				elseif BattleConfigStunResistanceMenu == 4 then
					MonsterResistance()
				end
			end	
			-- [3-5-4] 睡眠
			BattleConfigSleepResistance_Selected = {false, false, false}
			function BattleConfig_SleepResistance()
				gg.getResults(9999)
				gg.setVisible(false)
				local MonsterSleepResistance = {"100", "0"}
				BattleConfigSleepResistanceMenu = gg.choice({
					(BattleConfigSleepResistance_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
					(BattleConfigSleepResistance_Selected[2] and "\n[ON]    排除\n" or "\n[2]    排除\n"),
					(BattleConfigSleepResistance_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),
					"\n[←]    もどる"
				}, nil, "メインメニュー/モンスター/耐性/\n\n睡眠")
				if BattleConfigSleepResistanceMenu == nil then
					temporarilyhide()
					BattleConfig_SleepResistance()
				elseif BattleConfigSleepResistanceMenu >= 1 and BattleConfigSleepResistanceMenu <= 3 then
					for i = 1, 3 do
						BattleConfigSleepResistance_Selected[i] = false
					end
					BattleConfigSleepResistance_Selected[BattleConfigSleepResistanceMenu] = true	
					if BattleConfigSleepResistanceMenu >= 1 and BattleConfigSleepResistanceMenu <= 2 then
						local chosenValue = MonsterSleepResistance[BattleConfigSleepResistanceMenu]
						gg.editAll(chosenValue, gg.TYPE_DWORD)					
					elseif BattleConfigSleepResistanceMenu == 3 then
						while true do
							gg.setVisible(false)
							local val = gg.prompt({[1] = "モンスターの睡眠耐性を変更 #Dword型\n\nデフォ: 100\n[  0 ~ 10,000  ]"}, {[1] = ""}, {"number"})
							if val and val[1] ~= nil then
								gg.editAll(val[1], gg.TYPE_DWORD)									
								break
							else
							temporarilyhide()
							end
						end
					end
					BattleConfig_SleepResistance()
				elseif BattleConfigSleepResistanceMenu == 4 then
					MonsterResistance()
				end
			end	
		-- [3-6] 捕獲したモンスター (容姿変更)
		MarkedMonsterProtoMonsterType_Selected = {false}
		function MarkedMonsterProto_MonsterType()
			gg.getResults(9999)
			gg.setVisible(false)
			MarkedMonsterProtoMonsterTypeMenu = gg.choice({
				(MarkedMonsterProtoMonsterType_Selected[1] and "\n[ON]    任意の値\n" or "\n[1]    任意の値\n"),
				"\n[←]    もどる"
			}, nil, "メインメニュー/モンスター/\n\n捕獲したモンスター (容姿変更)")
			if MarkedMonsterProtoMonsterTypeMenu == nil then
				temporarilyhide()
				MarkedMonsterProto_MonsterType()
			elseif MarkedMonsterProtoMonsterTypeMenu == 1 then
			    valueFromClass("MarkedMonsterProto")
			    applyoffset(0x10,gg.TYPE_DWORD)
				MarkedMonsterProtoMonsterType_Selected[1] = true	
				while true do
					gg.setVisible(false)
					local val = gg.prompt({[1] = "変更するモンスターIDを入力 #Dword型\n\n[  1 ~ 33~  ]"}, {[1] = ""}, {"number"})
					if val and val[1] ~= nil then
						gg.editAll(val[1], gg.TYPE_DWORD)									
						break
					else
					    temporarilyhide()
					end
				end
			    MarkedMonsterProto_MonsterType()
	        elseif MarkedMonsterProtoMonsterTypeMenu == 2 then
				Monster()
			end		
	    end
	-- [4] マップ
	MapDisplayRange_currentA = 1
	MapDisplayRange_SelectedA = {"\n[4]    表示範囲 増加\n", "\n[ON]    表示範囲 増加\n", "\n[OFF]    表示範囲 増加\n"}
	function Map()
		IncludeCheckAndTrueFalseA("MapController_MapLoad")	
		IncludeCheckAndTrueFalseB("FieldManager_HunterAccess")	
		IncludeCheckAndTrueFalseC("FieldConfig_OtomoAccess")	
		MapMenu_Selected = {A, B, C}
		gg.setVisible(false)	
		MapMenu = gg.choice({
			(MapMenu_Selected[1] and "\n-> [1]    読み込む範囲\n" or "\n[1]    読み込む範囲\n"),	
			(MapMenu_Selected[2] and "\n-> [2]    ハンターのアクセス範囲\n" or "\n[2]    ハンターのアクセス範囲\n"),	
			(MapMenu_Selected[3] and "\n-> [3]    オトモのアクセス範囲\n" or "\n[3]    オトモのアクセス範囲\n"),
			MapDisplayRange_SelectedA[MapDisplayRange_currentA],
			"\n[←]    もどる"	
		}, nil, "メインメニュー/\n\nマップ")
		if MapMenu == nil then
			temporarilyhide()	
			Map()
		elseif MapMenu == 1 then	
			LoadNameAddress("MapController_MapLoad")
			local count = gg.getResultsCount()
			if count >= 1 then
			else
				valueFromClass("MapController")
				applyoffset(0x1C, gg.TYPE_FLOAT)
				gg.refineNumber("700", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
				applyoffset(0x7C, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x28, gg.TYPE_DOUBLE)	
				gg.refineNumber("700", gg.TYPE_DOUBLE, false, gg.SIGN_EQUAL, 0, -1, 0)
				AddNameAddress("MapController_MapLoad")
			end
			MapController_MapRadiusMeters()
		elseif MapMenu == 2 then	
			LoadNameAddress("FieldManager_HunterAccess")
			local count = gg.getResultsCount()
			if count >= 1 then
			else
				valueFromClass("FieldManager")
				applyoffset(0xA0, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x3C, gg.TYPE_FLOAT)	
				gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
				AddNameAddress("FieldManager_HunterAccess")
			end				
			FieldManager_HunterAccessRange()
		elseif MapMenu == 3 then
			LoadNameAddress("FieldConfig_OtomoAccess")
			local count = gg.getResultsCount()
			if count >= 1 then
			else
				valueFromClass("FieldConfig")
				applyoffset(0xA0, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x3C, gg.TYPE_FLOAT)	
				gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
				AddNameAddress("FieldConfig_OtomoAccess")
			end	
			FieldConfig_OtomoAccessRange()
		elseif MapMenu == 4 then	
			local start = gg.getRangesList("libil2cpp.so")[2].start
			if MapDisplayRange_currentA == 1 or MapDisplayRange_currentA == 3 then
                gg.setValues({{address = start + 0x193FFCC, flags = 4, value = "~A8 MOV X0, #0x1;"}})
                MapDisplayRange_currentA = 2
            elseif MapDisplayRange_currentA == 2 then
                gg.setValues({{address = start + 0x193FFCC, flags = 4, value = "~A8 MOV W0, WZR;"}})
                MapDisplayRange_currentA = 3
            end			
			Map()
		elseif MapMenu == 5 then		
			Main()
		end
	end
		-- [4-1] 読み込む範囲
		MapControllerMapRadiusMeters_Selected = {false, false, false}
		function  MapController_MapRadiusMeters()
			gg.getResults(9999)
			gg.setVisible(false)			
			local MonsterMapRadiusMeters = {"700", "840"}
			MapControllerMapRadiusMetersMenu = gg.choice({
				(MapControllerMapRadiusMeters_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
				(MapControllerMapRadiusMeters_Selected[2] and "\n[ON]    1.2 倍\n" or "\n[2]    1.2 倍\n"),
				(MapControllerMapRadiusMeters_Selected[3] and "\n[ON]    任意の値\n" or "\n[3]    任意の値\n"),
				"\n[←]    もどる"
			}, nil, "メインメニュー/マップ//\n\n読み込む範囲")
			if MapControllerMapRadiusMetersMenu == nil then
				temporarilyhide()
				MapController_MapRadiusMeters()
			elseif MapControllerMapRadiusMetersMenu >= 1 and MapControllerMapRadiusMetersMenu <= 3 then
				for i = 1, 3 do
					MapControllerMapRadiusMeters_Selected[i] = false
				end
				MapControllerMapRadiusMeters_Selected[MapControllerMapRadiusMetersMenu] = true	
				LoadNameAddress("MapController_MapLoad")
				if MapControllerMapRadiusMetersMenu >= 1 and MapControllerMapRadiusMetersMenu <= 2 then
					local chosenValue = MonsterMapRadiusMeters[MapControllerMapRadiusMetersMenu]
					gg.editAll(chosenValue, gg.TYPE_DOUBLE)		
					applyoffset(0x8, gg.TYPE_DOUBLE)	
					gg.editAll(chosenValue, gg.TYPE_DOUBLE)	
				elseif MapControllerMapRadiusMetersMenu == 3 then
					while true do
						gg.setVisible(false)
						local val = gg.prompt({[1] = "マップの読み込む範囲を変更 #Double型\n\n半径m, デフォ: 700\n[  0 ~   ]"}, {[1] = ""}, {"number"})
						if val and val[1] ~= nil then
							gg.editAll(val[1], gg.TYPE_DOUBLE)		
							applyoffset(0x8, gg.TYPE_DOUBLE)	
							gg.editAll(val[1], gg.TYPE_DOUBLE)	
							break
						else
						temporarilyhide()
						end
					end
				end
				 MapController_MapRadiusMeters()
			elseif MapControllerMapRadiusMetersMenu == 4 then
				Map()
			end
		end		
 		-- [4-2] ハンターのアクセス範囲 
		FieldManagerHunterAccessRange_Selected = {false, false, false}
		function  FieldManager_HunterAccessRange()
			gg.getResults(9999)
			gg.setVisible(false)
			local HunterAccessRange = {"1", "10"}
			FieldManagerHunterAccessRangeMenu = gg.choice({
				(FieldManagerHunterAccessRange_Selected[1] and "\n-> [1]    デフォルト\n" or "\n[1]    デフォルト\n"),
				(FieldManagerHunterAccessRange_Selected[2] and "\n-> [2]    10 倍\n" or "\n[2]    10 倍\n"),
				(FieldManagerHunterAccessRange_Selected[3] and "\n-> [3]    任意の値\n" or "\n[3]    任意の値\n"),					
				"\n[←]    もどる"
			}, nil, "メインメニュー/マップ//\n\nハンターのアクセス範囲")
			if FieldManagerHunterAccessRangeMenu == nil then
				temporarilyhide()
				 FieldManager_HunterAccessRange()
			elseif FieldManagerHunterAccessRangeMenu >= 1 and FieldManagerHunterAccessRangeMenu <= 3 then
				for i = 1, 3 do
					FieldManagerHunterAccessRange_Selected[i] = false
				end
				FieldManagerHunterAccessRange_Selected[FieldManagerHunterAccessRangeMenu] = true	
				LoadNameAddress("FieldManager_HunterAccess")
				if FieldManagerHunterAccessRangeMenu >= 1 and FieldManagerHunterAccessRangeMenu <= 2 then
					local chosenValue = HunterAccessRange[FieldManagerHunterAccessRangeMenu]
					gg.editAll(chosenValue, gg.TYPE_FLOAT)
				elseif FieldManagerHunterAccessRangeMenu == 3 then
					while true do
						gg.setVisible(false)
						local val = gg.prompt({[1] = "ハンターのアクセス範囲を変更 #Float型\n\n割合, デフォ: 1\n[  0 ~ 1,000  ]"}, {[1] = ""}, {"number"})
						if val and val[1] ~= nil then
							gg.editAll(val[1], gg.TYPE_FLOAT)		
							break
						else
							temporarilyhide()
						end
					end
				end
				FieldManager_HunterAccessRange()
			elseif FieldManagerHunterAccessRangeMenu == 4 then
				Map()
			end
		end		
 		-- [4-3] オトモのアクセス範囲 
		FieldConfigOtomoAccessRange_Selected = {false, false, false, false}
		function  FieldConfig_OtomoAccessRange()
			gg.getResults(9999)
			gg.setVisible(false)
			local OtomoAccessRange = {"80", "0"}
			FieldConfigOtomoAccessRangeMenu = gg.choice({
				(FieldConfigOtomoAccessRange_Selected[1] and "\n-> [1]    デフォルト\n" or "\n[1]    デフォルト\n"),
				(FieldConfigOtomoAccessRange_Selected[2] and "\n-> [2]    なし\n" or "\n[2]    なし\n"),							
				"\n[←]    もどる"
			}, nil, "メインメニュー/マップ//\n\nオトモのアクセス範囲")
			if FieldConfigOtomoAccessRangeMenu == nil then
				temporarilyhide()
				 FieldConfig_OtomoAccessRange()
			elseif FieldConfigOtomoAccessRangeMenu >= 1 and FieldConfigOtomoAccessRangeMenu <= 2 then
				for i = 1, 4 do
					FieldConfigOtomoAccessRange_Selected[i] = false
				end
				FieldConfigOtomoAccessRange_Selected[FieldConfigOtomoAccessRangeMenu] = true	
				LoadNameAddress("FieldConfig_OtomoAccess")
				FieldConfig_OtomoAccessRange()
			elseif FieldConfigOtomoAccessRangeMenu == 3 then
				Map()
			end
		end		
    -- [5] 全般
	Settings_currentA = 1
	Settings_currentB = 1
	Settings_currentC = 1
	Settings_currentD = 1
	Settings_currentE = 1
	Settings_currentF = 1
	Settings_SelectedA = {"\n[2]    速度制限 解除\n", "\n[ON]    速度制限 解除\n", "\n[OFF]    速度制限 解除\n"} 
	Settings_SelectedB = {"\n[3]    リザルト画面 スキップ\n", "\n[ON]    リザルト画面 スキップ\n", "\n[OFF]    リザルト画面 スキップ\n"}   
	Settings_SelectedC = {"\n[4]    DPSコンボカウンター 表示\n", "\n[ON]    DPSコンボカウンター 表示\n", "\n[OFF]    DPSコンボカウンター 表示\n"}    
	Settings_SelectedD = {"\n[5]    討伐・部位破壊時の演出 カット\n", "\n[ON]    討伐・部位破壊時の演出 カット\n"}      
	Settings_SelectedE = {"\n[6]    位置移動時のラグ 解消\n", "\n[ON]    位置移動時のラグ 解消\n"}          
	Settings_SelectedF = {"\n[7]    ハンター名 匿名化\n", "\n[ON]    ハンター名 匿名化\n"}          	
	function Settings()
		IncludeCheckAndTrueFalseA("_GameSpeed")	
		SettingMenu_Selected = {A}
		gg.setVisible(false)	
		SettingMenu = gg.choice({
			(SettingMenu_Selected[1] and "\n-> [1]    ゲーム速度\n" or "\n[1]    ゲーム速度\n"),
			Settings_SelectedA[Settings_currentA],
			Settings_SelectedB[Settings_currentB],
			Settings_SelectedC[Settings_currentC],
			Settings_SelectedD[Settings_currentD],
			Settings_SelectedE[Settings_currentE],	
			Settings_SelectedF[Settings_currentF],		
			"\n[←]    もどる"	
		}, nil, "メインメニュー/\n\n全般")
		if SettingMenu == nil then
			temporarilyhide()	
			Settings()
		elseif SettingMenu == 1 then
			LoadNameAddress("_GameSpeed")
			local count = gg.getResultsCount()
			if count >= 1 then
			else
				local libName = "libunity.so"
				local libRanges = gg.getRangesList(libName)	
				if #libRanges == 0 then
					print("Error: Unable to find library range.")
					Settings()
				end
				local libAddress = libRanges[2].start
				local address = libAddress + 0x245698
				gg.setRanges(gg.REGION_C_DATA)
				gg.searchNumber(address, gg.TYPE_QWORD)
				local results = gg.getResults(1)
				local hexaddress = #results > 0 and (string.format("%X", results[1].address) .. "h") or nil
				gg.clearResults()
				gg.setRanges(gg.REGION_ANONYMOUS)
				gg.searchNumber(hexaddress, gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
				applyoffset(0xFC,gg.TYPE_FLOAT)
				AddNameAddress("_GameSpeed")       
			end	
			GameSpeed()
		elseif SettingMenu >= 2 and SettingMenu <= 7 then
			if SettingMenu == 2 then	
				LoadNameAddress("ClientSettingsProto_SpeedLmit")
				local count = gg.getResultsCount()
				if count >= 1 then
				else			
					valueFromClass("ClientSettingsProto")
					applyoffset(0x58, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x10, gg.TYPE_DWORD)	
					gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)		
					AddNameAddress("ClientSettingsProto_SpeedLmit")
				end
				gg.getResults(9999)
				if Settings_currentA == 1 or Settings_currentA == 3 then
					gg.editAll("0", gg.TYPE_DWORD)
					Settings_currentA = 2
				elseif Settings_currentA == 2 then
					gg.editAll("1", gg.TYPE_DWORD)
					Settings_currentA = 3
				end
			elseif SettingMenu == 3 then	
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if Settings_currentB == 1 or Settings_currentB == 3 then
                    gg.setValues({{address = start + 0x1CBA01C, flags = 4, value = "~A8 MOV X0, #0x7F000000;"}})
                    Settings_currentB = 2
                elseif Settings_currentB == 2 then
                    gg.setValues({{address = start + 0x1CBA01C, flags = 4, value = "~A8 LDRB W0, [X0,#0x28];"}})
					Settings_currentB = 3
                end
				Settings()				
			elseif SettingMenu == 4 then
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if Settings_currentC == 1 or Settings_currentC == 3 then
                    gg.setValues({{address = start + 0x193DA54, flags = 4, value = "~A8 MOV X0, #0x1;"}})
                    Settings_currentC = 2
                elseif Settings_currentC == 2 then
                    gg.setValues({{address = start + 0x193DA54, flags = 4, value = "~A8 MOV W0, WZR;"}})
                    Settings_currentC = 3
                end			
				Settings()				
			elseif SettingMenu == 5 then	
				if Settings_currentD == 1 then
					valueFromClass("BattleConfig")
					applyoffset(0x90, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x20, gg.TYPE_FLOAT)
					gg.refineNumber("2~3", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
					gg.getResults(9999)
					gg.editAll("0", gg.TYPE_FLOAT)				
					valueFromClass("BattleConfig")
					applyoffset(0xA8, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x10, gg.TYPE_FLOAT)	
					gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
					gg.getResults(9999)
					gg.editAll("0", gg.TYPE_FLOAT)	
					Settings_currentD = 2
				elseif Settings_currentD == 2 then
				end
			elseif SettingMenu == 6 then		
				if Settings_currentE == 1 then
					valueFromClass("FieldConfig")
					applyoffset(0x58, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x14, gg.TYPE_DWORD)	
					gg.refineNumber("200", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					applyoffset(-0x4, gg.TYPE_FLOAT)	
					gg.refineNumber("5", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
					gg.getResults(9999)
					gg.editAll("0", gg.TYPE_FLOAT)	
					Settings_currentE = 2
				elseif Settings_currentE == 2 then
				end
			elseif SettingMenu == 7 then
				if Settings_currentF == 1 then
					valueFromClass("UserHunterProto")	
					applyoffset(0x10, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x14, gg.TYPE_DWORD)
					gg.refineNumber("0", gg.TYPE_DWORD, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)			
					gg.getResults(9999)
					gg.editAll("7,209,025", gg.TYPE_DWORD)			
					applyoffset(-0x4, gg.TYPE_DWORD)
					gg.editAll("9", gg.TYPE_DWORD)
					applyoffset(0x8, gg.TYPE_DWORD)
					gg.editAll("7,209,071", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("7,143,545", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("7,667,823", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("115", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("0", gg.TYPE_DWORD)
					applyoffset(0x4, gg.TYPE_DWORD)
					gg.editAll("0", gg.TYPE_DWORD)	
					Settings_currentF = 2
				elseif Settings_currentF == 2 then
				end
			end
			Settings()
		elseif SettingMenu == 8 then		
			Main()
		end
	end
		-- [5-1] ゲーム速度
		GameSpeed_Selected = {false, false, false}
		function GameSpeed()
			gg.getResults(9999)
			gg.setVisible(false)
			local GameSpeedValue = {"1", "2.5", "5"}
			GameSpeedMenu = gg.choice({
				(GameSpeed_Selected[1] and "\n[ON]    デフォルト\n" or "\n[1]    デフォルト\n"),
				(GameSpeed_Selected[2] and "\n[ON]   2.5 倍\n" or "\n[2]    2.5 倍\n"),
				(GameSpeed_Selected[3] and "\n[ON]    5.0 倍\n" or "\n[3]    5.0 倍\n"),
				(GameSpeed_Selected[4] and "\n[ON]    任意の値\n" or "\n[4]    任意の値\n"),			
				"\n[←]    もどる"
			}, nil, "メインメニュー/全般/\n\nゲーム速度\n")
			if GameSpeedMenu == nil then
				temporarilyhide()
				GameSpeed()
			elseif GameSpeedMenu >= 1 and GameSpeedMenu <= 4 then
				for i = 1, 4 do
					GameSpeed_Selected[i] = false
				end
				GameSpeed_Selected[GameSpeedMenu] = true				
				if GameSpeedMenu >= 1 and GameSpeedMenu <= 3 then
					local chosenValue = GameSpeedValue[GameSpeedMenu]
					gg.editAll(chosenValue, gg.TYPE_FLOAT)
				elseif GameSpeedMenu == 4 then
					while true do
						gg.setVisible(false)
						local val = gg.prompt({[1] = "ゲームの速度を変更 #Float型\n\n割合, デフォ: 1\n[  0 ~   ]"}, {[1] = ""}, {"number"})
						if val and val[1] ~= nil then
							gg.editAll(val[1], gg.TYPE_FLOAT)									
							break
						else
							temporarilyhide()
						end
					end						
				end
				GameSpeed()
			elseif GameSpeedMenu == 5 then
				Settings()
			end
		end	
	-- [6] マルチ選択
	function Multi()
		gg.setVisible(false)
		local data = {}
		data[1] = true
		data[2] = true
		data[3] = true 
		data[4] = true
		data[5] = true  
		data[6] = true
		data[7] = true
		data[8] = true
		data[9] = true
		data[10] = false
		data[11] = false
		data[12] = false
		local Prompt = gg.prompt({
			"[1]    速度制限 解除",		
			"[2]    マップの表示;読み込み;アクセス範囲 拡大",		
		    "[3]    ゲーム速度 4倍",		
		    "[4]    攻撃力 最大",
			"[5]    防御力 最大",	
			"[6]    モンスター 凍結",			
			"[7]    部位破壊 容易化",			
			"[8]    リザルト画面 スキップ",
			"[9]    討伐•部位破壊時 演出カット",			
			"[10]    DPSコンボカウンター 表示",			
			"[11]    オトモアクセス範囲 なし",		
			"[12]    モンスター弱点全属性 追加"	
		}, data, {"checkbox","checkbox","checkbox","checkbox","checkbox","checkbox","checkbox","checkbox","checkbox","checkbox","checkbox","checkbox"})
		if Prompt == nil then
			temporarilyhide()	
			Main()
		end
		if Prompt[1] == true then
			LoadNameAddress("ClientSettingsProto_SpeedLmit")
			local count = gg.getResultsCount()
			if count >= 1 then
			else			
				valueFromClass("ClientSettingsProto")
				applyoffset(0x58, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x10, gg.TYPE_DWORD)	
				gg.refineNumber("1", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)		
				AddNameAddress("ClientSettingsProto_SpeedLmit")
			end
			gg.getResults(9999)
			gg.editAll("0", gg.TYPE_DWORD)
		end	
		if Prompt[2] == true then
			local start = gg.getRangesList("libil2cpp.so")[2].start
            gg.setValues({{address = start + 0x193FFCC, flags = 4, value = "~A8 MOV X0, #0x1;"}})
			LoadNameAddress("MapController_MapLoad")
			local count = gg.getResultsCount()
			if count >= 1 then
			else
				valueFromClass("MapController")
				applyoffset(0x1C, gg.TYPE_FLOAT)
				gg.refineNumber("700", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
				applyoffset(0x7C, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x28, gg.TYPE_DOUBLE)	
				gg.refineNumber("700", gg.TYPE_DOUBLE, false, gg.SIGN_EQUAL, 0, -1, 0)
				AddNameAddress("MapController_MapLoad")
			end
			gg.editAll("840", gg.TYPE_DOUBLE)		
			applyoffset(0x8, gg.TYPE_DOUBLE)	
			gg.editAll("840", gg.TYPE_DOUBLE)
			LoadNameAddress("FieldManager_HunterAccess")
			local count = gg.getResultsCount()
			if count >= 1 then
			else
				valueFromClass("FieldManager")
				applyoffset(0xA0, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x3C, gg.TYPE_FLOAT)	
				gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
				AddNameAddress("FieldManager_HunterAccess")
			end	
			gg.editAll("10", gg.TYPE_FLOAT)
		end	
		if Prompt[3] == true then
			LoadNameAddress("_GameSpeed")
			local count = gg.getResultsCount()
			if count >= 1 then
			else
				local libName = "libunity.so"
				local libRanges = gg.getRangesList(libName)	
				if #libRanges == 0 then
					print("Error: Unable to find library range.")
					Settings()
				end
				local libAddress = libRanges[2].start
				local address = libAddress + 0x245698
				gg.setRanges(gg.REGION_C_DATA)
				gg.searchNumber(address, gg.TYPE_QWORD)
				local results = gg.getResults(1)
				local hexaddress = #results > 0 and (string.format("%X", results[1].address) .. "h") or nil
				gg.clearResults()
				gg.setRanges(gg.REGION_ANONYMOUS)
				gg.searchNumber(hexaddress, gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
				applyoffset(0xFC,gg.TYPE_FLOAT)
				AddNameAddress("_GameSpeed")       
			end	
			gg.editAll("4", gg.TYPE_FLOAT)
		end		
		if Prompt[4] == true then
			local start = gg.getRangesList("libil2cpp.so")[2].start
			gg.setValues({{address = start + 0x193DB08, flags = 4, value = "~A8 FCVTAS W0, S8;"}})
		end		
		if Prompt[5] == true then
            LoadNameAddress("HunterDefence")
            local count = gg.getResultsCount()
        	if count >= 1 then
        	else			
				gg.setRanges(gg.REGION_CODE_APP)
				gg.clearResults()
				gg.searchNumber("h 00 10 2E 1E C0 03 5F D6 FF C3 00 D1 F5 53 01 A9 F3 7B 02 A9 F4 71 02 90 E0 0F 00 BD 95 48 02 F0 B3 48 02 90 88 4A 7B 39 B5 92 44 F9 73 6A 42 F9", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
				AddNameAddress("HunterDefence")
            end
            gg.getResults(9999)
            gg.editAll("h E0 03 27 1E C0 03 5F D6 FF C3 00 D1 F5 53 01 A9 F3 7B 02 A9 F4 71 02 90 E0 0F 00 BD 95 48 02 F0 B3 48 02 90 88 4A 7B 39 B5 92 44 F9 73 6A 42 F9", gg.TYPE_BYTE)
		end	
		if Prompt[6] == true then
			local start = gg.getRangesList("libil2cpp.so")[2].start
            gg.setValues({{address = start + 0x193D8CC, flags = 4, value = "~A8 MOV W0, #0x1;"}})
		end
		if Prompt[7] == true then
			LoadNameAddress("BattleConfig_PartBreak")
			local count = gg.getResultsCount()
			if count >= 1 then
			else				
				valueFromClass("BattleConfig")	
				applyoffset(0x58, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x14, gg.TYPE_FLOAT)
				gg.refineNumber("0.1~0.2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
				AddNameAddress("BattleConfig_PartBreak")
			end	
			gg.getResults(9999)
			gg.editAll("1,000,000,000", gg.TYPE_FLOAT)
			applyoffset(-0x4, gg.TYPE_DWORD)
			gg.editAll("999,999,999", gg.TYPE_DWORD)
		end	
		if Prompt[8] == true then
			local start = gg.getRangesList("libil2cpp.so")[2].start
            gg.setValues({{address = start + 0x1CBA01C, flags = 4, value = "~A8 MOV X0, #0x7F000000;"}})
		end	
		if Prompt[9] == true then
			valueFromClass("BattleConfig")
			applyoffset(0x90, gg.TYPE_QWORD)
			MoveThePointer()
			applyoffset(0x20, gg.TYPE_FLOAT)
			gg.refineNumber("2~3", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
			gg.getResults(9999)
			gg.editAll("0", gg.TYPE_FLOAT)				
			valueFromClass("BattleConfig")
			applyoffset(0xA8, gg.TYPE_QWORD)
			MoveThePointer()
			applyoffset(0x10, gg.TYPE_FLOAT)	
			gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
			gg.getResults(9999)
			gg.editAll("0", gg.TYPE_FLOAT)	
		end	
		if Prompt[10] == true then
			local start = gg.getRangesList("libil2cpp.so")[2].start
            gg.setValues({{address = start + 0x193DA54, flags = 4, value = "~A8 MOV X0, #0x1;"}})
		end	
		if Prompt[11] == true then		
			LoadNameAddress("FieldConfig_OtomoAccess")
			local count = gg.getResultsCount()
			if count >= 1 then
			else
				valueFromClass("FieldConfig")
				applyoffset(0xA0, gg.TYPE_QWORD)
				MoveThePointer()
				applyoffset(0x3C, gg.TYPE_FLOAT)	
				gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
				AddNameAddress("FieldConfig_OtomoAccess")
			end	
			gg.editAll("0", gg.TYPE_FLOAT)
		end
		if Prompt[12] == true then		
			valueFromClass("ElementalWeaknessChart")
			applyoffset(0x10, gg.TYPE_DWORD)
			gg.editAll("1", gg.TYPE_DWORD)
			applyoffset(0x4, gg.TYPE_DWORD)
			gg.editAll("1", gg.TYPE_DWORD)
			applyoffset(0x4, gg.TYPE_DWORD)
			gg.editAll("1", gg.TYPE_DWORD)
			applyoffset(0x4, gg.TYPE_DWORD)
			gg.editAll("1", gg.TYPE_DWORD)
			applyoffset(0x4, gg.TYPE_DWORD)
			gg.editAll("1", gg.TYPE_DWORD)
			applyoffset(0x4, gg.TYPE_DWORD)
			gg.editAll("1", gg.TYPE_DWORD)
			applyoffset(0x4, gg.TYPE_DWORD)
			gg.editAll("1", gg.TYPE_DWORD)
			applyoffset(0x4, gg.TYPE_DWORD)
			gg.editAll("1", gg.TYPE_DWORD)
		end
	Main()
	end
    -- [7] 簡易設定
    function Config()
		gg.setVisible(false)	
		ConfigMenu = gg.choice({
			"\nその1\n",
			"\nその2\n",
			"\n[←]    もどる"	
		}, nil, "メインメニュー/\n\n簡易設定")
		if ConfigMenu == nil then
			temporarilyhide()	
			Config()
		elseif ConfigMenu == 1 then	
			Option1()
		elseif ConfigMenu == 2 then	
			Option2()
		elseif ConfigMenu == 3 then
			Main()
		end
	end
		-- [7-1] その1
		Option1_currentA = 1
		Option1_currentB = 1
		Option1_currentC = 1
		Option1_currentD = 1
		Option1_SelectedA = {"\n[1]    ゲーム速度\n","\n[ON]    ゲーム速度 デフォルト\n", "\n[ON]    ゲーム速度 4倍\n"}
		Option1_SelectedB = {"\n[2]    攻撃力\n", "\n[ON]    攻撃力 デフォルト\n", "\n[ON]    攻撃力 15倍\n", "\n[ON]    攻撃力 MAX\n"}	
		Option1_SelectedC = {"\n[3]    防御力\n", "\n[ON]    防御力 デフォルト\n", "\n[ON]    防御力  MAX\n"}			
		Option1_SelectedD = {"\n[4]    モンスター動作\n", "\n[ON]    モンスター動作 デフォルト\n", "\n[ON]    モンスター動作 凍結\n"}		
		function Option1()
			gg.setVisible(false)	
			Option1Menu = gg.choice({
				Option1_SelectedA[Option1_currentA],
				Option1_SelectedB[Option1_currentB],
				Option1_SelectedC[Option1_currentC],
				Option1_SelectedD[Option1_currentD],
				"\n[←]    もどる"	
			}, nil, "メインメニュー/簡易設定\n\nその1")
			if Option1Menu == nil then
				temporarilyhide()	
				Option1()
			elseif Option1Menu == 1 then		
				LoadNameAddress("_GameSpeed")
				local count = gg.getResultsCount()
				if count >= 1 then
				else
					local libName = "libunity.so"
					local libRanges = gg.getRangesList(libName)	
					if #libRanges == 0 then
						print("Error: Unable to find library range.")
						Settings()
					end
					local libAddress = libRanges[2].start
					local address = libAddress + 0x245698
					gg.setRanges(gg.REGION_C_DATA)
					gg.searchNumber(address, gg.TYPE_QWORD)
					local results = gg.getResults(1)
					local hexaddress = #results > 0 and (string.format("%X", results[1].address) .. "h") or nil
					gg.clearResults()
					gg.setRanges(gg.REGION_ANONYMOUS)
					gg.searchNumber(hexaddress, gg.TYPE_QWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					applyoffset(0xFC,gg.TYPE_FLOAT)
					AddNameAddress("_GameSpeed")       
				end	
				if Option1_currentA == 1 or Option1_currentA == 3 then
					gg.editAll("1", gg.TYPE_FLOAT)
					Option1_currentA = 2
				elseif Option1_currentA == 2 then
					gg.editAll("4", gg.TYPE_FLOAT)
					Option1_currentA = 3
				end
			elseif Option1Menu == 2 then	
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if Option1_currentB == 1 or Option1_currentB == 4 then
					gg.setValues({{address = start + 0x193DB08, flags = 4, value = "~A8 FMOV S0, #0x3F800000;"}})
					Option1_currentB = 2
				elseif Option1_currentB == 2 then
					gg.setValues({{address = start + 0x193DB08, flags = 4, value = "~A8 FMOV S0, #0x41C00000;"}})
					Option1_currentB = 3
				elseif Option1_currentB == 3 then
					gg.setValues({{address = start + 0x193DB08, flags = 4, value = "~A8 FCVTAS W0, S8;"}})
					Option1_currentB = 4
				end
			elseif Option1Menu == 3 then	
				LoadNameAddress("HunterDefence")
				local count = gg.getResultsCount()
				if count >= 1 then
				else			
					gg.setRanges(gg.REGION_CODE_APP)
					gg.clearResults()
					gg.searchNumber("h 00 10 2E 1E C0 03 5F D6 FF C3 00 D1 F5 53 01 A9 F3 7B 02 A9 F4 71 02 90 E0 0F 00 BD 95 48 02 F0 B3 48 02 90 88 4A 7B 39 B5 92 44 F9 73 6A 42 F9", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("HunterDefence")
				end
				gg.getResults(9999)
				if Option1_currentC == 1 or Option1_currentC == 3 then
					gg.editAll("h 00 10 2E 1E C0 03 5F D6 FF C3 00 D1 F5 53 01 A9 F3 7B 02 A9 F4 71 02 90 E0 0F 00 BD 95 48 02 F0 B3 48 02 90 88 4A 7B 39 B5 92 44 F9 73 6A 42 F9", gg.TYPE_BYTE)
					Option1_currentC = 2
				elseif Option1_currentC == 2 then
					gg.editAll("h E0 03 27 1E C0 03 5F D6 FF C3 00 D1 F5 53 01 A9 F3 7B 02 A9 F4 71 02 90 E0 0F 00 BD 95 48 02 F0 B3 48 02 90 88 4A 7B 39 B5 92 44 F9 73 6A 42 F9", gg.TYPE_BYTE)
					Option1_currentC = 3
				end					
			elseif Option1Menu == 4 then
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if Option1_currentD == 1 or Option1_currentD == 3 then
					gg.setValues({{address = start + 0x193D8CC, flags = 4, value = "~A8 MOV W0, WZR;"}})
					Option1_currentD = 2
				elseif Option1_currentD == 2 then
				   gg.setValues({{address = start + 0x193D8CC, flags = 4, value = "~A8 MOV W0, #0x1;"}})
					Option1_currentD = 3
				end	
			elseif Option1Menu == 5 then
				Config()
			end
			Option1()
		end
		-- [7-1] その2		
		Option2_currentA = 1
		Option2_currentB = 1
		Option2_currentC = 1
		Option2_currentD = 1
		Option2_currentE = 1
		Option2_SelectedA = {"\n[5]    部位破壊\n", "\n[ON]    部位破壊 デフォルト\n", "\n[ON]    部位破壊 容易化\n"}		
		Option2_SelectedB = {"\n[6]    リザルト画面 スキップ\n", "\n[ON]    リザルト画面 あり\n", "\n[ON]    リザルト画面 なし\n"}	
		Option2_SelectedC = {"\n[7]    DPSコンボカウンター\n","\n[ON]    DPSコンボカウンター 非表示\n", "\n[ON]    DPSコンボカウンター 表示\n"}			
		Option2_SelectedD = {"\n[8]    オトモアクセス範囲\n", "\n[ON]    オトモアクセス範囲 デフォルト\n", "\n[ON]    オトモアクセス範囲 なし\n"}	
		Option2_SelectedE = {"\n[9]    装備の強化レベル\n", "\n[ON]    装備の強化レベル Lv5\n", "\n[ON]    装備の強化レベル Lv4\n"}			
		function Option2()
			gg.setVisible(false)	
			Option2Menu = gg.choice({
				Option2_SelectedA[Option2_currentA],
				Option2_SelectedB[Option2_currentB],
				Option2_SelectedC[Option2_currentC],
				Option2_SelectedD[Option2_currentD],
				Option2_SelectedE[Option2_currentE],
				"\n[←]    もどる"					
			}, nil, "メインメニュー/簡易設定\n\nその2")
			if Option2Menu == nil then
				temporarilyhide()	
				Option2()	
			elseif Option2Menu == 1 then	
				LoadNameAddress("BattleConfig_PartBreak")
				local count = gg.getResultsCount()
				if count >= 1 then
				else				
					valueFromClass("BattleConfig")	
					applyoffset(0x58, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x14, gg.TYPE_FLOAT)
					gg.refineNumber("0.1~0.2", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)
					AddNameAddress("BattleConfig_PartBreak")
				end	
				gg.getResults(9999)
				if Option2_currentA == 1 or Option2_currentA == 3 then
					gg.editAll("0.15000000596", gg.TYPE_FLOAT)
					applyoffset(-0x4, gg.TYPE_DWORD)
					gg.editAll("100", gg.TYPE_DWORD)			
					Option2_currentA = 2
				elseif Option2_currentA == 2 then
					gg.editAll("1,000,000,000", gg.TYPE_FLOAT)
					applyoffset(-0x4, gg.TYPE_DWORD)
					gg.editAll("999,999,999", gg.TYPE_DWORD)	
					Option2_currentA = 3
				end		
			elseif Option2Menu == 2 then	
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if Option2_currentB == 1 or Option2_currentB == 3 then
					gg.setValues({{address = start + 0x1CBA01C, flags = 4, value = "~A8 LDRB W0, [X0,#0x28];"}})
					Option2_currentB = 2
				elseif Option2_currentB == 2 then
					gg.setValues({{address = start + 0x1CBA01C, flags = 4, value = "~A8 MOV X0, #0x7F000000;"}})
					Option2_currentB = 3
				end		
			elseif Option2Menu == 3 then	
				local start = gg.getRangesList("libil2cpp.so")[2].start
				if Option2_currentC == 1 or Option2_currentC == 3 then
					gg.setValues({{address = start + 0x193DA54, flags = 4, value = "~A8 MOV W0, WZR;"}})
					Option2_currentC = 2
				elseif Option2_currentC == 2 then
					gg.setValues({{address = start + 0x193DA54, flags = 4, value = "~A8 MOV X0, #0x1;"}})
					Option2_currentC = 3
				end				
			elseif Option2Menu == 4 then	
				LoadNameAddress("FieldConfig_OtomoAccess")
				local count = gg.getResultsCount()
				if count >= 1 then
				else
					valueFromClass("FieldConfig")
					applyoffset(0xA0, gg.TYPE_QWORD)
					MoveThePointer()
					applyoffset(0x3C, gg.TYPE_FLOAT)	
					gg.refineNumber("1", gg.TYPE_FLOAT, false, gg.SIGN_EQUAL, 0, -1, 0)	
					AddNameAddress("FieldConfig_OtomoAccess")
				end	
				if Option2_currentD == 1 or Option2_currentD == 3 then
					gg.editAll("80", gg.TYPE_FLOAT)
					Option2_currentD = 2
				elseif Option2_currentD == 2 then
					gg.editAll("0", gg.TYPE_FLOAT)
					Option2_currentD = 3
				end
			elseif Option2Menu == 5 then		
				valueFromClass("UserHunterWeapon")	
				applyoffset(0x2C, gg.TYPE_DWORD)	
				gg.refineNumber("1~5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
				gg.getResults(9999)
				if Option2_currentE == 1 or Option2_currentE == 3 then
					gg.editAll("5", gg.TYPE_DWORD)
					valueFromClass("UserHunterArmor")	
					applyoffset(0x2C, gg.TYPE_DWORD)	
					gg.refineNumber("1~5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					gg.getResults(9999)
					gg.editAll("5", gg.TYPE_DWORD)
					Option2_currentE = 2
				elseif Option2_currentE == 2 then
					gg.editAll("4", gg.TYPE_DWORD)
					valueFromClass("UserHunterArmor")	
					applyoffset(0x2C, gg.TYPE_DWORD)	
					gg.refineNumber("1~5", gg.TYPE_DWORD, false, gg.SIGN_EQUAL, 0, -1, 0)
					gg.getResults(9999)
					gg.editAll("4", gg.TYPE_DWORD)
					Option2_currentE = 3
				end
			elseif Option2Menu == 6 then		
				Config()
			end
			Option2()
		end			





	-- [~] DeveloperMode
	function DeveloperMode()
		gg.showUiButton()
		gg.setVisible(true)	
		local continueProcessing = true
		while true do
			if gg.isClickedUiButton() then	
				DeveloperModemenu = gg.choice({
					"\n[1]    アドレスの読み込み\n",
					"\n[2]    アドレスの削除\n",      
					"\n[3]    オフセットと型の変更\n",
					"\n[4]    ポインター移動\n",
					"\n[5]    ポインター検索\n",
					"\n[←]    もどる"
				}, nil, "メインメニュー\n\nDeveloperMode")    
				if DeveloperModemenu == nil then
            		gg.showUiButton()
            		gg.setVisible(true)	
				elseif DeveloperModemenu == 1 then    
					local val = gg.prompt({[1] = "保存リストから読み込むアドレスの名前を入力"}, {[1] = ""})
					if val == nil then
						gg.showUiButton()
            		    gg.setVisible(true)
					else
						local results = gg.getListItems()
						local filteredResults = {}
						for _, v in ipairs(results) do
							if v.name == val[1] then
								table.insert(filteredResults, v)
							end
						end					
						gg.loadResults(filteredResults)
						gg.getListItems() 
						gg.getResults(9999) 
					end
					DeveloperMode()
				elseif DeveloperModemenu == 2 then				
					local val = gg.prompt({[1] = "保存リストから削除するアドレスの名前を入力"}, {[1] = ""})
					if val == nil then
						gg.showUiButton()
            		    gg.setVisible(true)	
					else
						DeleteNameAddress(val[1])  
						gg.getListItems() 
						gg.getResults(9999) 
					end
					DeveloperMode()
				elseif DeveloperModemenu == 3 then
					menuC = gg.choice({
					    "\n[1]    マニュアル\n",
						"\n[2]    オフセット0xFFFFFFFFFFFFFFF0\n         → Qword≠0　を適用\n"
					}, nil, "オフセットと型の変更")    
					if menuC == nil then
						gg.showUiButton()
						gg.setVisible(true)	
					elseif menuC >= 1 and menuC <= 2 then	
						if menuC == 1 then					
							local offsetHex = gg.prompt({"16進数のオフセットを入力"}, {"0"}, {"number"})
							if offsetHex == nil then
								gg.showUiButton()
								gg.setVisible(true)	
							end
							if offsetHex and offsetHex[1] then
								local offsetX = tonumber(offsetHex[1], 16)
								local prompts = {"型の番号を入力\n\n1: Byte,  2: Word,  3: Dword,  4: Qword,  5: Float,  6: Double"}
								local defaultValues = {"3"}
								local userInput = gg.prompt(prompts, defaultValues)
								if userInput then                    	
									local userType = userInput[1]
									local typeValue                        
									if userType == "1" then
										typeValue = gg.TYPE_BYTE
									elseif userType == "2" then
										typeValue = gg.TYPE_WORD
									elseif userType == "3" then
										typeValue = gg.TYPE_DWORD
									elseif userType == "4" then
										typeValue = gg.TYPE_QWORD
									elseif userType == "5" then
										typeValue = gg.TYPE_FLOAT
									elseif userType == "6" then
										typeValue = gg.TYPE_DOUBLE
									else
										gg.alert("型が無効です")
										gg.showUiButton()
            		                    gg.setVisible(true)	
									end
									local results = gg.getResults(999999)
									Offsets = {}
									Offsets['FirstOffset'] = {}
									for index, value in ipairs(results) do
										Offsets['FirstOffset'][index] = {}
										Offsets['FirstOffset'][index].address = results[index].address + offsetX
										Offsets['FirstOffset'][index].flags = typeValue
									end
									gg.getValues(Offsets['FirstOffset'])
									gg.loadResults(Offsets['FirstOffset'])
									gg.getListItems() 
									gg.getResults(9999) 
								else
									gg.showUiButton()
									gg.setVisible(true)	
								end
							else
							end
						elseif menuC == 2 then
                            applyoffset(0xFFFFFFFFFFFFFFF0, gg.TYPE_QWORD)
                            gg.refineNumber("0", gg.TYPE_QWORD, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)		
                            gg.getListItems() 
							gg.getResults(9999) 				
						end
						DeveloperMode() 
                    else
            		    gg.showUiButton()
            		    gg.setVisible(true)	
					end		
				elseif DeveloperModemenu == 4 then
                    local results = gg.getResults(9999)
                    gg.clearResults()
                        local newAddresses = {}
                        for i, result in ipairs(results) do
                            local values = gg.getValues({{address=result.address, flags=gg.TYPE_QWORD}})
                            if values ~= nil and #values > 0 and result.address ~= nil then
                                local qwordValue = values[1].value
                                local hexQwordValue = string.format("%X", qwordValue)
                                local newAddress = tonumber(hexQwordValue, 16)
                                if newAddress ~= nil then
                                    table.insert(newAddresses, {address=newAddress, flags=gg.TYPE_QWORD, value=qwordValue})
                                else
                                    --print("Warning: Skipping address due to nil newAddress for result.address", result.address)
                                end
                            else
                                --print("Warning: Skipping address due to nil values or address", result.address)
                        end
                    end
                    if #newAddresses > 0 then
                        gg.loadResults(newAddresses)
                    else
                        print("Error: No valid addresses to load.")
                    end
					gg.getListItems() 
					gg.getResults(9999) 
                    DeveloperMode()
				elseif DeveloperModemenu == 5 then
					offsetz = {base, 0xB400000000000000}
					menuD = gg.choice({
						"\n[1]    0x0\n",
						"\n[2]    0xB400000000000000\n",      
					}, nil, "ポインタ検索 (オフセットの選択)")    
					if menuD == nil then
						gg.showUiButton()
						gg.setVisible(true)	
					elseif menuD >= 1 and menuD <= 2 then
						local input = gg.prompt({[1] = "名前を付けてアドレスを保存"}, {[1] = ""})
						if input then         
    						DeleteNameAddress("Dev_pointbase_"..input[1])
    						AddNameAddress("Dev_pointbase_"..input[1])			
    						LoadNameAddress("Dev_pointbase_"..input[1])
    						if menuD == 1 then
                                gg.searchPointer(offst)
        						gg.getListItems() 
        						gg.getResults(9999) 
        					elseif menuD== 2 then
        					    count = gg.getResultsCount()
                                yy = gg.getResults(9999)
                                gg.clearResults()
                                i = 1
                                c = 1
                                s = {}
                                while (i-1) < count do
                                    yy[i].address = yy[i].address + 0xB400000000000000
                                    gg.searchNumber(yy[i].address, gg.TYPE_QWORD)
                                    local cnt = gg.getResultsCount()
                                    if 0 < cnt then
                                        bytr = gg.getResults(cnt)
                                        n = 1
                                        while (n-1) < cnt do
                                            s[c] = {}
                                            s[c].address = bytr[n].address
                                            s[c].flags = 32
                                            n = n + 1
                                            c = c + 1
                                        end
                                    end
                                    gg.clearResults()
                                    i = i + 1
                                end
                            	for i, v in ipairs(s) do
                            		v.name ="reload"
                            	end
                            	gg.addListItems(s)
                                LoadNameAddress("reload")
                                DeleteNameAddress("reload")
                                gg.getListItems() 
        						gg.getResults(9999) 
                            end		    
                        else
            		        gg.showUiButton()
            		        gg.setVisible(true)	
						end
					end
				elseif DeveloperModemenu == 6 then
					Main()
				end
			end
		end
	end					
			
			
			
			
			
			
			
------------------------------------------[ 定義 ]------------------------------------------
offst = 0
A = true
B = true
C = true
D = true
E = true
-----------------------------------------[ コマンド ]-----------------------------------------
-- 一時的に非表示にする
function temporarilyhide()
	gg.setVisible(false)
	while true do
	if gg.isVisible() then
		break 
		end
	end 
end
-- 保存リストに指定した名前を"含む"アドレスがあれば項目の表示を切り替える
function IncludeCheckAndTrueFalseA(targetName)
    local results = gg.getListItems()
    local found = false
    for _, result in ipairs(results) do
        if result.name and string.find(result.name, targetName) then
            found = true
            break
        end
    end
    if found then
        A = true
    else
        A = false
    end
end
function IncludeCheckAndTrueFalseB(targetName)
    local results = gg.getListItems()
    local found = false
    for _, result in ipairs(results) do
        if result.name and string.find(result.name, targetName) then
            found = true
            break
        end
    end
    if found then
        B = true
    else
        B = false
    end
end
function IncludeCheckAndTrueFalseB(targetName)
    local results = gg.getListItems()
    local found = false
    for _, result in ipairs(results) do
        if result.name and string.find(result.name, targetName) then
            found = true
            break
        end
    end
    if found then
        B = true
    else
        B = false
    end
end
function IncludeCheckAndTrueFalseC(targetName)
    local results = gg.getListItems()
    local found = false
    for _, result in ipairs(results) do
        if result.name and string.find(result.name, targetName) then
            found = true
            break
        end
    end
    if found then
        C = true
    else
        C = false
    end
end
function IncludeCheckAndTrueFalseD(targetName)
    local results = gg.getListItems()
    local found = false
    for _, result in ipairs(results) do
        if result.name and string.find(result.name, targetName) then
            found = true
            break
        end
    end
    if found then
        D = true
    else
        D = false
    end
end
function IncludeCheckAndTrueFalseE(targetName)
    local results = gg.getListItems()
    local found = false
    for _, result in ipairs(results) do
        if result.name and string.find(result.name, targetName) then
            found = true
            break
        end
    end
    if found then
        E = true
    else
        E = false
    end
end	
------------------------------------------[ 処理 ]------------------------------------------	
-- 型とオフセットの適用
function applyoffset(selectedOffset, selectedType)
	local results = gg.getResults(9999)
	gg.clearResults()
	for i, v in ipairs(results) do
		v.address = v.address + selectedOffset
		v.flags = selectedType
	end
	gg.loadResults(results)
	gg.getResults(9999)
end	
-- 名前を付けて保存リストに追加
function AddNameAddress(AddName)
    local results = gg.getResults(9999)
    for i, v in ipairs(results) do
        v.name = AddName
    end
    gg.addListItems(results)
    gg.getResults(9999)
end
-- 保存リストから指定した名前のアドレスを読み込む
function LoadNameAddress(LoadName)
    local results = gg.getListItems()
    local filteredResults = {}
    for _, v in ipairs(results) do
		if v.name == LoadName then
			table.insert(filteredResults, v)
		end
    end
    gg.loadResults(filteredResults)
    gg.getResults(9999)
end
-- 保存リストから指定した名前のアドレスを削除する
function DeleteNameAddress(DeleteName)
	local results = gg.getListItems()
	local filteredResults = {}
	for _, v in ipairs(results) do
		if v.name == DeleteName then
			table.insert(filteredResults, v)
		end
	end
	gg.removeListItems(filteredResults)	
	gg.getResults(9999)
end		
-- ポインタ移動
function MoveThePointer()
    local results = gg.getResults(9999)
    gg.clearResults()
    local newAddresses = {}
    for i, result in ipairs(results) do
        local values = gg.getValues({{address=result.address, flags=gg.TYPE_QWORD}})
        if values ~= nil and #values > 0 and result.address ~= nil then
            local qwordValue = values[1].value
            local hexQwordValue = string.format("%X", qwordValue)
            local newAddress = tonumber(hexQwordValue, 16)
            if newAddress ~= nil then
                table.insert(newAddresses, {address=newAddress, flags=gg.TYPE_QWORD, value=qwordValue})
            else
                --print("Warning: Skipping address due to nil newAddress for result.address", result.address)
            end
        else
            --print("Warning: Skipping address due to nil values or address", result.address)
        end
    end
    if #newAddresses > 0 then
        gg.loadResults(newAddresses)
    else
        print("Error: No valid addresses to load.")
    end
    gg.getListItems() 
    gg.getResults(9999) 
end		
-- ポインタ検索 (base)
function SearchPointerbase()
	AddNameAddress("_SearchPointer(base)")
	LoadNameAddress("_SearchPointer(base)")
	DeleteNameAddress("_SearchPointer(base)")
	gg.searchPointer(offst)
    gg.getListItems() 
    gg.getResults(9999)
end
-------------------------------------[ オフセットファインダー ]-------------------------------------
--[[ 
(すべて名前を付けて保存・読み込みする処理に変更)
保存リストにある名前のついたアドレスを読み込み、条件分岐
・最終アドレスがある場合、読み込んで終了
・最初のクラスデータがある場合、以降の処理だけを実行
・いずれもない場合、通常通りすべて実行
]]--
function valueFromClass(class)
    Get_user_input = {}
    Get_user_input[1] = class
    user_input = ":"..Get_user_input[1] 
    error = 0
    gg.setVisible(false)
	local name = {"_Odinitialsearch_"..Get_user_input[1], "_CAapplyoffset_"..Get_user_input[1], "_Qapplyfix_"..Get_user_input[1], "_Abasevalue_"..Get_user_input[1], "_Abaseaccuracy_"..Get_user_input[1]}
	LoadNameAddress(name[3])
	local count = gg.getResultsCount()
	if count >= 1 then		
	else
		start()
	end
	LoadNameAddress(name[3])
	DeleteNameAddress(name[1])
	DeleteNameAddress(name[2])	
	DeleteNameAddress(name[4])	
end
function loopCheck()
    if error == 3 then
        stopClose()
    end
end
function loopCheck()
    if error == 3 then
        stopClose()
    end
end
function found_(message)
    if error == 1 then
		found2(message)
    elseif error == 2 then
		found3(message)
    elseif error == 3 then
		found4(message)
    else
		found(message)
    end
end
function found(message)
    if count == 0 then
        gg.clearResults()
        first_error = message
        error = 1
	    second_start()
    end
end
function found2(message)
    if count == 0 then
        gg.clearResults()
        second_error = message
        error = 2
		third_start()
    end
end
function found3(message)
    if count == 0 then
        gg.clearResults()
        third_error = message
        error = 3
		fourth_start()
	end
end
function found4(message)
    if count == 0 then
        gg.clearResults()
        gg.alert("❌Value NOT FOUND❌\nError Log:\nTry 1: "..first_error.."\nTry 2: "..second_error.."\nTry 3: "..third_error.."\nTry 4: ".. message.."\n\nℹ️エラーの原因ℹ️\n\n🟢O_dinitial_search,: \nクラス名検索\n⇒ クラスデータの誤り\n・スクリプトのシーケンス,クラスデータの誤り\n・バージョン修正\n\n🟡CA_pointer_search, Q_apply_fix: \nポインタ検索1\n⇒ クラスデータが複製されていない\n・変数を生成させてからコードを実行する(変数が生成される条件:該当の装備をするなど))\n\nnaruse1122(Discord)")
        gg.setVisible(true)
        loopCheck()
    end
end   
function O_dinitial_search()
    if error > 1 then
        gg.setRanges(gg.REGION_C_ALLOC)
    else
        gg.setRanges(gg.REGION_OTHER)
    end
	gg.setVisible(false)
    gg.searchNumber(user_input, gg.TYPE_BYTE)
    count = gg.getResultsCount()
    if count == 0 then
        found_("O_dinitial_search")
        return 0
    end
    Refiner = gg.getResults(1)
    gg.refineNumber(Refiner[1].value, gg.TYPE_BYTE)
    count = gg.getResultsCount()
    if count == 0 then
        found_("O_dinitial_search")
        return 0
    end
    AddNameAddress("_Odinitialsearch_"..Get_user_input[1])	 
end
function CA_pointer_search()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_OTHER)
    LoadNameAddress("_Odinitialsearch_"..Get_user_input[1])
	gg.setVisible(false)
    gg.searchPointer(offst)
    gg.getListItems() 
	gg.getResults(9999) 
    count = gg.getResultsCount()
    if count == 0 then
        found_("CA_pointer_search")
        return 0
    end
end    
function CA_apply_offset()
    applyoffset(0xFFFFFFFFFFFFFFF0, gg.TYPE_QWORD)
    gg.refineNumber("0", gg.TYPE_QWORD, false, gg.SIGN_NOT_EQUAL, 0, -1, 0)	
    AddNameAddress("_CAapplyoffset_"..Get_user_input[1])	   
end  
function Q_apply_fix()
    gg.setRanges(gg.REGION_ANONYMOUS)
	LoadNameAddress("_CAapplyoffset_"..Get_user_input[1])
    count = gg.getResultsCount()
    if count == 0 then
        found_("Q_apply_fix")
        return 0
    end
    yy = gg.getResults(9999)
    gg.clearResults()
    i = 1
    c = 1
    s = {}
    while (i-1) < count do
        yy[i].address = yy[i].address + 0xB400000000000000
		gg.setVisible(false)
        gg.searchNumber(yy[i].address, gg.TYPE_QWORD)
        local cnt = gg.getResultsCount()
        if 0 < cnt then
            bytr = gg.getResults(cnt)
            n = 1
            while (n-1) < cnt do
                s[c] = {}
                s[c].address = bytr[n].address
                s[c].flags = 32
                n = n + 1
                c = c + 1
            end
        end
        gg.clearResults()
        i = i + 1
    end
	for i, v in ipairs(s) do
		v.name = "_Qapplyfix_"..Get_user_input[1]
	end
	gg.addListItems(s)
end    
function A_base_value()
    gg.setRanges(gg.REGION_ANONYMOUS)
    LoadNameAddress("_CAapplyoffset_"..Get_user_input[1])
	gg.setVisible(false)	
    gg.searchPointer(offst)
    count = gg.getResultsCount()
    if count == 0 then
        found_("A_base_value")
        return 0
    end
    AddNameAddress("_Abasevalue_"..Get_user_input[1])	   
end
function A_base_accuracy()
    gg.setRanges(gg.REGION_ANONYMOUS | gg.REGION_C_ALLOC)
    LoadNameAddress("_Abasevalue_"..Get_user_input[1])
	gg.setVisible(false)
    gg.searchPointer(offst)
    count = gg.getResultsCount()
    if count == 0 then
        found_("A_base_accuracy")
        return 0
    end
    kol = gg.getResults(count)
    i = 1
    h = {}
    while (i-1) < count do
        h[i] = {}
        h[i].address = kol[i].value
        h[i].flags = 32
        i = i + 1
    end
    AddNameAddress("_Abaseaccuracy_"..Get_user_input[1])	   
end
function A_base_accuracy2()
    gg.setRanges(gg.REGION_ANONYMOUS | gg.REGION_C_ALLOC)
    LoadNameAddress("_Qapplyfix_"..Get_user_input[1])
	gg.setVisible(false)
    gg.searchPointer(offst)
    count = gg.getResultsCount()
    if count == 0 then
        found_("A_base_accuracy")
        return 0
    end
    kol = gg.getResults(count)
    i = 1
    h = {}
    while (i-1) < count do
    h[i] = {}
    h[i].address = kol[i].value
    h[i].flags = 32
    i = i + 1
    end
	AddNameAddress("_Abaseaccuracy_"..Get_user_input[1])	   
end
function start()
    gg.toast("🟡First Try")
    O_dinitial_search()
    if error > 1 then
        return 0
    end
    CA_pointer_search()
    if error > 1 then
        return 0
    end
    CA_apply_offset()
    if error > 1 then
        return 0
    end
    Q_apply_fix()
    if error > 1 then
        return 0
    end
    A_base_accuracy2()
    if error > 1 then
        return 0
    end
    loopCheck()
    if error > 1 then
        return 0
    end
end 
function second_start()
    gg.toast("🟡Second Try")
    O_dinitial_search()
    if error > 0 then
        return 0
    end
    CA_pointer_search()
    if error > 0 then
        return 0
    end
    CA_apply_offset()
    if error > 0 then
        return 0
    end
    A_base_value()
    if error > 0 then
        return 0
    end
    A_base_accuracy()
    if error > 0 then
        return 0
    end
    loopCheck()
    if error > 0 then
        return 0
    end
end 
function third_start()
    gg.toast("🔴Third Try")
    O_dinitial_search()
    if error > 2 then
        return 0
    end
    CA_pointer_search()
    if error > 2 then
        return 0
    end
    CA_apply_offset()
    if error > 2 then
        return 0
    end
    A_base_value()
    if error > 2 then
        return 0
    end
    A_base_accuracy()
    if error > 2 then
    return 0
    end
    loopCheck()
    if error > 2 then
        return 0
    end
end
function fourth_start()
    gg.toast("☢️Fourth Try")
    O_dinitial_search()
    CA_pointer_search()
    CA_apply_offset()
    Q_apply_fix()
    A_base_accuracy2()
    loopCheck()
end
function stopClose()
    while true do
        Main()
        gg.setVisible(false)
        while gg.isVisible() == false do
        end
    end
end
-- スタートは"Main"
stopClose()
